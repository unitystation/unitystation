<?xml version="1.0" encoding="utf-8"?>
<test-run id="2" testcasecount="755" result="Skipped:Ignored" total="755" passed="738" failed="0" inconclusive="0" skipped="17" asserts="0" engine-version="3.5.0.0" clr-version="4.0.30319.42000" start-time="2020-06-13 18:29:35Z" end-time="2020-06-13 18:30:59Z" duration="83.4126575">
  <test-suite type="TestSuite" id="1890" name="Mirror" fullname="Mirror" runstate="Runnable" testcasecount="761" result="Skipped" label="Ignored" start-time="2020-06-13 18:29:35Z" end-time="2020-06-13 18:30:59Z" duration="83.412658" total="755" passed="738" failed="0" inconclusive="0" skipped="17" asserts="0">
    <properties />
    <reason>
      <message><![CDATA[One or more child tests were ignored]]></message>
    </reason>
    <test-suite type="Assembly" id="2767" name="Mirror.Tests.dll" fullname="/Users/qwerty/x/dev/project_Mirror/Repository/Library/ScriptAssemblies/Mirror.Tests.dll" runstate="Runnable" testcasecount="755" result="Skipped" label="Ignored" start-time="2020-06-13 18:29:35Z" end-time="2020-06-13 18:30:57Z" duration="81.114000" total="755" passed="738" failed="0" inconclusive="0" skipped="17" asserts="0">
      <properties>
        <property name="_PID" value="45223" />
        <property name="_APPDOMAIN" value="Unity Child Domain" />
      </properties>
      <reason>
        <message><![CDATA[One or more child tests were ignored]]></message>
      </reason>
      <test-suite type="TestSuite" id="2770" name="Mirror" fullname="Mirror" runstate="Runnable" testcasecount="738" result="Passed" start-time="2020-06-13 18:29:35Z" end-time="2020-06-13 18:30:55Z" duration="79.227985" total="738" passed="738" failed="0" inconclusive="0" skipped="0" asserts="0">
        <properties />
        <test-suite type="TestSuite" id="2773" name="Tests" fullname="Mirror.Tests" runstate="Runnable" testcasecount="561" result="Passed" start-time="2020-06-13 18:29:35Z" end-time="2020-06-13 18:29:46Z" duration="11.011821" total="561" passed="561" failed="0" inconclusive="0" skipped="0" asserts="0">
          <properties />
          <test-suite type="TestFixture" id="2116" name="ArraySegmentWriterTest" fullname="Mirror.Tests.ArraySegmentWriterTest" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-06-13 18:29:35Z" end-time="2020-06-13 18:29:35Z" duration="0.051022" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2117" name="TestEmptyByteArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestEmptyByteArray" methodname="TestEmptyByteArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="923889518" result="Passed" start-time="2020-06-13 18:29:35Z" end-time="2020-06-13 18:29:35Z" duration="0.020681" asserts="0">
              <properties />
            </test-case>
            <test-case id="2120" name="TestEmptyIntArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestEmptyIntArray" methodname="TestEmptyIntArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="712201460" result="Passed" start-time="2020-06-13 18:29:35Z" end-time="2020-06-13 18:29:35Z" duration="0.000951" asserts="0">
              <properties />
            </test-case>
            <test-case id="2118" name="TestNullByteArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestNullByteArray" methodname="TestNullByteArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="792682676" result="Passed" start-time="2020-06-13 18:29:35Z" end-time="2020-06-13 18:29:35Z" duration="0.000447" asserts="0">
              <properties />
            </test-case>
            <test-case id="2121" name="TestNullIntArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestNullIntArray" methodname="TestNullIntArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="785167347" result="Passed" start-time="2020-06-13 18:29:35Z" end-time="2020-06-13 18:29:35Z" duration="0.000354" asserts="0">
              <properties />
            </test-case>
            <test-case id="2119" name="TestSegmentByteArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestSegmentByteArray" methodname="TestSegmentByteArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="1964110455" result="Passed" start-time="2020-06-13 18:29:35Z" end-time="2020-06-13 18:29:35Z" duration="0.002126" asserts="0">
              <properties />
            </test-case>
            <test-case id="2122" name="TestSegmentIntArray" fullname="Mirror.Tests.ArraySegmentWriterTest.TestSegmentIntArray" methodname="TestSegmentIntArray" classname="Mirror.Tests.ArraySegmentWriterTest" runstate="Runnable" seed="996016818" result="Passed" start-time="2020-06-13 18:29:35Z" end-time="2020-06-13 18:29:35Z" duration="0.001027" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2123" name="ArrayWriterTest" fullname="Mirror.Tests.ArrayWriterTest" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-06-13 18:29:35Z" end-time="2020-06-13 18:29:36Z" duration="0.032085" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2126" name="TestDataByteArray" fullname="Mirror.Tests.ArrayWriterTest.TestDataByteArray" methodname="TestDataByteArray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="170317205" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.001622" asserts="0">
              <properties />
            </test-case>
            <test-case id="2129" name="TestDataIntArray" fullname="Mirror.Tests.ArrayWriterTest.TestDataIntArray" methodname="TestDataIntArray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="1266712722" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.000681" asserts="0">
              <properties />
            </test-case>
            <test-case id="2125" name="TestEmptyByteArray" fullname="Mirror.Tests.ArrayWriterTest.TestEmptyByteArray" methodname="TestEmptyByteArray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="1589294745" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.000418" asserts="0">
              <properties />
            </test-case>
            <test-case id="2128" name="TestEmptyIntArray" fullname="Mirror.Tests.ArrayWriterTest.TestEmptyIntArray" methodname="TestEmptyIntArray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="832334706" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.000315" asserts="0">
              <properties />
            </test-case>
            <test-case id="2124" name="TestNullByterray" fullname="Mirror.Tests.ArrayWriterTest.TestNullByterray" methodname="TestNullByterray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="1577104859" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.000280" asserts="0">
              <properties />
            </test-case>
            <test-case id="2127" name="TestNullIntArray" fullname="Mirror.Tests.ArrayWriterTest.TestNullIntArray" methodname="TestNullIntArray" classname="Mirror.Tests.ArrayWriterTest" runstate="Runnable" seed="472591270" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.000288" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2130" name="BasicAuthenticatorTest" fullname="Mirror.Tests.BasicAuthenticatorTest" classname="Mirror.Tests.BasicAuthenticatorTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.011480" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2131" name="AuthRequestMessageTest" fullname="Mirror.Tests.BasicAuthenticatorTest.AuthRequestMessageTest" methodname="AuthRequestMessageTest" classname="Mirror.Tests.BasicAuthenticatorTest" runstate="Runnable" seed="1776236361" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.001354" asserts="0">
              <properties />
            </test-case>
            <test-case id="2132" name="AuthResponseMessageTest" fullname="Mirror.Tests.BasicAuthenticatorTest.AuthResponseMessageTest" methodname="AuthResponseMessageTest" classname="Mirror.Tests.BasicAuthenticatorTest" runstate="Runnable" seed="262366040" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.000766" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="2776" name="ClientSceneTests" fullname="Mirror.Tests.ClientSceneTests" runstate="Runnable" testcasecount="88" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:37Z" duration="1.762155" total="88" passed="88" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="2625" name="ClientSceneTests_ClearSpawners" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" runstate="Runnable" testcasecount="4" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.066247" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2629" name="ClearsAllDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners.ClearsAllDictionary" methodname="ClearsAllDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" runstate="Runnable" seed="847350952" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.010037" asserts="0">
                <properties />
              </test-case>
              <test-case id="2626" name="RemovesAllPrefabsFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners.RemovesAllPrefabsFromDictionary" methodname="RemovesAllPrefabsFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" runstate="Runnable" seed="1453331041" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.016784" asserts="0">
                <properties />
              </test-case>
              <test-case id="2627" name="RemovesAllSpawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners.RemovesAllSpawnHandlersFromDictionary" methodname="RemovesAllSpawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" runstate="Runnable" seed="1295644300" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.014830" asserts="0">
                <properties />
              </test-case>
              <test-case id="2628" name="RemovesAllUnspawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners.RemovesAllUnspawnHandlersFromDictionary" methodname="RemovesAllUnspawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_ClearSpawners" runstate="Runnable" seed="1337945183" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.016076" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2630" name="ClientSceneTests_GetPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.084612" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2635" name="HasOutPrefabWithCorrectGuid" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab.HasOutPrefabWithCorrectGuid" methodname="HasOutPrefabWithCorrectGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" seed="1215898979" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.010347" asserts="0">
                <properties />
              </test-case>
              <test-case id="2631" name="ReturnsFalseForEmptyGuid" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab.ReturnsFalseForEmptyGuid" methodname="ReturnsFalseForEmptyGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" seed="1922958230" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.011389" asserts="0">
                <properties />
              </test-case>
              <test-case id="2633" name="ReturnsFalseForPrefabIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab.ReturnsFalseForPrefabIsNull" methodname="ReturnsFalseForPrefabIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" seed="565535803" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.011587" asserts="0">
                <properties />
              </test-case>
              <test-case id="2632" name="ReturnsFalseForPrefabNotFound" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab.ReturnsFalseForPrefabNotFound" methodname="ReturnsFalseForPrefabNotFound" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" seed="118144445" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.025964" asserts="0">
                <properties />
              </test-case>
              <test-case id="2634" name="ReturnsTrueWhenPrefabIsFound" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab.ReturnsTrueWhenPrefabIsFound" methodname="ReturnsTrueWhenPrefabIsFound" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_GetPrefab" runstate="Runnable" seed="95215185" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.014467" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2636" name="ClientSceneTests_PrepareToSpawnSceneObjects" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.101769" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2637" name="AddsAllInactiveIdentitiesInSceneWithSceneIdToDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects.AddsAllInactiveIdentitiesInSceneWithSceneIdToDictionary" methodname="AddsAllInactiveIdentitiesInSceneWithSceneIdToDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" seed="1886952365" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.018388" asserts="0">
                <properties />
              </test-case>
              <test-case id="2640" name="AddsIdentitiesToDictionaryUsingSceneId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects.AddsIdentitiesToDictionaryUsingSceneId" methodname="AddsIdentitiesToDictionaryUsingSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" seed="964798748" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.014046" asserts="0">
                <properties />
              </test-case>
              <test-case id="2641" name="ClearsExistingItemsFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects.ClearsExistingItemsFromDictionary" methodname="ClearsExistingItemsFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" seed="234159655" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.024458" asserts="0">
                <properties />
              </test-case>
              <test-case id="2638" name="DoesNotAddActiveObjectsToDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects.DoesNotAddActiveObjectsToDictionary" methodname="DoesNotAddActiveObjectsToDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" seed="622939658" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.015463" asserts="0">
                <properties />
              </test-case>
              <test-case id="2639" name="DoesNotAddObjectsWithNoSceneId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects.DoesNotAddObjectsWithNoSceneId" methodname="DoesNotAddObjectsWithNoSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_PrepareToSpawnSceneObjects" runstate="Runnable" seed="1088385626" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.016361" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2642" name="ClientSceneTests_RegisterPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="51" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:37Z" duration="0.951897" total="51" passed="51" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-suite type="ParameterizedMethod" id="2705" name="CheckOverloadWithAssetId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.087022" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2699" name="CheckOverloadWithAssetId(Prefab,False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab,False)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="459606258" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.005629" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2700" name="CheckOverloadWithAssetId(Prefab_NewAssetId,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab_NewAssetId,True)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1630657072" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.007295" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2701" name="CheckOverloadWithAssetId(Prefab_SpawnDelegate,False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab_SpawnDelegate,False)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="654194235" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.014642" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2702" name="CheckOverloadWithAssetId(Prefab_SpawnDelegate_NewAssetId,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab_SpawnDelegate_NewAssetId,True)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="549256594" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.014646" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2703" name="CheckOverloadWithAssetId(Prefab_SpawnHandlerDelegate,False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab_SpawnHandlerDelegate,False)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="968311257" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.014999" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2704" name="CheckOverloadWithAssetId(Prefab_SpawnHandlerDelegate_NewAssetId,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithAssetId(Prefab_SpawnHandlerDelegate_NewAssetId,True)" methodname="CheckOverloadWithAssetId" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1406964323" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.015046" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2712" name="CheckOverloadWithHandler" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.107996" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2706" name="CheckOverloadWithHandler(Prefab,False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab,False)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1825650322" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.014447" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2707" name="CheckOverloadWithHandler(Prefab_NewAssetId,False)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab_NewAssetId,False)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="567018141" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.014370" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2708" name="CheckOverloadWithHandler(Prefab_SpawnDelegate,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab_SpawnDelegate,True)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1339902711" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.015395" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2709" name="CheckOverloadWithHandler(Prefab_SpawnDelegate_NewAssetId,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab_SpawnDelegate_NewAssetId,True)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1712928050" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.016317" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2710" name="CheckOverloadWithHandler(Prefab_SpawnHandlerDelegate,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab_SpawnHandlerDelegate,True)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="1912594365" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.015514" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2711" name="CheckOverloadWithHandler(Prefab_SpawnHandlerDelegate_NewAssetId,True)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.CheckOverloadWithHandler(Prefab_SpawnHandlerDelegate_NewAssetId,True)" methodname="CheckOverloadWithHandler" classname="Mirror.Tests.ClientSceneTests_RegisterPrefabBase" runstate="Runnable" seed="393368580" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.015267" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2656" name="ErrorForNullPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.105534" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2650" name="ErrorForNullPrefab(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1921394304" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.014534" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register prefab because it was null
]]></output>
                </test-case>
                <test-case id="2651" name="ErrorForNullPrefab(Prefab_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab_NewAssetId)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="668541927" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.018117" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register prefab because it was null
]]></output>
                </test-case>
                <test-case id="2652" name="ErrorForNullPrefab(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab_SpawnDelegate)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="490132128" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.014111" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for prefab because the prefab was null
]]></output>
                </test-case>
                <test-case id="2653" name="ErrorForNullPrefab(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab_SpawnDelegate_NewAssetId)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="607355885" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.014994" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for prefab because the prefab was null
]]></output>
                </test-case>
                <test-case id="2654" name="ErrorForNullPrefab(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab_SpawnHandlerDelegate)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="860904260" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.016792" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for prefab because the prefab was null
]]></output>
                </test-case>
                <test-case id="2655" name="ErrorForNullPrefab(Prefab_SpawnHandlerDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForNullPrefab(Prefab_SpawnHandlerDelegate_NewAssetId)" methodname="ErrorForNullPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1839148920" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.014152" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for prefab because the prefab was null
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2663" name="ErrorForPrefabWithoutNetworkIdentity" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.091401" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2657" name="ErrorForPrefabWithoutNetworkIdentity(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="838453791" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.009707" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
                <test-case id="2658" name="ErrorForPrefabWithoutNetworkIdentity(Prefab_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab_NewAssetId)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="910346061" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.011306" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
                <test-case id="2659" name="ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnDelegate)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1768476895" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.010890" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
                <test-case id="2660" name="ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnDelegate_NewAssetId)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="454654013" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.010877" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
                <test-case id="2661" name="ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnHandlerDelegate)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1374669211" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.010451" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
                <test-case id="2662" name="ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnHandlerDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorForPrefabWithoutNetworkIdentity(Prefab_SpawnHandlerDelegate_NewAssetId)" methodname="ErrorForPrefabWithoutNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="410320074" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.012601" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2671" name="ErrorIfPrefabHadSceneId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorIfPrefabHadSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.054468" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2668" name="ErrorIfPrefabHadSceneId(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorIfPrefabHadSceneId(Prefab)" methodname="ErrorIfPrefabHadSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1103021309" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.010129" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register 'ValidPrefabForClientScene(Clone)' because it has a sceneId, make sure you are passing in the original prefab and not an instance in the scene.
]]></output>
                </test-case>
                <test-case id="2669" name="ErrorIfPrefabHadSceneId(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorIfPrefabHadSceneId(Prefab_SpawnDelegate)" methodname="ErrorIfPrefabHadSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="715942929" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.019444" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register 'ValidPrefabForClientScene(Clone)' because it has a sceneId, make sure you are passing in the original prefab and not an instance in the scene.
]]></output>
                </test-case>
                <test-case id="2670" name="ErrorIfPrefabHadSceneId(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.ErrorIfPrefabHadSceneId(Prefab_SpawnHandlerDelegate)" methodname="ErrorIfPrefabHadSceneId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1054252878" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.013644" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register 'ValidPrefabForClientScene(Clone)' because it has a sceneId, make sure you are passing in the original prefab and not an instance in the scene.
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2680" name="Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.038360" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2678" name="Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary(Prefab_SpawnDelegate)" methodname="Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="562951297" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.010599" asserts="0">
                  <properties />
                  <output><![CDATA[assetId '33169286-da03-13d4-5ab5-bfccc6cf3775' is already used by prefab 'ValidPrefabForClientScene', unregister the prefab first before trying to add handler
]]></output>
                </test-case>
                <test-case id="2679" name="Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary(Prefab_SpawnHandlerDelegate)" methodname="Handler_ErrorForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1979439245" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.010115" asserts="0">
                  <properties />
                  <output><![CDATA[assetId '33169286-da03-13d4-5ab5-bfccc6cf3775' is already used by prefab 'ValidPrefabForClientScene', unregister the prefab first before trying to add handler
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2698" name="Handler_ErrorWhenUnSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.034810" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2696" name="Handler_ErrorWhenUnSpawnHandlerIsNull(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorWhenUnSpawnHandlerIsNull(Prefab_SpawnDelegate)" methodname="Handler_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="2060312052" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.006552" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register null UnSpawnHandler for 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
                <test-case id="2697" name="Handler_ErrorWhenUnSpawnHandlerIsNull(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Handler_ErrorWhenUnSpawnHandlerIsNull(Prefab_SpawnHandlerDelegate)" methodname="Handler_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1670981332" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.012178" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register null UnSpawnHandler for 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2649" name="HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.027932" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2647" name="HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_SpawnDelegate_NewAssetId)" methodname="HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="69427801" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.009861" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register Handler for 'ValidPrefabForClientScene' to 5794128c-dfda-0454-2985-151f82990d05 because it already had an AssetId, Existing assetId 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
                <test-case id="2648" name="HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_SpawnHandlerDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_SpawnHandlerDelegate_NewAssetId)" methodname="HandlerNewGuid_ErrorDoesNotChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="307783345" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.010977" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register Handler for 'ValidPrefabForClientScene' to 5794128c-dfda-0454-2985-151f82990d05 because it already had an AssetId, Existing assetId 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2667" name="NewGuid_ErrorForEmptyGuid" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.NewGuid_ErrorForEmptyGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.049217" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2664" name="NewGuid_ErrorForEmptyGuid(Prefab_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.NewGuid_ErrorForEmptyGuid(Prefab_NewAssetId)" methodname="NewGuid_ErrorForEmptyGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1448017214" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.010917" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register 'ValidPrefabForClientScene' with new assetId because the new assetId was empty
]]></output>
                </test-case>
                <test-case id="2665" name="NewGuid_ErrorForEmptyGuid(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.NewGuid_ErrorForEmptyGuid(Prefab_SpawnDelegate_NewAssetId)" methodname="NewGuid_ErrorForEmptyGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="670912629" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.009582" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'ValidPrefabForClientScene' with new assetId because the new assetId was empty
]]></output>
                </test-case>
                <test-case id="2666" name="NewGuid_ErrorForEmptyGuid(Prefab_SpawnHandlerDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.NewGuid_ErrorForEmptyGuid(Prefab_SpawnHandlerDelegate_NewAssetId)" methodname="NewGuid_ErrorForEmptyGuid" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1882848588" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.017280" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register handler for 'ValidPrefabForClientScene' with new assetId because the new assetId was empty
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2644" name="Prefab_AddsPrefabToDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Prefab_AddsPrefabToDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.010896" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2643" name="Prefab_AddsPrefabToDictionary(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Prefab_AddsPrefabToDictionary(Prefab)" methodname="Prefab_AddsPrefabToDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="39214992" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:36Z" duration="0.006745" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2677" name="Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:36Z" end-time="2020-06-13 18:29:37Z" duration="0.026770" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2676" name="Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary(Prefab)" methodname="Prefab_WarningForAssetIdAlreadyExistingInPrefabsDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="526394559" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.010825" asserts="0">
                  <properties />
                  <output><![CDATA[Replacing existing prefab with assetId '33169286-da03-13d4-5ab5-bfccc6cf3775'. Old prefab 'ValidPrefabForClientScene', New prefab 'ValidPrefabForClientScene'
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2646" name="PrefabNewGuid_ErrorDoesNotChangePrefabsAssetId" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.PrefabNewGuid_ErrorDoesNotChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.016679" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2645" name="PrefabNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.PrefabNewGuid_ErrorDoesNotChangePrefabsAssetId(Prefab_NewAssetId)" methodname="PrefabNewGuid_ErrorDoesNotChangePrefabsAssetId" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1991038311" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.010811" asserts="0">
                  <properties />
                  <output><![CDATA[Could not register 'ValidPrefabForClientScene' to 5794128c-dfda-0454-2985-151f82990d05 because it already had an AssetId, Existing assetId 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2686" name="SpawnDelegate_AddsHandlerToSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.011810" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2685" name="SpawnDelegate_AddsHandlerToSpawnHandlers(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_AddsHandlerToSpawnHandlers(Prefab_SpawnDelegate)" methodname="SpawnDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1588117287" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.006116" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2688" name="SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.021857" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2687" name="SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments(Prefab_SpawnDelegate)" methodname="SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="452749459" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.005665" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2691" name="SpawnDelegate_ErrorWhenSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.028900" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2689" name="SpawnDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnDelegate)" methodname="SpawnDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="228485497" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.011300" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register null SpawnHandler for 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
                <test-case id="2690" name="SpawnDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnDelegate_NewAssetId)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnDelegate_NewAssetId)" methodname="SpawnDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1619683164" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.008739" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register null SpawnHandler for 5794128c-dfda-0454-2985-151f82990d05
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2693" name="SpawnHandleDelegate_AddsHandlerToSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnHandleDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.012660" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2692" name="SpawnHandleDelegate_AddsHandlerToSpawnHandlers(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnHandleDelegate_AddsHandlerToSpawnHandlers(Prefab_SpawnHandlerDelegate)" methodname="SpawnHandleDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1612038531" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.006086" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2695" name="SpawnHandleDelegate_ErrorWhenSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnHandleDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.028903" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2694" name="SpawnHandleDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.SpawnHandleDelegate_ErrorWhenSpawnHandlerIsNull(Prefab_SpawnHandlerDelegate)" methodname="SpawnHandleDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1512194544" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.019822" asserts="0">
                  <properties />
                  <output><![CDATA[Can not Register null SpawnHandler for 33169286-da03-13d4-5ab5-bfccc6cf3775
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2684" name="WarningForAssetIdAlreadyExistingInHandlersDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForAssetIdAlreadyExistingInHandlersDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.046677" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2681" name="WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab)" methodname="WarningForAssetIdAlreadyExistingInHandlersDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1663490034" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.009837" asserts="0">
                  <properties />
                  <output><![CDATA[Adding prefab 'ValidPrefabForClientScene' with assetId '33169286-da03-13d4-5ab5-bfccc6cf3775' when spawnHandlers with same assetId already exists.
]]></output>
                </test-case>
                <test-case id="2682" name="WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab_SpawnDelegate)" methodname="WarningForAssetIdAlreadyExistingInHandlersDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="2102541423" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.011197" asserts="0">
                  <properties />
                  <output><![CDATA[Replacing existing spawnHandlers for prefab 'ValidPrefabForClientScene' with assetId '33169286-da03-13d4-5ab5-bfccc6cf3775'
]]></output>
                </test-case>
                <test-case id="2683" name="WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForAssetIdAlreadyExistingInHandlersDictionary(Prefab_SpawnHandlerDelegate)" methodname="WarningForAssetIdAlreadyExistingInHandlersDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="511766750" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.014877" asserts="0">
                  <properties />
                  <output><![CDATA[Replacing existing spawnHandlers for prefab 'ValidPrefabForClientScene' with assetId '33169286-da03-13d4-5ab5-bfccc6cf3775'
]]></output>
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2675" name="WarningForNetworkIdentityInChildren" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForNetworkIdentityInChildren" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.040444" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2672" name="WarningForNetworkIdentityInChildren(Prefab)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForNetworkIdentityInChildren(Prefab)" methodname="WarningForNetworkIdentityInChildren" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1727763134" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.010587" asserts="0">
                  <properties />
                  <output><![CDATA[Prefab 'PrefabWithChildrenForClientScene' has multiple NetworkIdentity components. There should only be one NetworkIdentity on a prefab, and it must be on the root object.
]]></output>
                </test-case>
                <test-case id="2673" name="WarningForNetworkIdentityInChildren(Prefab_SpawnDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForNetworkIdentityInChildren(Prefab_SpawnDelegate)" methodname="WarningForNetworkIdentityInChildren" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="2105720720" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.010086" asserts="0">
                  <properties />
                  <output><![CDATA[Prefab 'PrefabWithChildrenForClientScene' has multiple NetworkIdentity components. There should only be one NetworkIdentity on a prefab, and it must be on the root object.
]]></output>
                </test-case>
                <test-case id="2674" name="WarningForNetworkIdentityInChildren(Prefab_SpawnHandlerDelegate)" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab.WarningForNetworkIdentityInChildren(Prefab_SpawnHandlerDelegate)" methodname="WarningForNetworkIdentityInChildren" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterPrefab" runstate="Runnable" seed="1176556611" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.010646" asserts="0">
                  <properties />
                  <output><![CDATA[Prefab 'PrefabWithChildrenForClientScene' has multiple NetworkIdentity components. There should only be one NetworkIdentity on a prefab, and it must be on the root object.
]]></output>
                </test-case>
              </test-suite>
            </test-suite>
            <test-suite type="TestFixture" id="2713" name="ClientSceneTests_RegisterSpawnHandler" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" testcasecount="15" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.250927" total="15" passed="15" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2714" name="SpawnDelegate_AddsHandlerToSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_AddsHandlerToSpawnHandlers" methodname="SpawnDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1467033841" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.005259" asserts="0">
                <properties />
              </test-case>
              <test-case id="2715" name="SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" methodname="SpawnDelegate_AddsHandlerToSpawnHandlersWithCorrectArguments" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="360183013" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.017725" asserts="0">
                <properties />
              </test-case>
              <test-case id="2716" name="SpawnDelegate_AddsHandlerToUnSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_AddsHandlerToUnSpawnHandlers" methodname="SpawnDelegate_AddsHandlerToUnSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="2101459802" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.014541" asserts="0">
                <properties />
              </test-case>
              <test-case id="2719" name="SpawnDelegate_ErrorWhenAssetIdIsEmpty" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_ErrorWhenAssetIdIsEmpty" methodname="SpawnDelegate_ErrorWhenAssetIdIsEmpty" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="109626579" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.014124" asserts="0">
                <properties />
                <output><![CDATA[Can not Register SpawnHandler for empty Guid
]]></output>
              </test-case>
              <test-case id="2721" name="SpawnDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" methodname="SpawnDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1044033748" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.017362" asserts="0">
                <properties />
                <output><![CDATA[assetId '5c2f2eff-1082-4177-8df2-0a5444818de4' is already used by prefab 'ValidPrefabForClientScene'
]]></output>
              </test-case>
              <test-case id="2717" name="SpawnDelegate_ErrorWhenSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_ErrorWhenSpawnHandlerIsNull" methodname="SpawnDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1892061949" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.013261" asserts="0">
                <properties />
                <output><![CDATA[Can not Register null SpawnHandler for d67e5734-a714-43a3-9c58-a27223e6e518
]]></output>
              </test-case>
              <test-case id="2718" name="SpawnDelegate_ErrorWhenUnSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_ErrorWhenUnSpawnHandlerIsNull" methodname="SpawnDelegate_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="47903774" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.016523" asserts="0">
                <properties />
                <output><![CDATA[Can not Register null UnSpawnHandler for 2babdf98-1e33-48b9-9415-edd07c93e668
]]></output>
              </test-case>
              <test-case id="2720" name="SpawnDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" methodname="SpawnDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1517055761" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.015914" asserts="0">
                <properties />
                <output><![CDATA[Replacing existing spawnHandlers for 2def9db2-bf3d-4e28-bba7-b43d37ba5e27
]]></output>
              </test-case>
              <test-case id="2722" name="SpawnHandlerDelegate_AddsHandlerToSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_AddsHandlerToSpawnHandlers" methodname="SpawnHandlerDelegate_AddsHandlerToSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="943578842" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.016037" asserts="0">
                <properties />
              </test-case>
              <test-case id="2723" name="SpawnHandlerDelegate_AddsHandlerToUnSpawnHandlers" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_AddsHandlerToUnSpawnHandlers" methodname="SpawnHandlerDelegate_AddsHandlerToUnSpawnHandlers" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="204223138" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.014287" asserts="0">
                <properties />
              </test-case>
              <test-case id="2726" name="SpawnHandlerDelegate_ErrorWhenAssetIdIsEmpty" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_ErrorWhenAssetIdIsEmpty" methodname="SpawnHandlerDelegate_ErrorWhenAssetIdIsEmpty" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="215639012" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.015261" asserts="0">
                <properties />
                <output><![CDATA[Can not Register SpawnHandler for empty Guid
]]></output>
              </test-case>
              <test-case id="2728" name="SpawnHandlerDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" methodname="SpawnHandlerDelegate_ErrorWhenHandlerForGuidAlreadyExistsInPrefabDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1462167389" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.014715" asserts="0">
                <properties />
                <output><![CDATA[assetId '698532fc-2050-4bff-99f3-e6fd4a12cce3' is already used by prefab 'ValidPrefabForClientScene'
]]></output>
              </test-case>
              <test-case id="2724" name="SpawnHandlerDelegate_ErrorWhenSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_ErrorWhenSpawnHandlerIsNull" methodname="SpawnHandlerDelegate_ErrorWhenSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1396711860" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.024176" asserts="0">
                <properties />
                <output><![CDATA[Can not Register null SpawnHandler for cfb5b608-670e-4d7e-aa15-94d2a939354f
]]></output>
              </test-case>
              <test-case id="2725" name="SpawnHandlerDelegate_ErrorWhenUnSpawnHandlerIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_ErrorWhenUnSpawnHandlerIsNull" methodname="SpawnHandlerDelegate_ErrorWhenUnSpawnHandlerIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="69546220" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.009346" asserts="0">
                <properties />
                <output><![CDATA[Can not Register null UnSpawnHandler for 4c1278c9-e059-41de-90b6-92142bd19516
]]></output>
              </test-case>
              <test-case id="2727" name="SpawnHandlerDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler.SpawnHandlerDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" methodname="SpawnHandlerDelegate_WarningWhenHandlerForGuidAlreadyExistsInHandlerDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_RegisterSpawnHandler" runstate="Runnable" seed="1749483255" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.011687" asserts="0">
                <properties />
                <output><![CDATA[Replacing existing spawnHandlers for f3c5bfa1-52f2-4a60-8b60-a372026b201e
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2729" name="ClientSceneTests_UnregisterPrefab" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.078424" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2734" name="ErrorWhenPrefabHasNoNetworkIdentity" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab.ErrorWhenPrefabHasNoNetworkIdentity" methodname="ErrorWhenPrefabHasNoNetworkIdentity" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" seed="976199717" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.005016" asserts="0">
                <properties />
                <output><![CDATA[Could not unregister 'invalidPrefabForClientScene' since it contains no NetworkIdentity component
]]></output>
              </test-case>
              <test-case id="2733" name="ErrorWhenPrefabIsNull" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab.ErrorWhenPrefabIsNull" methodname="ErrorWhenPrefabIsNull" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" seed="1982595639" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.016947" asserts="0">
                <properties />
                <output><![CDATA[Could not unregister prefab because it was null
]]></output>
              </test-case>
              <test-case id="2730" name="RemovesPrefabFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab.RemovesPrefabFromDictionary" methodname="RemovesPrefabFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" seed="1189858447" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.016193" asserts="0">
                <properties />
              </test-case>
              <test-case id="2731" name="RemovesSpawnHandlerFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab.RemovesSpawnHandlerFromDictionary" methodname="RemovesSpawnHandlerFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" seed="1015413370" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.013990" asserts="0">
                <properties />
              </test-case>
              <test-case id="2732" name="RemovesUnSpawnHandlerFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab.RemovesUnSpawnHandlerFromDictionary" methodname="RemovesUnSpawnHandlerFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterPrefab" runstate="Runnable" seed="729960973" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.015971" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2735" name="ClientSceneTests_UnregisterSpawnHandler" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.042473" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2738" name="DoesNotRemovePrefabDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler.DoesNotRemovePrefabDictionary" methodname="DoesNotRemovePrefabDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler" runstate="Runnable" seed="569495317" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.006379" asserts="0">
                <properties />
              </test-case>
              <test-case id="2736" name="RemovesSpawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler.RemovesSpawnHandlersFromDictionary" methodname="RemovesSpawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler" runstate="Runnable" seed="1513439499" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.010880" asserts="0">
                <properties />
              </test-case>
              <test-case id="2737" name="RemovesUnSpawnHandlersFromDictionary" fullname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler.RemovesUnSpawnHandlersFromDictionary" methodname="RemovesUnSpawnHandlersFromDictionary" classname="Mirror.Tests.ClientSceneTests.ClientSceneTests_UnregisterSpawnHandler" runstate="Runnable" seed="1202066891" result="Passed" start-time="2020-06-13 18:29:37Z" end-time="2020-06-13 18:29:37Z" duration="0.015789" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="2133" name="CustomAttrributeTest" fullname="Mirror.Tests.CustomAttrributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.016689" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2136" name="ClientRPCAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.ClientRPCAttributeTest" methodname="ClientRPCAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="726760410" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000449" asserts="0">
              <properties />
            </test-case>
            <test-case id="2135" name="CommandAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.CommandAttributeTest" methodname="CommandAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="1191017458" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000319" asserts="0">
              <properties />
            </test-case>
            <test-case id="2138" name="SyncEventAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.SyncEventAttributeTest" methodname="SyncEventAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="281907139" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000309" asserts="0">
              <properties />
            </test-case>
            <test-case id="2134" name="SyncVarAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.SyncVarAttributeTest" methodname="SyncVarAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="1432888313" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000328" asserts="0">
              <properties />
            </test-case>
            <test-case id="2137" name="TargetRPCAttributeTest" fullname="Mirror.Tests.CustomAttrributeTest.TargetRPCAttributeTest" methodname="TargetRPCAttributeTest" classname="Mirror.Tests.CustomAttrributeTest" runstate="Runnable" seed="1866639268" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000318" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2139" name="CustomRWTest" fullname="Mirror.Tests.CustomRWTest" classname="Mirror.Tests.CustomRWTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.008767" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2140" name="TestCustomRW" fullname="Mirror.Tests.CustomRWTest.TestCustomRW" methodname="TestCustomRW" classname="Mirror.Tests.CustomRWTest" runstate="Runnable" seed="1850382115" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000714" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2141" name="EnumReadWriteTests" fullname="Mirror.Tests.EnumReadWriteTests" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.012816" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2142" name="ByteIsSentForByteEnum" fullname="Mirror.Tests.EnumReadWriteTests.ByteIsSentForByteEnum" methodname="ByteIsSentForByteEnum" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" seed="945280365" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000553" asserts="0">
              <properties />
            </test-case>
            <test-case id="2144" name="CustomWriterIsUsedForEnum" fullname="Mirror.Tests.EnumReadWriteTests.CustomWriterIsUsedForEnum" methodname="CustomWriterIsUsedForEnum" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" seed="1211127315" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.001062" asserts="0">
              <properties />
            </test-case>
            <test-case id="2143" name="ShortIsSentForShortEnum" fullname="Mirror.Tests.EnumReadWriteTests.ShortIsSentForShortEnum" methodname="ShortIsSentForShortEnum" classname="Mirror.Tests.EnumReadWriteTests" runstate="Runnable" seed="59529934" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000448" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2145" name="ExponentialMovingAverageTest" fullname="Mirror.Tests.ExponentialMovingAverageTest" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.015432" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2146" name="TestInitial" fullname="Mirror.Tests.ExponentialMovingAverageTest.TestInitial" methodname="TestInitial" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" seed="1094784538" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.001650" asserts="0">
              <properties />
            </test-case>
            <test-case id="2147" name="TestMovingAverage" fullname="Mirror.Tests.ExponentialMovingAverageTest.TestMovingAverage" methodname="TestMovingAverage" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" seed="24334129" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000658" asserts="0">
              <properties />
            </test-case>
            <test-case id="2148" name="TestVar" fullname="Mirror.Tests.ExponentialMovingAverageTest.TestVar" methodname="TestVar" classname="Mirror.Tests.ExponentialMovingAverageTest" runstate="Runnable" seed="1853676156" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000323" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2149" name="FallbackTransportTest" fullname="Mirror.Tests.FallbackTransportTest" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" testcasecount="9" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.345054" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2150" name="TestAvailable" fullname="Mirror.Tests.FallbackTransportTest.TestAvailable" methodname="TestAvailable" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="445274619" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.115325" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2156" name="TestClient1Connected" fullname="Mirror.Tests.FallbackTransportTest.TestClient1Connected" methodname="TestClient1Connected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="2003598376" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.043764" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2157" name="TestClient2Connected" fullname="Mirror.Tests.FallbackTransportTest.TestClient2Connected" methodname="TestClient2Connected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1094280869" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.017046" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2155" name="TestClientSend" fullname="Mirror.Tests.FallbackTransportTest.TestClientSend" methodname="TestClientSend" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1984546619" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.019179" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2152" name="TestConnect" fullname="Mirror.Tests.FallbackTransportTest.TestConnect" methodname="TestConnect" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1513233050" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.018357" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2153" name="TestConnected" fullname="Mirror.Tests.FallbackTransportTest.TestConnected" methodname="TestConnected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="2009390054" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.014685" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2154" name="TestDisconnect" fullname="Mirror.Tests.FallbackTransportTest.TestDisconnect" methodname="TestDisconnect" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1471112022" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.018214" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
            <test-case id="2151" name="TestNotAvailable" fullname="Mirror.Tests.FallbackTransportTest.TestNotAvailable" methodname="TestNotAvailable" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1970959150" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.018151" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2158" name="TestServerConnected" fullname="Mirror.Tests.FallbackTransportTest.TestServerConnected" methodname="TestServerConnected" classname="Mirror.Tests.FallbackTransportTest" runstate="Runnable" seed="1860881186" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.059065" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
FallbackTransport available: Castle.Proxies.TransportProxy
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="2775" name="GeneratedWriterTests" fullname="Mirror.Tests.GeneratedWriterTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.081641" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="2623" name="FieldsInBaseClasses" fullname="Mirror.Tests.GeneratedWriterTests.FieldsInBaseClasses" classname="Mirror.Tests.GeneratedWriterTests.FieldsInBaseClasses" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.070836" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2624" name="WriterShouldIncludeFieldsInBaseClass" fullname="Mirror.Tests.GeneratedWriterTests.FieldsInBaseClasses.WriterShouldIncludeFieldsInBaseClass" methodname="WriterShouldIncludeFieldsInBaseClass" classname="Mirror.Tests.GeneratedWriterTests.FieldsInBaseClasses" runstate="Runnable" seed="733431733" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.066117" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="2159" name="LocalConnectionBufferTest" fullname="Mirror.Tests.LocalConnectionBufferTest" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.079517" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2162" name="BufferCanWriteAndReadPackages" fullname="Mirror.Tests.LocalConnectionBufferTest.BufferCanWriteAndReadPackages" methodname="BufferCanWriteAndReadPackages" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" seed="471947812" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.005646" asserts="0">
              <properties />
            </test-case>
            <test-case id="2164" name="BufferCanWriteReadMorePackageAfterCallingReset" fullname="Mirror.Tests.LocalConnectionBufferTest.BufferCanWriteReadMorePackageAfterCallingReset" methodname="BufferCanWriteReadMorePackageAfterCallingReset" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" seed="17026396" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.011874" asserts="0">
              <properties />
            </test-case>
            <test-case id="2161" name="BufferHasNoPacketsAfterWriteAndReading" fullname="Mirror.Tests.LocalConnectionBufferTest.BufferHasNoPacketsAfterWriteAndReading" methodname="BufferHasNoPacketsAfterWriteAndReading" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" seed="2071730490" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.015765" asserts="0">
              <properties />
            </test-case>
            <test-case id="2160" name="BufferHasPacketsAfterWriter" fullname="Mirror.Tests.LocalConnectionBufferTest.BufferHasPacketsAfterWriter" methodname="BufferHasPacketsAfterWriter" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" seed="643370392" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.017390" asserts="0">
              <properties />
            </test-case>
            <test-case id="2163" name="BufferReturnsMutliplePacketsInTheOrderTheyWereWriten" fullname="Mirror.Tests.LocalConnectionBufferTest.BufferReturnsMutliplePacketsInTheOrderTheyWereWriten" methodname="BufferReturnsMutliplePacketsInTheOrderTheyWereWriten" classname="Mirror.Tests.LocalConnectionBufferTest" runstate="Runnable" seed="1412586562" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.015455" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2165" name="LocalConnectionTest" fullname="Mirror.Tests.LocalConnectionTest" classname="Mirror.Tests.LocalConnectionTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.017417" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2166" name="ClientToServerFailTest" fullname="Mirror.Tests.LocalConnectionTest.ClientToServerFailTest" methodname="ClientToServerFailTest" classname="Mirror.Tests.LocalConnectionTest" runstate="Runnable" seed="1174179200" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.010737" asserts="0">
              <properties />
              <output><![CDATA[LocalConnection.SendBytes cannot send zero bytes
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2167" name="LogFactoryTests" fullname="Mirror.Tests.LogFactoryTests" classname="Mirror.Tests.LogFactoryTests" runstate="Runnable" testcasecount="4" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.019848" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2169" name="DifferentClassDifferentLogger" fullname="Mirror.Tests.LogFactoryTests.DifferentClassDifferentLogger" methodname="DifferentClassDifferentLogger" classname="Mirror.Tests.LogFactoryTests" runstate="Runnable" seed="1222369140" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000892" asserts="0">
              <properties />
            </test-case>
            <test-case id="2171" name="LogDebugFull" fullname="Mirror.Tests.LogFactoryTests.LogDebugFull" methodname="LogDebugFull" classname="Mirror.Tests.LogFactoryTests" runstate="Runnable" seed="1599609539" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.007672" asserts="0">
              <properties />
            </test-case>
            <test-case id="2170" name="LogDebugIgnore" fullname="Mirror.Tests.LogFactoryTests.LogDebugIgnore" methodname="LogDebugIgnore" classname="Mirror.Tests.LogFactoryTests" runstate="Runnable" seed="322047013" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.001194" asserts="0">
              <properties />
            </test-case>
            <test-case id="2168" name="SameClassSameLogger" fullname="Mirror.Tests.LogFactoryTests.SameClassSameLogger" methodname="SameClassSameLogger" classname="Mirror.Tests.LogFactoryTests" runstate="Runnable" seed="1917588842" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000462" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2172" name="MessageBaseTests" fullname="Mirror.Tests.MessageBaseTests" classname="Mirror.Tests.MessageBaseTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.018292" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2173" name="Roundtrip" fullname="Mirror.Tests.MessageBaseTests.Roundtrip" methodname="Roundtrip" classname="Mirror.Tests.MessageBaseTests" runstate="Runnable" seed="1669673510" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.001899" asserts="0">
              <properties />
            </test-case>
            <test-case id="2174" name="WovenSerializationBodyRoundtrip" fullname="Mirror.Tests.MessageBaseTests.WovenSerializationBodyRoundtrip" methodname="WovenSerializationBodyRoundtrip" classname="Mirror.Tests.MessageBaseTests" runstate="Runnable" seed="281974557" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.001490" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2175" name="MessageInheritanceTests" fullname="Mirror.Tests.MessageInheritanceTests" classname="Mirror.Tests.MessageInheritanceTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.010399" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2176" name="Roundtrip" fullname="Mirror.Tests.MessageInheritanceTests.Roundtrip" methodname="Roundtrip" classname="Mirror.Tests.MessageInheritanceTests" runstate="Runnable" seed="1379847162" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000823" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2177" name="MessagePackerTest" fullname="Mirror.Tests.MessagePackerTest" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.025090" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2178" name="TestPacking" fullname="Mirror.Tests.MessagePackerTest.TestPacking" methodname="TestPacking" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" seed="1837848577" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.002001" asserts="0">
              <properties />
            </test-case>
            <test-case id="2180" name="TestUnpackIdMismatch" fullname="Mirror.Tests.MessagePackerTest.TestUnpackIdMismatch" methodname="TestUnpackIdMismatch" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" seed="1075728286" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000695" asserts="0">
              <properties />
            </test-case>
            <test-case id="2181" name="TestUnpackMessageNonGeneric" fullname="Mirror.Tests.MessagePackerTest.TestUnpackMessageNonGeneric" methodname="TestUnpackMessageNonGeneric" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" seed="1711136189" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000912" asserts="0">
              <properties />
            </test-case>
            <test-case id="2182" name="UnpackInvalidMessage" fullname="Mirror.Tests.MessagePackerTest.UnpackInvalidMessage" methodname="UnpackInvalidMessage" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" seed="872248735" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.001022" asserts="0">
              <properties />
            </test-case>
            <test-case id="2179" name="UnpackWrongMessage" fullname="Mirror.Tests.MessagePackerTest.UnpackWrongMessage" methodname="UnpackWrongMessage" classname="Mirror.Tests.MessagePackerTest" runstate="Runnable" seed="374014411" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000868" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2183" name="MessageTests" fullname="Mirror.Tests.MessageTests" classname="Mirror.Tests.MessageTests" runstate="Runnable" testcasecount="17" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.041596" total="17" passed="17" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2184" name="CommandMessageTest" fullname="Mirror.Tests.MessageTests.CommandMessageTest" methodname="CommandMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1161795376" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.002052" asserts="0">
              <properties />
            </test-case>
            <test-case id="2185" name="ConnectMessageTest" fullname="Mirror.Tests.MessageTests.ConnectMessageTest" methodname="ConnectMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="431933819" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.001569" asserts="0">
              <properties />
            </test-case>
            <test-case id="2186" name="DisconnectMessageTest" fullname="Mirror.Tests.MessageTests.DisconnectMessageTest" methodname="DisconnectMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="704883535" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000961" asserts="0">
              <properties />
            </test-case>
            <test-case id="2187" name="ErrorMessageTest" fullname="Mirror.Tests.MessageTests.ErrorMessageTest" methodname="ErrorMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1437634095" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.001316" asserts="0">
              <properties />
            </test-case>
            <test-case id="2188" name="NetworkPingMessageTest" fullname="Mirror.Tests.MessageTests.NetworkPingMessageTest" methodname="NetworkPingMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1913074569" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.001215" asserts="0">
              <properties />
            </test-case>
            <test-case id="2189" name="NetworkPongMessageTest" fullname="Mirror.Tests.MessageTests.NetworkPongMessageTest" methodname="NetworkPongMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1647305713" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.001225" asserts="0">
              <properties />
            </test-case>
            <test-case id="2190" name="NotReadyMessageTest" fullname="Mirror.Tests.MessageTests.NotReadyMessageTest" methodname="NotReadyMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="944116109" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.001130" asserts="0">
              <properties />
            </test-case>
            <test-case id="2191" name="ObjectDestroyMessageTest" fullname="Mirror.Tests.MessageTests.ObjectDestroyMessageTest" methodname="ObjectDestroyMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1507628148" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000900" asserts="0">
              <properties />
            </test-case>
            <test-case id="2192" name="ObjectHideMessageTest" fullname="Mirror.Tests.MessageTests.ObjectHideMessageTest" methodname="ObjectHideMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="2083476799" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000845" asserts="0">
              <properties />
            </test-case>
            <test-case id="2193" name="ObjectSpawnFinishedMessageTest" fullname="Mirror.Tests.MessageTests.ObjectSpawnFinishedMessageTest" methodname="ObjectSpawnFinishedMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="2115757930" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000912" asserts="0">
              <properties />
            </test-case>
            <test-case id="2194" name="ObjectSpawnStartedMessageTest" fullname="Mirror.Tests.MessageTests.ObjectSpawnStartedMessageTest" methodname="ObjectSpawnStartedMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="826334658" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000908" asserts="0">
              <properties />
            </test-case>
            <test-case id="2195" name="ReadyMessageTest" fullname="Mirror.Tests.MessageTests.ReadyMessageTest" methodname="ReadyMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1826331145" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000887" asserts="0">
              <properties />
            </test-case>
            <test-case id="2196" name="RemovePlayerMessageTest" fullname="Mirror.Tests.MessageTests.RemovePlayerMessageTest" methodname="RemovePlayerMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="923529690" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.001254" asserts="0">
              <properties />
            </test-case>
            <test-case id="2197" name="RpcMessageTest" fullname="Mirror.Tests.MessageTests.RpcMessageTest" methodname="RpcMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1830834957" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.001301" asserts="0">
              <properties />
            </test-case>
            <test-case id="2198" name="SpawnMessageTest" fullname="Mirror.Tests.MessageTests.SpawnMessageTest" methodname="SpawnMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="425619009" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.002443" asserts="0">
              <properties />
            </test-case>
            <test-case id="2199" name="SyncEventMessageTest" fullname="Mirror.Tests.MessageTests.SyncEventMessageTest" methodname="SyncEventMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="1689908422" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.001181" asserts="0">
              <properties />
            </test-case>
            <test-case id="2200" name="UpdateVarsMessageTest" fullname="Mirror.Tests.MessageTests.UpdateVarsMessageTest" methodname="UpdateVarsMessageTest" classname="Mirror.Tests.MessageTests" runstate="Runnable" seed="710454025" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.000902" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2201" name="MultiplexTest" fullname="Mirror.Tests.MultiplexTest" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" testcasecount="11" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:39Z" duration="0.234870" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2202" name="TestAvailable" fullname="Mirror.Tests.MultiplexTest.TestAvailable" methodname="TestAvailable" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="558260041" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.015585" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2210" name="TestClient1Connected" fullname="Mirror.Tests.MultiplexTest.TestClient1Connected" methodname="TestClient1Connected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1651822443" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.014087" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2211" name="TestClient2Connected" fullname="Mirror.Tests.MultiplexTest.TestClient2Connected" methodname="TestClient2Connected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="138849108" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.014802" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2209" name="TestClientSend" fullname="Mirror.Tests.MultiplexTest.TestClientSend" methodname="TestClientSend" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1985577160" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.018647" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2204" name="TestConnect" fullname="Mirror.Tests.MultiplexTest.TestConnect" methodname="TestConnect" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="2016583789" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.030263" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2207" name="TestConnected" fullname="Mirror.Tests.MultiplexTest.TestConnected" methodname="TestConnected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="945857461" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.018773" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2205" name="TestConnectFirstUri" fullname="Mirror.Tests.MultiplexTest.TestConnectFirstUri" methodname="TestConnectFirstUri" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="378188130" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.018618" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2206" name="TestConnectSecondUri" fullname="Mirror.Tests.MultiplexTest.TestConnectSecondUri" methodname="TestConnectSecondUri" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1406605437" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.018185" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2208" name="TestDisconnect" fullname="Mirror.Tests.MultiplexTest.TestDisconnect" methodname="TestDisconnect" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="443453359" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:38Z" duration="0.018642" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2203" name="TestNotAvailable" fullname="Mirror.Tests.MultiplexTest.TestNotAvailable" methodname="TestNotAvailable" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="168028189" result="Passed" start-time="2020-06-13 18:29:38Z" end-time="2020-06-13 18:29:39Z" duration="0.026189" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2212" name="TestServerConnected" fullname="Mirror.Tests.MultiplexTest.TestServerConnected" methodname="TestServerConnected" classname="Mirror.Tests.MultiplexTest" runstate="Runnable" seed="1392331146" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.014292" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2268" name="NetworkBehaviourHookGuardTester" fullname="Mirror.Tests.NetworkBehaviourHookGuardTester" classname="Mirror.Tests.NetworkBehaviourHookGuardTester" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.015028" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            <test-case id="2269" name="HookGuard" fullname="Mirror.Tests.NetworkBehaviourHookGuardTester.HookGuard" methodname="HookGuard" classname="Mirror.Tests.NetworkBehaviourHookGuardTester" runstate="Runnable" seed="1734118855" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.001866" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2270" name="NetworkBehaviourInitSyncObjectTester" fullname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester" classname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.015345" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            <test-case id="2271" name="InitSyncObject" fullname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester.InitSyncObject" methodname="InitSyncObject" classname="Mirror.Tests.NetworkBehaviourInitSyncObjectTester" runstate="Runnable" seed="1849424008" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.003080" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="2774" name="NetworkBehaviourSerialize" fullname="Mirror.Tests.NetworkBehaviourSerialize" runstate="Runnable" testcasecount="16" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.403153" total="16" passed="16" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="2598" name="NetworkBehaviourSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="16" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.357027" total="16" passed="16" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-suite type="ParameterizedMethod" id="2601" name="BehaviourWithSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.039393" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2599" name="BehaviourWithSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarTest(True)" methodname="BehaviourWithSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="244321989" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.014208" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2600" name="BehaviourWithSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarTest(False)" methodname="BehaviourWithSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="633852167" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.018994" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2616" name="BehaviourWithSyncVarWithOnSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.037208" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2614" name="BehaviourWithSyncVarWithOnSerializeTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarWithOnSerializeTest(True)" methodname="BehaviourWithSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="368240339" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.005785" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2615" name="BehaviourWithSyncVarWithOnSerializeTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.BehaviourWithSyncVarWithOnSerializeTest(False)" methodname="BehaviourWithSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1238381732" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.024238" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2604" name="OverrideBehaviourFromSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.035920" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2602" name="OverrideBehaviourFromSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarTest(True)" methodname="OverrideBehaviourFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="197127314" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.010526" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2603" name="OverrideBehaviourFromSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarTest(False)" methodname="OverrideBehaviourFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="833389633" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.019569" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2619" name="OverrideBehaviourFromSyncVarWithOnSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.052240" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2617" name="OverrideBehaviourFromSyncVarWithOnSerializeTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarWithOnSerializeTest(True)" methodname="OverrideBehaviourFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="226623208" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.020063" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2618" name="OverrideBehaviourFromSyncVarWithOnSerializeTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourFromSyncVarWithOnSerializeTest(False)" methodname="OverrideBehaviourFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1166708668" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.019049" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2607" name="OverrideBehaviourWithSyncVarFromSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.035919" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2605" name="OverrideBehaviourWithSyncVarFromSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarTest(True)" methodname="OverrideBehaviourWithSyncVarFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1981326979" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.011480" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2606" name="OverrideBehaviourWithSyncVarFromSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarTest(False)" methodname="OverrideBehaviourWithSyncVarFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="774438747" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.018042" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2622" name="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.036484" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2620" name="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(True)" methodname="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1608866457" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.010755" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2621" name="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest(False)" methodname="OverrideBehaviourWithSyncVarFromSyncVarWithOnSerializeTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1003759040" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.019204" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2613" name="SubClassFromSyncVarTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.042967" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2611" name="SubClassFromSyncVarTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassFromSyncVarTest(True)" methodname="SubClassFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="880435293" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.009969" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2612" name="SubClassFromSyncVarTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassFromSyncVarTest(False)" methodname="SubClassFromSyncVarTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1430411513" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.023711" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
              <test-suite type="ParameterizedMethod" id="2610" name="SubClassTest" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.044252" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
                <properties />
                <test-case id="2608" name="SubClassTest(True)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassTest(True)" methodname="SubClassTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="1316006097" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.011181" asserts="0">
                  <properties />
                </test-case>
                <test-case id="2609" name="SubClassTest(False)" fullname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest.SubClassTest(False)" methodname="SubClassTest" classname="Mirror.Tests.NetworkBehaviourSerialize.NetworkBehaviourSerializeTest" runstate="Runnable" seed="934310255" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.018521" asserts="0">
                  <properties />
                </test-case>
              </test-suite>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="2213" name="NetworkBehaviourTests" fullname="Mirror.Tests.NetworkBehaviourTests" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" testcasecount="54" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:40Z" duration="0.959249" total="54" passed="54" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2261" name="ClearAllDirtyBitsClearsSyncObjectsDirtyBits" fullname="Mirror.Tests.NetworkBehaviourTests.ClearAllDirtyBitsClearsSyncObjectsDirtyBits" methodname="ClearAllDirtyBitsClearsSyncObjectsDirtyBits" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2067909823" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.009316" asserts="0">
              <properties />
            </test-case>
            <test-case id="2260" name="ClearAllDirtyBitsClearsSyncVarDirtyBits" fullname="Mirror.Tests.NetworkBehaviourTests.ClearAllDirtyBitsClearsSyncVarDirtyBits" methodname="ClearAllDirtyBitsClearsSyncVarDirtyBits" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1957954" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.020466" asserts="0">
              <properties />
            </test-case>
            <test-case id="2220" name="ComponentIndex" fullname="Mirror.Tests.NetworkBehaviourTests.ComponentIndex" methodname="ComponentIndex" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1488304990" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.014257" asserts="0">
              <properties />
            </test-case>
            <test-case id="2262" name="DirtyObjectBits" fullname="Mirror.Tests.NetworkBehaviourTests.DirtyObjectBits" methodname="DirtyObjectBits" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="3390348" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.015993" asserts="0">
              <properties />
            </test-case>
            <test-case id="2230" name="GetDelegate" fullname="Mirror.Tests.NetworkBehaviourTests.GetDelegate" methodname="GetDelegate" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="112301215" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.014848" asserts="0">
              <properties />
            </test-case>
            <test-case id="2251" name="GetSyncVarGameObjectOnClient" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnClient" methodname="GetSyncVarGameObjectOnClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1295398187" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.016383" asserts="0">
              <properties />
            </test-case>
            <test-case id="2252" name="GetSyncVarGameObjectOnClientNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnClientNull" methodname="GetSyncVarGameObjectOnClientNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="476596425" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.019080" asserts="0">
              <properties />
            </test-case>
            <test-case id="2249" name="GetSyncVarGameObjectOnServer" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnServer" methodname="GetSyncVarGameObjectOnServer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="525880977" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.009897" asserts="0">
              <properties />
            </test-case>
            <test-case id="2250" name="GetSyncVarGameObjectOnServerNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarGameObjectOnServerNull" methodname="GetSyncVarGameObjectOnServerNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1185336693" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.019471" asserts="0">
              <properties />
            </test-case>
            <test-case id="2258" name="GetSyncVarNetworkIdentityOnClient" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnClient" methodname="GetSyncVarNetworkIdentityOnClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1623226984" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.014143" asserts="0">
              <properties />
            </test-case>
            <test-case id="2259" name="GetSyncVarNetworkIdentityOnClientNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnClientNull" methodname="GetSyncVarNetworkIdentityOnClientNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1638474907" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.019667" asserts="0">
              <properties />
            </test-case>
            <test-case id="2256" name="GetSyncVarNetworkIdentityOnServer" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnServer" methodname="GetSyncVarNetworkIdentityOnServer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1169459163" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.010358" asserts="0">
              <properties />
            </test-case>
            <test-case id="2257" name="GetSyncVarNetworkIdentityOnServerNull" fullname="Mirror.Tests.NetworkBehaviourTests.GetSyncVarNetworkIdentityOnServerNull" methodname="GetSyncVarNetworkIdentityOnServerNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="362189207" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.019867" asserts="0">
              <properties />
            </test-case>
            <test-case id="2219" name="HasIdentitysConnectionToClient" fullname="Mirror.Tests.NetworkBehaviourTests.HasIdentitysConnectionToClient" methodname="HasIdentitysConnectionToClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1178552698" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.015173" asserts="0">
              <properties />
            </test-case>
            <test-case id="2218" name="HasIdentitysConnectionToServer" fullname="Mirror.Tests.NetworkBehaviourTests.HasIdentitysConnectionToServer" methodname="HasIdentitysConnectionToServer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="918262087" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.015089" asserts="0">
              <properties />
            </test-case>
            <test-case id="2217" name="HasIdentitysNetId" fullname="Mirror.Tests.NetworkBehaviourTests.HasIdentitysNetId" methodname="HasIdentitysNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1077516080" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.015692" asserts="0">
              <properties />
            </test-case>
            <test-case id="2216" name="HasNoAuthorityByDefault" fullname="Mirror.Tests.NetworkBehaviourTests.HasNoAuthorityByDefault" methodname="HasNoAuthorityByDefault" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1689014785" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.014613" asserts="0">
              <properties />
            </test-case>
            <test-case id="2223" name="InvokeCommand" fullname="Mirror.Tests.NetworkBehaviourTests.InvokeCommand" methodname="InvokeCommand" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1349577348" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.015380" asserts="0">
              <properties />
            </test-case>
            <test-case id="2226" name="InvokeRPC" fullname="Mirror.Tests.NetworkBehaviourTests.InvokeRPC" methodname="InvokeRPC" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="250881210" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.019212" asserts="0">
              <properties />
            </test-case>
            <test-case id="2228" name="InvokeSyncEvent" fullname="Mirror.Tests.NetworkBehaviourTests.InvokeSyncEvent" methodname="InvokeSyncEvent" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="721359939" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.014654" asserts="0">
              <properties />
            </test-case>
            <test-case id="2215" name="IsClientOnly" fullname="Mirror.Tests.NetworkBehaviourTests.IsClientOnly" methodname="IsClientOnly" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="885038485" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.019592" asserts="0">
              <properties />
            </test-case>
            <test-case id="2214" name="IsServerOnly" fullname="Mirror.Tests.NetworkBehaviourTests.IsServerOnly" methodname="IsServerOnly" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1587538586" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.011623" asserts="0">
              <properties />
            </test-case>
            <test-case id="2221" name="OnCheckObserverTrueByDefault" fullname="Mirror.Tests.NetworkBehaviourTests.OnCheckObserverTrueByDefault" methodname="OnCheckObserverTrueByDefault" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="840388354" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.020119" asserts="0">
              <properties />
            </test-case>
            <test-case id="2265" name="OnNetworkDestroy" fullname="Mirror.Tests.NetworkBehaviourTests.OnNetworkDestroy" methodname="OnNetworkDestroy" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="269909384" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.013773" asserts="0">
              <properties />
            </test-case>
            <test-case id="2266" name="OnStartClient" fullname="Mirror.Tests.NetworkBehaviourTests.OnStartClient" methodname="OnStartClient" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2120460408" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.014980" asserts="0">
              <properties />
            </test-case>
            <test-case id="2267" name="OnStartLocalPlayer" fullname="Mirror.Tests.NetworkBehaviourTests.OnStartLocalPlayer" methodname="OnStartLocalPlayer" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1161620758" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.015776" asserts="0">
              <properties />
            </test-case>
            <test-case id="2229" name="RegisterDelegateDoesntOverwrite" fullname="Mirror.Tests.NetworkBehaviourTests.RegisterDelegateDoesntOverwrite" methodname="RegisterDelegateDoesntOverwrite" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1205655409" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:39Z" duration="0.014790" asserts="0">
              <properties />
              <output><![CDATA[Function Mirror.Tests.NetworkBehaviourDelegateComponent.Delegate and Mirror.Tests.NetworkBehaviourDelegateComponent.Delegate2 have the same hash.  Please rename one of them
]]></output>
            </test-case>
            <test-case id="2222" name="SendCommandInternal" fullname="Mirror.Tests.NetworkBehaviourTests.SendCommandInternal" methodname="SendCommandInternal" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1897587877" result="Passed" start-time="2020-06-13 18:29:39Z" end-time="2020-06-13 18:29:40Z" duration="0.018615" asserts="0">
              <properties />
              <output><![CDATA[Command Function CommandGenerated called on server without an active client.
Trying to send command for object without authority. Mirror.Tests.NetworkBehaviourSendCommandInternalComponent.CommandGenerated
Send command attempted with no client running [client=].
]]></output>
            </test-case>
            <test-case id="2227" name="SendEventInternal" fullname="Mirror.Tests.NetworkBehaviourTests.SendEventInternal" methodname="SendEventInternal" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="157795385" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.018769" asserts="0">
              <properties />
              <output><![CDATA[SendEvent no server?
]]></output>
            </test-case>
            <test-case id="2224" name="SendRPCInternal" fullname="Mirror.Tests.NetworkBehaviourTests.SendRPCInternal" methodname="SendRPCInternal" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2065412657" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.019241" asserts="0">
              <properties />
              <output><![CDATA[RPC Function RPCGenerated called on Client.
ClientRpc RPCGenerated called on un-spawned object: New Game Object
]]></output>
            </test-case>
            <test-case id="2225" name="SendTargetRPCInternal" fullname="Mirror.Tests.NetworkBehaviourTests.SendTargetRPCInternal" methodname="SendTargetRPCInternal" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="35951407" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.018928" asserts="0">
              <properties />
              <output><![CDATA[TargetRPC Function TargetRPCGenerated called on client.
TargetRpc TargetRPCGenerated called on un-spawned object: New Game Object
TargetRPC Function TargetRPCGenerated called on connection to server
]]></output>
            </test-case>
            <test-case id="2263" name="SerializeAndDeserializeObjectsAll" fullname="Mirror.Tests.NetworkBehaviourTests.SerializeAndDeserializeObjectsAll" methodname="SerializeAndDeserializeObjectsAll" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="42478480" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.015534" asserts="0">
              <properties />
            </test-case>
            <test-case id="2264" name="SerializeAndDeserializeObjectsDelta" fullname="Mirror.Tests.NetworkBehaviourTests.SerializeAndDeserializeObjectsDelta" methodname="SerializeAndDeserializeObjectsDelta" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="872435379" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.015200" asserts="0">
              <properties />
            </test-case>
            <test-case id="2246" name="SetSyncVarGameObjectNull" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectNull" methodname="SetSyncVarGameObjectNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2052247154" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.014379" asserts="0">
              <properties />
            </test-case>
            <test-case id="2247" name="SetSyncVarGameObjectWithoutNetworkIdentity" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectWithoutNetworkIdentity" methodname="SetSyncVarGameObjectWithoutNetworkIdentity" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1048407322" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.020707" asserts="0">
              <properties />
            </test-case>
            <test-case id="2245" name="SetSyncVarGameObjectWithValidObject" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectWithValidObject" methodname="SetSyncVarGameObjectWithValidObject" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1140906098" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.013451" asserts="0">
              <properties />
            </test-case>
            <test-case id="2248" name="SetSyncVarGameObjectZeroNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarGameObjectZeroNetId" methodname="SetSyncVarGameObjectZeroNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="127677098" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.014549" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2254" name="SetSyncVarNetworkIdentityNull" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarNetworkIdentityNull" methodname="SetSyncVarNetworkIdentityNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="649587267" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.027591" asserts="0">
              <properties />
            </test-case>
            <test-case id="2253" name="SetSyncVarNetworkIdentityWithValidObject" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarNetworkIdentityWithValidObject" methodname="SetSyncVarNetworkIdentityWithValidObject" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2113819436" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.015119" asserts="0">
              <properties />
            </test-case>
            <test-case id="2255" name="SetSyncVarNetworkIdentityZeroNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SetSyncVarNetworkIdentityZeroNetId" methodname="SetSyncVarNetworkIdentityZeroNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1687625648" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.023977" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarNetworkIdentity NetworkIdentity New Game Object (Mirror.NetworkIdentity) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2232" name="SyncVarGameObjectEqualNull" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualNull" methodname="SyncVarGameObjectEqualNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="591509188" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.013524" asserts="0">
              <properties />
            </test-case>
            <test-case id="2237" name="SyncVarGameObjectEqualUnspawnedGO" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualUnspawnedGO" methodname="SyncVarGameObjectEqualUnspawnedGO" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="566121073" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.015429" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2238" name="SyncVarGameObjectEqualUnspawnedGOZeroNetIdIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualUnspawnedGOZeroNetIdIsTrue" methodname="SyncVarGameObjectEqualUnspawnedGOZeroNetIdIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="463550653" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.014626" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2235" name="SyncVarGameObjectEqualValidGOWithDifferentNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualValidGOWithDifferentNetId" methodname="SyncVarGameObjectEqualValidGOWithDifferentNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="940624879" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.019218" asserts="0">
              <properties />
            </test-case>
            <test-case id="2236" name="SyncVarGameObjectEqualValidGOWithSameNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualValidGOWithSameNetId" methodname="SyncVarGameObjectEqualValidGOWithSameNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="770869368" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.014685" asserts="0">
              <properties />
            </test-case>
            <test-case id="2234" name="SyncVarGameObjectEqualWithoutIdentityComponent" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualWithoutIdentityComponent" methodname="SyncVarGameObjectEqualWithoutIdentityComponent" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1521246316" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.019172" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2233" name="SyncVarGameObjectEqualZeroNetIdAndGOWithoutIdentityComponentIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualZeroNetIdAndGOWithoutIdentityComponentIsTrue" methodname="SyncVarGameObjectEqualZeroNetIdAndGOWithoutIdentityComponentIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2048776726" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.014538" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarGameObject GameObject New Game Object (UnityEngine.GameObject) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2231" name="SyncVarGameObjectEqualZeroNetIdNullIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarGameObjectEqualZeroNetIdNullIsTrue" methodname="SyncVarGameObjectEqualZeroNetIdNullIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1943985759" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.019014" asserts="0">
              <properties />
            </test-case>
            <test-case id="2240" name="SyncVarNetworkIdentityEqualNull" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualNull" methodname="SyncVarNetworkIdentityEqualNull" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="527193464" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.017882" asserts="0">
              <properties />
            </test-case>
            <test-case id="2243" name="SyncVarNetworkIdentityEqualUnspawnedIdentity" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualUnspawnedIdentity" methodname="SyncVarNetworkIdentityEqualUnspawnedIdentity" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1900081301" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.017406" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarNetworkIdentity NetworkIdentity New Game Object (Mirror.NetworkIdentity) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2244" name="SyncVarNetworkIdentityEqualUnspawnedIdentityZeroNetIdIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualUnspawnedIdentityZeroNetIdIsTrue" methodname="SyncVarNetworkIdentityEqualUnspawnedIdentityZeroNetIdIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="207428630" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.014307" asserts="0">
              <properties />
              <output><![CDATA[SetSyncVarNetworkIdentity NetworkIdentity New Game Object (Mirror.NetworkIdentity) has a zero netId. Maybe it is not spawned yet?
]]></output>
            </test-case>
            <test-case id="2241" name="SyncVarNetworkIdentityEqualValidIdentityWithDifferentNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualValidIdentityWithDifferentNetId" methodname="SyncVarNetworkIdentityEqualValidIdentityWithDifferentNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="216241715" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.014685" asserts="0">
              <properties />
            </test-case>
            <test-case id="2242" name="SyncVarNetworkIdentityEqualValidIdentityWithSameNetId" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualValidIdentityWithSameNetId" methodname="SyncVarNetworkIdentityEqualValidIdentityWithSameNetId" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="2012450420" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.018719" asserts="0">
              <properties />
            </test-case>
            <test-case id="2239" name="SyncVarNetworkIdentityEqualZeroNetIdNullIsTrue" fullname="Mirror.Tests.NetworkBehaviourTests.SyncVarNetworkIdentityEqualZeroNetIdNullIsTrue" methodname="SyncVarNetworkIdentityEqualZeroNetIdNullIsTrue" classname="Mirror.Tests.NetworkBehaviourTests" runstate="Runnable" seed="1022055225" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.013149" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2272" name="NetworkClientTests" fullname="Mirror.Tests.NetworkClientTests" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.104361" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2275" name="ConnectUri" fullname="Mirror.Tests.NetworkClientTests.ConnectUri" methodname="ConnectUri" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="1809280279" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.024708" asserts="0">
              <properties />
              <output><![CDATA[MemoryTransport Client Message: Connected
MemoryTransport Server Message: Connected
MemoryTransport Server Message: Data: 7F-81-E9-3B-64-6F-CE-2D-29-3F
]]></output>
            </test-case>
            <test-case id="2276" name="DisconnectInHostMode" fullname="Mirror.Tests.NetworkClientTests.DisconnectInHostMode" methodname="DisconnectInHostMode" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="974992104" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.016268" asserts="0">
              <properties />
            </test-case>
            <test-case id="2274" name="isConnected" fullname="Mirror.Tests.NetworkClientTests.isConnected" methodname="isConnected" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="1118144506" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.015503" asserts="0">
              <properties />
            </test-case>
            <test-case id="2277" name="Send" fullname="Mirror.Tests.NetworkClientTests.Send" methodname="Send" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="1162190387" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.014406" asserts="0">
              <properties />
              <output><![CDATA[MemoryTransport Client Message: Connected
MemoryTransport Server Message: Connected
MemoryTransport Server Message: Data: 1D-33
]]></output>
            </test-case>
            <test-case id="2273" name="serverIp" fullname="Mirror.Tests.NetworkClientTests.serverIp" methodname="serverIp" classname="Mirror.Tests.NetworkClientTests" runstate="Runnable" seed="1745450906" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.019899" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2278" name="NetworkIdentityTests" fullname="Mirror.Tests.NetworkIdentityTests" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" testcasecount="58" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:41Z" duration="1.135184" total="58" passed="58" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2322" name="AddAllReadyServerConnectionsToObservers" fullname="Mirror.Tests.NetworkIdentityTests.AddAllReadyServerConnectionsToObservers" methodname="AddAllReadyServerConnectionsToObservers" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="746337832" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.009232" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2310" name="AddObserver" fullname="Mirror.Tests.NetworkIdentityTests.AddObserver" methodname="AddObserver" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1280727948" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.023670" asserts="0">
              <properties />
              <output><![CDATA[AddObserver for New Game Object (UnityEngine.GameObject) observer list is null
]]></output>
            </test-case>
            <test-case id="2295" name="AssignAndRemoveClientAuthority" fullname="Mirror.Tests.NetworkIdentityTests.AssignAndRemoveClientAuthority" methodname="AssignAndRemoveClientAuthority" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1971525530" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.025846" asserts="0">
              <properties />
              <output><![CDATA[AssignClientAuthority can only be called on the server for spawned objects.
You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
AssignClientAuthority for New Game Object (UnityEngine.GameObject) already has an owner. Use RemoveClientAuthority() first.
AssignClientAuthority for New Game Object (UnityEngine.GameObject) owner cannot be null. Use RemoveClientAuthority() instead.
RemoveClientAuthority can only be called on the server for spawned objects.
RemoveClientAuthority cannot remove authority for a player object
]]></output>
            </test-case>
            <test-case id="2288" name="AssignSceneID" fullname="Mirror.Tests.NetworkIdentityTests.AssignSceneID" methodname="AssignSceneID" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="672582767" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.014341" asserts="0">
              <properties />
            </test-case>
            <test-case id="2313" name="ClearAllComponentsDirtyBits" fullname="Mirror.Tests.NetworkIdentityTests.ClearAllComponentsDirtyBits" methodname="ClearAllComponentsDirtyBits" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="728249236" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.019918" asserts="0">
              <properties />
            </test-case>
            <test-case id="2312" name="ClearDirtyComponentsDirtyBits" fullname="Mirror.Tests.NetworkIdentityTests.ClearDirtyComponentsDirtyBits" methodname="ClearDirtyComponentsDirtyBits" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1695245713" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.019509" asserts="0">
              <properties />
            </test-case>
            <test-case id="2311" name="ClearObservers" fullname="Mirror.Tests.NetworkIdentityTests.ClearObservers" methodname="ClearObservers" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="359672723" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.022842" asserts="0">
              <properties />
            </test-case>
            <test-case id="2304" name="CreatingNetworkBehavioursCacheShouldLogErrorForTooComponents" fullname="Mirror.Tests.NetworkIdentityTests.CreatingNetworkBehavioursCacheShouldLogErrorForTooComponents" methodname="CreatingNetworkBehavioursCacheShouldLogErrorForTooComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1918193035" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.026533" asserts="0">
              <properties />
              <output><![CDATA[Only 64 NetworkBehaviour components are allowed for NetworkIdentity: New Game Object because of the dirtyComponentMask: New Game Object (Mirror.NetworkIdentity)
]]></output>
            </test-case>
            <test-case id="2334" name="GetDirtyComponentsMaskShouldReturn1BitOnlyForDirtyComponents" fullname="Mirror.Tests.NetworkIdentityTests.GetDirtyComponentsMaskShouldReturn1BitOnlyForDirtyComponents" methodname="GetDirtyComponentsMaskShouldReturn1BitOnlyForDirtyComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1650363361" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.013853" asserts="0">
              <properties />
            </test-case>
            <test-case id="2335" name="GetDirtyComponentsMaskShouldReturnZeroWhenNoDirtyComponents" fullname="Mirror.Tests.NetworkIdentityTests.GetDirtyComponentsMaskShouldReturnZeroWhenNoDirtyComponents" methodname="GetDirtyComponentsMaskShouldReturnZeroWhenNoDirtyComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="763414619" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.015196" asserts="0">
              <properties />
            </test-case>
            <test-case id="2332" name="GetInitialComponentsMaskShouldReturn1BitPerNetworkBehaviour" fullname="Mirror.Tests.NetworkIdentityTests.GetInitialComponentsMaskShouldReturn1BitPerNetworkBehaviour" methodname="GetInitialComponentsMaskShouldReturn1BitPerNetworkBehaviour" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="206496571" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.016003" asserts="0">
              <properties />
            </test-case>
            <test-case id="2333" name="GetInitialComponentsMaskShouldReturnZeroWhenNoNetworkBehaviours" fullname="Mirror.Tests.NetworkIdentityTests.GetInitialComponentsMaskShouldReturnZeroWhenNoNetworkBehaviours" methodname="GetInitialComponentsMaskShouldReturnZeroWhenNoNetworkBehaviours" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="957400293" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.020181" asserts="0">
              <properties />
            </test-case>
            <test-case id="2319" name="GetNewObservers" fullname="Mirror.Tests.NetworkIdentityTests.GetNewObservers" methodname="GetNewObservers" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1070975445" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.018526" asserts="0">
              <properties />
            </test-case>
            <test-case id="2320" name="GetNewObserversClearsHashSet" fullname="Mirror.Tests.NetworkIdentityTests.GetNewObserversClearsHashSet" methodname="GetNewObserversClearsHashSet" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="41647146" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.015615" asserts="0">
              <properties />
            </test-case>
            <test-case id="2321" name="GetNewObserversFalseIfNoComponents" fullname="Mirror.Tests.NetworkIdentityTests.GetNewObserversFalseIfNoComponents" methodname="GetNewObserversFalseIfNoComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="622598580" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.014329" asserts="0">
              <properties />
            </test-case>
            <test-case id="2282" name="GetSetAssetId" fullname="Mirror.Tests.NetworkIdentityTests.GetSetAssetId" methodname="GetSetAssetId" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1915720191" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:40Z" duration="0.025872" asserts="0">
              <properties />
            </test-case>
            <test-case id="2315" name="HandleCommand" fullname="Mirror.Tests.NetworkIdentityTests.HandleCommand" methodname="HandleCommand" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1142777047" result="Passed" start-time="2020-06-13 18:29:40Z" end-time="2020-06-13 18:29:41Z" duration="0.031247" asserts="0">
              <properties />
              <output><![CDATA[Component [1] not found for [netId=0]
Found no receiver for incoming Command [-1116480643] on New Game Object (UnityEngine.GameObject),  the server and client should have the same NetworkBehaviour instances [netId=0].
]]></output>
            </test-case>
            <test-case id="2316" name="HandleRpc" fullname="Mirror.Tests.NetworkIdentityTests.HandleRpc" methodname="HandleRpc" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="743191943" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.017254" asserts="0">
              <properties />
              <output><![CDATA[Component [1] not found for [netId=0]
Found no receiver for incoming ClientRpc [-1367188039] on New Game Object (UnityEngine.GameObject),  the server and client should have the same NetworkBehaviour instances [netId=0].
]]></output>
            </test-case>
            <test-case id="2317" name="HandleSyncEvent" fullname="Mirror.Tests.NetworkIdentityTests.HandleSyncEvent" methodname="HandleSyncEvent" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1168203840" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.015247" asserts="0">
              <properties />
              <output><![CDATA[Component [1] not found for [netId=0]
Found no receiver for incoming SyncEvent [-1126363019] on New Game Object (UnityEngine.GameObject),  the server and client should have the same NetworkBehaviour instances [netId=0].
]]></output>
            </test-case>
            <test-case id="2281" name="HostMode_IsFlags_Test" fullname="Mirror.Tests.NetworkIdentityTests.HostMode_IsFlags_Test" methodname="HostMode_IsFlags_Test" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="252743999" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.019005" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
No ready connection found for setting player controller during InternalAddPlayer
]]></output>
            </test-case>
            <test-case id="2296" name="NotifyAuthorityCallsOnStartStopAuthority" fullname="Mirror.Tests.NetworkIdentityTests.NotifyAuthorityCallsOnStartStopAuthority" methodname="NotifyAuthorityCallsOnStartStopAuthority" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1618914659" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.014600" asserts="0">
              <properties />
            </test-case>
            <test-case id="2299" name="OnCheckObserverCatchesException" fullname="Mirror.Tests.NetworkIdentityTests.OnCheckObserverCatchesException" methodname="OnCheckObserverCatchesException" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="969902669" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.014961" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnCheckObserver:some exception   at Mirror.Tests.NetworkIdentityTests+CheckObserverExceptionNetworkBehaviour.OnCheckObserver (Mirror.NetworkConnection conn) [0x00016] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:161 
  at Mirror.NetworkIdentity.OnCheckObserver (Mirror.NetworkConnection conn) [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:754 
]]></output>
            </test-case>
            <test-case id="2301" name="OnCheckObserverFalse" fullname="Mirror.Tests.NetworkIdentityTests.OnCheckObserverFalse" methodname="OnCheckObserverFalse" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1165334750" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.014200" asserts="0">
              <properties />
            </test-case>
            <test-case id="2300" name="OnCheckObserverTrue" fullname="Mirror.Tests.NetworkIdentityTests.OnCheckObserverTrue" methodname="OnCheckObserverTrue" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="9841622" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.027394" asserts="0">
              <properties />
            </test-case>
            <test-case id="2305" name="OnDeserializeSafelyShouldDetectAndHandleDeSerializationMismatch" fullname="Mirror.Tests.NetworkIdentityTests.OnDeserializeSafelyShouldDetectAndHandleDeSerializationMismatch" methodname="OnDeserializeSafelyShouldDetectAndHandleDeSerializationMismatch" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="409604790" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.014435" asserts="0">
              <properties />
              <output><![CDATA[OnDeserialize was expected to read 8 instead of 4 bytes for object:New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeMismatchNetworkBehaviour sceneId=E416EE0. Make sure that OnSerialize and OnDeserialize write/read the same amount of data in all cases.
]]></output>
            </test-case>
            <test-case id="2307" name="OnNetworkDestroy" fullname="Mirror.Tests.NetworkIdentityTests.OnNetworkDestroy" methodname="OnNetworkDestroy" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1227593677" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.020154" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnNetworkDestroy:some exception   at Mirror.Tests.NetworkIdentityTests+NetworkDestroyExceptionNetworkBehaviour.OnStopClient () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:99 
  at Mirror.NetworkIdentity.OnStopClient () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:775 
]]></output>
            </test-case>
            <test-case id="2303" name="OnSerializeAllSafelyShouldNotLogErrorsForTooManyComponents" fullname="Mirror.Tests.NetworkIdentityTests.OnSerializeAllSafelyShouldNotLogErrorsForTooManyComponents" methodname="OnSerializeAllSafelyShouldNotLogErrorsForTooManyComponents" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="333117536" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.024887" asserts="0">
              <properties />
              <output><![CDATA[Only 64 NetworkBehaviour components are allowed for NetworkIdentity: New Game Object because of the dirtyComponentMask: New Game Object (Mirror.NetworkIdentity)
]]></output>
            </test-case>
            <test-case id="2302" name="OnSerializeAndDeserializeAllSafely" fullname="Mirror.Tests.NetworkIdentityTests.OnSerializeAndDeserializeAllSafely" methodname="OnSerializeAndDeserializeAllSafely" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="117799010" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.019326" asserts="0">
              <properties />
              <output><![CDATA[OnSerialize failed for: object=New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour sceneId=2DD18036

System.Exception: some exception
  at Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour.OnSerialize (Mirror.NetworkWriter writer, System.Boolean initialState) [0x00001] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:222 
  at Mirror.NetworkIdentity.OnSerializeSafely (Mirror.NetworkBehaviour comp, Mirror.NetworkWriter writer, System.Boolean initialState) [0x0001a] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:803 
OnDeserialize failed for: object=New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour sceneId=2DD18036 length=0. Possible Reasons:
  * Do Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize and OnDeserialize calls write the same amount of data(0 bytes)? 
  * Was there an exception in Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize/OnDeserialize code?
  * Are the server and client the exact same project?
  * Maybe this OnDeserialize call was meant for another GameObject? The sceneIds can easily get out of sync if the Hierarchy was modified only in the client OR the server. Try rebuilding both.

Exeption System.Exception: some exception
  at Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour.OnDeserialize (Mirror.NetworkReader reader, System.Boolean initialState) [0x00001] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:226 
  at Mirror.NetworkIdentity.OnDeserializeSafely (Mirror.NetworkBehaviour comp, Mirror.NetworkReader reader, System.Boolean initialState) [0x0008b] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:944 
OnDeserialize failed for: object=New Game Object component=Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour sceneId=2DD18036 length=0. Possible Reasons:
  * Do Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize and OnDeserialize calls write the same amount of data(0 bytes)? 
  * Was there an exception in Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour's OnSerialize/OnDeserialize code?
  * Are the server and client the exact same project?
  * Maybe this OnDeserialize call was meant for another GameObject? The sceneIds can easily get out of sync if the Hierarchy was modified only in the client OR the server. Try rebuilding both.

Exeption System.Exception: some exception
  at Mirror.Tests.NetworkIdentityTests+SerializeExceptionNetworkBehaviour.OnDeserialize (Mirror.NetworkReader reader, System.Boolean initialState) [0x00001] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:226 
  at Mirror.NetworkIdentity.OnDeserializeSafely (Mirror.NetworkBehaviour comp, Mirror.NetworkReader reader, System.Boolean initialState) [0x0008b] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:944 
]]></output>
            </test-case>
            <test-case id="2336" name="OnSetHostVisibilityBaseTest" fullname="Mirror.Tests.NetworkIdentityTests.OnSetHostVisibilityBaseTest" methodname="OnSetHostVisibilityBaseTest" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1296401530" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.009955" asserts="0">
              <properties />
            </test-case>
            <test-case id="2297" name="OnSetHostVisibilityCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnSetHostVisibilityCallsComponentsAndCatchesExceptions" methodname="OnSetHostVisibilityCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="539225920" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.019643" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnSetLocalVisibility:some exception   at Mirror.Tests.NetworkIdentityTests+SetHostVisibilityExceptionNetworkBehaviour.OnSetHostVisibility (System.Boolean visible) [0x00016] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:135 
  at Mirror.NetworkIdentity.OnSetHostVisibility (System.Boolean visible) [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:735 
Exception in OnSetLocalVisibility:some exception   at Mirror.Tests.NetworkIdentityTests+SetHostVisibilityExceptionNetworkBehaviour.OnSetHostVisibility (System.Boolean visible) [0x00016] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:135 
  at Mirror.NetworkIdentity.OnSetHostVisibility (System.Boolean visible) [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:735 
]]></output>
            </test-case>
            <test-case id="2293" name="OnStartAuthorityCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStartAuthorityCallsComponentsAndCatchesExceptions" methodname="OnStartAuthorityCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1127522363" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.012540" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartAuthority:some exception   at Mirror.Tests.NetworkIdentityTests+StartAuthorityExceptionNetworkBehaviour.OnStartAuthority () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:51 
  at Mirror.NetworkIdentity.OnStartAuthority () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:700 
]]></output>
            </test-case>
            <test-case id="2292" name="OnStartClientCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStartClientCallsComponentsAndCatchesExceptions" methodname="OnStartClientCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="227459285" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.014544" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartClient:some exception   at Mirror.Tests.NetworkIdentityTests+StartClientExceptionNetworkBehaviour.OnStartClient () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:41 
  at Mirror.NetworkIdentity.OnStartClient () [0x0007d] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:645 
]]></output>
            </test-case>
            <test-case id="2306" name="OnStartLocalPlayer" fullname="Mirror.Tests.NetworkIdentityTests.OnStartLocalPlayer" methodname="OnStartLocalPlayer" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="833884387" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.018257" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartLocalPlayer:some exception   at Mirror.Tests.NetworkIdentityTests+StartLocalPlayerExceptionNetworkBehaviour.OnStartLocalPlayer () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:83 
  at Mirror.NetworkIdentity.OnStartLocalPlayer () [0x0002a] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:670 
]]></output>
            </test-case>
            <test-case id="2291" name="OnStartServerCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStartServerCallsComponentsAndCatchesExceptions" methodname="OnStartServerCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="980377438" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.014308" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStartServer:some exception   at Mirror.Tests.NetworkIdentityTests+StartServerExceptionNetworkBehaviour.OnStartServer () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:31 
  at Mirror.NetworkIdentity.OnStartServer () [0x000da] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:596 
]]></output>
            </test-case>
            <test-case id="2298" name="OnStartServerInHostModeSetsIsClientTrue" fullname="Mirror.Tests.NetworkIdentityTests.OnStartServerInHostModeSetsIsClientTrue" methodname="OnStartServerInHostModeSetsIsClientTrue" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="616926016" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.014828" asserts="0">
              <properties />
            </test-case>
            <test-case id="2279" name="OnStartServerTest" fullname="Mirror.Tests.NetworkIdentityTests.OnStartServerTest" methodname="OnStartServerTest" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="479560673" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.015305" asserts="0">
              <properties />
            </test-case>
            <test-case id="2294" name="OnStopAuthorityCallsComponentsAndCatchesExceptions" fullname="Mirror.Tests.NetworkIdentityTests.OnStopAuthorityCallsComponentsAndCatchesExceptions" methodname="OnStopAuthorityCallsComponentsAndCatchesExceptions" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1166020227" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.015196" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStopAuthority:some exception   at Mirror.Tests.NetworkIdentityTests+StopAuthorityExceptionNetworkBehaviour.OnStopAuthority () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:67 
  at Mirror.NetworkIdentity.OnStopAuthority () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:720 
]]></output>
            </test-case>
            <test-case id="2308" name="OnStopServer" fullname="Mirror.Tests.NetworkIdentityTests.OnStopServer" methodname="OnStopServer" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1254050862" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.014021" asserts="0">
              <properties />
            </test-case>
            <test-case id="2309" name="OnStopServerEx" fullname="Mirror.Tests.NetworkIdentityTests.OnStopServerEx" methodname="OnStopServerEx" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1010042602" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.018814" asserts="0">
              <properties />
              <output><![CDATA[Exception in OnStopServer:some exception   at Mirror.Tests.NetworkIdentityTests+StopServerExceptionNetworkBehaviour.OnStopServer () [0x0000f] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Tests/Editor/NetworkIdentityTests.cs:121 
  at Mirror.NetworkIdentity.OnStopServer () [0x00013] in /Users/qwerty/x/dev/project_Mirror/Repository/Assets/Mirror/Runtime/NetworkIdentity.cs:616 
]]></output>
            </test-case>
            <test-case id="2290" name="OnValidateSetupIDsSetsEmptyAssetIDForSceneObject" fullname="Mirror.Tests.NetworkIdentityTests.OnValidateSetupIDsSetsEmptyAssetIDForSceneObject" methodname="OnValidateSetupIDsSetsEmptyAssetIDForSceneObject" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="764083921" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.015286" asserts="0">
              <properties />
            </test-case>
            <test-case id="2329" name="RebuildObserversAddRemoveAndVisListTest" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversAddRemoveAndVisListTest" methodname="RebuildObserversAddRemoveAndVisListTest" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="445553579" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.018916" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2323" name="RebuildObserversAddsOwnReadyPlayer" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversAddsOwnReadyPlayer" methodname="RebuildObserversAddsOwnReadyPlayer" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1229369441" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.018534" asserts="0">
              <properties />
            </test-case>
            <test-case id="2325" name="RebuildObserversAddsReadyConnectionsIfImplemented" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversAddsReadyConnectionsIfImplemented" methodname="RebuildObserversAddsReadyConnectionsIfImplemented" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="132032287" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.027949" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2327" name="RebuildObserversAddsReadyServerConnectionsIfNotImplemented" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversAddsReadyServerConnectionsIfNotImplemented" methodname="RebuildObserversAddsReadyServerConnectionsIfNotImplemented" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="194061050" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.013701" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2328" name="RebuildObserversDoesNotAddServerConnectionsIfImplemented" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversDoesNotAddServerConnectionsIfImplemented" methodname="RebuildObserversDoesNotAddServerConnectionsIfImplemented" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1133765938" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.014248" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2326" name="RebuildObserversDoesntAddNotReadyConnectionsIfImplemented" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversDoesntAddNotReadyConnectionsIfImplemented" methodname="RebuildObserversDoesntAddNotReadyConnectionsIfImplemented" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="484046684" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.014592" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2324" name="RebuildObserversOnlyAddsOwnPlayerIfReady" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversOnlyAddsOwnPlayerIfReady" methodname="RebuildObserversOnlyAddsOwnPlayerIfReady" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="503388768" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.015030" asserts="0">
              <properties />
            </test-case>
            <test-case id="2331" name="RebuildObserversReturnsIfNull" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversReturnsIfNull" methodname="RebuildObserversReturnsIfNull" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="256093072" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.020006" asserts="0">
              <properties />
            </test-case>
            <test-case id="2330" name="RebuildObserversSetsHostVisibility" fullname="Mirror.Tests.NetworkIdentityTests.RebuildObserversSetsHostVisibility" methodname="RebuildObserversSetsHostVisibility" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1802863143" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.014538" asserts="0">
              <properties />
            </test-case>
            <test-case id="2287" name="RemoveObserverInternal" fullname="Mirror.Tests.NetworkIdentityTests.RemoveObserverInternal" methodname="RemoveObserverInternal" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="675583837" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.020371" asserts="0">
              <properties />
            </test-case>
            <test-case id="2314" name="Reset" fullname="Mirror.Tests.NetworkIdentityTests.Reset" methodname="Reset" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1297542933" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.025238" asserts="0">
              <properties />
            </test-case>
            <test-case id="2280" name="ServerMode_IsFlags_Test" fullname="Mirror.Tests.NetworkIdentityTests.ServerMode_IsFlags_Test" methodname="ServerMode_IsFlags_Test" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1045328300" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.014435" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2318" name="ServerUpdate" fullname="Mirror.Tests.NetworkIdentityTests.ServerUpdate" methodname="ServerUpdate" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1074211278" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.019864" asserts="0">
              <properties />
            </test-case>
            <test-case id="2285" name="SetAssetId_DoesNotGiveErrorIfBothOldAndNewAreEmpty" fullname="Mirror.Tests.NetworkIdentityTests.SetAssetId_DoesNotGiveErrorIfBothOldAndNewAreEmpty" methodname="SetAssetId_DoesNotGiveErrorIfBothOldAndNewAreEmpty" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="492286942" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.015796" asserts="0">
              <properties />
            </test-case>
            <test-case id="2284" name="SetAssetId_GivesErrorForEmptyGuid" fullname="Mirror.Tests.NetworkIdentityTests.SetAssetId_GivesErrorForEmptyGuid" methodname="SetAssetId_GivesErrorForEmptyGuid" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="834937910" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.013800" asserts="0">
              <properties />
              <output><![CDATA[Can not set AssetId to empty guid on NetworkIdentity 'New Game Object', old assetId '2d7852161d4b4a93912c1a7a906db57a'
]]></output>
            </test-case>
            <test-case id="2283" name="SetAssetId_GivesErrorIfOneExists" fullname="Mirror.Tests.NetworkIdentityTests.SetAssetId_GivesErrorIfOneExists" methodname="SetAssetId_GivesErrorIfOneExists" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="190280434" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.014819" asserts="0">
              <properties />
              <output><![CDATA[Can not Set AssetId on NetworkIdentity 'New Game Object' becasue it already had an assetId, current assetId '3806deaf4da24bbca36a5f29a3b583d9', attempted new assetId 'ea3f439f39414305bfa69bed82f4c631'
]]></output>
            </test-case>
            <test-case id="2286" name="SetClientOwner" fullname="Mirror.Tests.NetworkIdentityTests.SetClientOwner" methodname="SetClientOwner" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1969667324" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.014812" asserts="0">
              <properties />
              <output><![CDATA[Object New Game Object (Mirror.NetworkIdentity) netId=0 already has an owner. Use RemoveClientAuthority() first: New Game Object (Mirror.NetworkIdentity)
]]></output>
            </test-case>
            <test-case id="2289" name="SetSceneIdSceneHashPartInternal" fullname="Mirror.Tests.NetworkIdentityTests.SetSceneIdSceneHashPartInternal" methodname="SetSceneIdSceneHashPartInternal" classname="Mirror.Tests.NetworkIdentityTests" runstate="Runnable" seed="1447904892" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.020147" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2337" name="NetworkManagerStopHostOnServerDisconnectTest" fullname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest" classname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.090053" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2338" name="StopHostCallsOnServerDisconnectForHostClient" fullname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest.StopHostCallsOnServerDisconnectForHostClient" methodname="StopHostCallsOnServerDisconnectForHostClient" classname="Mirror.Tests.NetworkManagerStopHostOnServerDisconnectTest" runstate="Runnable" seed="2146524307" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.073626" asserts="0">
              <properties />
              <output><![CDATA[SendMessage cannot be called during Awake, CheckConsistency, or OnValidate
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectDestroyMessage, id=54308. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectHideMessage, id=3662. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.NetworkPongMessage, id=10297. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.SpawnMessage, id=16484. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectSpawnStartedMessage, id=59786. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ObjectSpawnFinishedMessage, id=34417. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.UpdateVarsMessage, id=16986. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.RpcMessage, id=33978. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.SyncEventMessage, id=49824. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkClient.RegisterHandler replacing handler for Mirror.ConnectMessage, id=55829. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2339" name="NetworkManagerTest" fullname="Mirror.Tests.NetworkManagerTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" testcasecount="9" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:42Z" duration="0.267640" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2348" name="GetStartPositionTest" fullname="Mirror.Tests.NetworkManagerTest.GetStartPositionTest" methodname="GetStartPositionTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1007304582" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:41Z" duration="0.011876" asserts="0">
              <properties />
            </test-case>
            <test-case id="2346" name="RegisterStartPositionTest" fullname="Mirror.Tests.NetworkManagerTest.RegisterStartPositionTest" methodname="RegisterStartPositionTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1274430146" result="Passed" start-time="2020-06-13 18:29:41Z" end-time="2020-06-13 18:29:42Z" duration="0.019456" asserts="0">
              <properties />
            </test-case>
            <test-case id="2345" name="ShutdownTest" fullname="Mirror.Tests.NetworkManagerTest.ShutdownTest" methodname="ShutdownTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="814701937" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.015167" asserts="0">
              <properties />
            </test-case>
            <test-case id="2343" name="StartClientTest" fullname="Mirror.Tests.NetworkManagerTest.StartClientTest" methodname="StartClientTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1797168002" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.014832" asserts="0">
              <properties />
            </test-case>
            <test-case id="2341" name="StartServerTest" fullname="Mirror.Tests.NetworkManagerTest.StartServerTest" methodname="StartServerTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="499461026" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.047179" asserts="0">
              <properties />
            </test-case>
            <test-case id="2344" name="StopClientTest" fullname="Mirror.Tests.NetworkManagerTest.StopClientTest" methodname="StopClientTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="978628607" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.035201" asserts="0">
              <properties />
            </test-case>
            <test-case id="2342" name="StopServerTest" fullname="Mirror.Tests.NetworkManagerTest.StopServerTest" methodname="StopServerTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="1685170766" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.075636" asserts="0">
              <properties />
              <output><![CDATA[NetworkServer.RegisterHandler replacing handler for Mirror.ReadyMessage, id=40252. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing handler for Mirror.CommandMessage, id=46228. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing handler for Mirror.NetworkPingMessage, id=33151. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing handler for Mirror.ConnectMessage, id=55829. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing handler for Mirror.DisconnectMessage, id=8819. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing handler for Mirror.AddPlayerMessage, id=13085. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
NetworkServer.RegisterHandler replacing handler for Mirror.ErrorMessage, id=22839. If replacement is intentional, use ReplaceHandler instead to avoid this warning.
]]></output>
            </test-case>
            <test-case id="2347" name="UnRegisterStartPositionTest" fullname="Mirror.Tests.NetworkManagerTest.UnRegisterStartPositionTest" methodname="UnRegisterStartPositionTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="165140056" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.017004" asserts="0">
              <properties />
            </test-case>
            <test-case id="2340" name="VariableTest" fullname="Mirror.Tests.NetworkManagerTest.VariableTest" methodname="VariableTest" classname="Mirror.Tests.NetworkManagerTest" runstate="Runnable" seed="400501295" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.013171" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2349" name="NetworkMatchCheckerTest" fullname="Mirror.Tests.NetworkMatchCheckerTest" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" testcasecount="7" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.139790" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2355" name="ChangingMatchIdShouldRebuildObservers" fullname="Mirror.Tests.NetworkMatchCheckerTest.ChangingMatchIdShouldRebuildObservers" methodname="ChangingMatchIdShouldRebuildObservers" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="1646911750" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.009922" asserts="0">
              <properties />
            </test-case>
            <test-case id="2356" name="ClearingMatchIdShouldRebuildObservers" fullname="Mirror.Tests.NetworkMatchCheckerTest.ClearingMatchIdShouldRebuildObservers" methodname="ClearingMatchIdShouldRebuildObservers" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="1977114922" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.024814" asserts="0">
              <properties />
            </test-case>
            <test-case id="2351" name="OnCheckObserverShouldBeFalseForDifferentMatchId" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeFalseForDifferentMatchId" methodname="OnCheckObserverShouldBeFalseForDifferentMatchId" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="1596937053" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.014937" asserts="0">
              <properties />
            </test-case>
            <test-case id="2353" name="OnCheckObserverShouldBeFalseForEmptyGuid" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeFalseForEmptyGuid" methodname="OnCheckObserverShouldBeFalseForEmptyGuid" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="598223610" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.030791" asserts="0">
              <properties />
            </test-case>
            <test-case id="2352" name="OnCheckObserverShouldBeFalseIfObjectDoesNotHaveNetworkMatchChecker" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeFalseIfObjectDoesNotHaveNetworkMatchChecker" methodname="OnCheckObserverShouldBeFalseIfObjectDoesNotHaveNetworkMatchChecker" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="251127893" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.014293" asserts="0">
              <properties />
            </test-case>
            <test-case id="2350" name="OnCheckObserverShouldBeTrueForSameMatchId" fullname="Mirror.Tests.NetworkMatchCheckerTest.OnCheckObserverShouldBeTrueForSameMatchId" methodname="OnCheckObserverShouldBeTrueForSameMatchId" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="2050361647" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.019227" asserts="0">
              <properties />
            </test-case>
            <test-case id="2354" name="SettingMatchIdShouldRebuildObservers" fullname="Mirror.Tests.NetworkMatchCheckerTest.SettingMatchIdShouldRebuildObservers" methodname="SettingMatchIdShouldRebuildObservers" classname="Mirror.Tests.NetworkMatchCheckerTest" runstate="Runnable" seed="1655250508" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.014284" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2357" name="NetworkReaderPoolTest" fullname="Mirror.Tests.NetworkReaderPoolTest" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.074674" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2362" name="GrowCapacity" fullname="Mirror.Tests.NetworkReaderPoolTest.GrowCapacity" methodname="GrowCapacity" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="563744103" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.006296" asserts="0">
              <properties />
            </test-case>
            <test-case id="2359" name="PoolCanGetMoreReadersThanPoolSize" fullname="Mirror.Tests.NetworkReaderPoolTest.PoolCanGetMoreReadersThanPoolSize" methodname="PoolCanGetMoreReadersThanPoolSize" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="472394269" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.006695" asserts="0">
              <properties />
            </test-case>
            <test-case id="2360" name="PoolReUsesReadersUpToSizeLimit" fullname="Mirror.Tests.NetworkReaderPoolTest.PoolReUsesReadersUpToSizeLimit" methodname="PoolReUsesReadersUpToSizeLimit" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="716000306" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.012404" asserts="0">
              <properties />
            </test-case>
            <test-case id="2361" name="ShrinkCapacity" fullname="Mirror.Tests.NetworkReaderPoolTest.ShrinkCapacity" methodname="ShrinkCapacity" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="678076869" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.018674" asserts="0">
              <properties />
            </test-case>
            <test-case id="2358" name="TestPoolRecycling" fullname="Mirror.Tests.NetworkReaderPoolTest.TestPoolRecycling" methodname="TestPoolRecycling" classname="Mirror.Tests.NetworkReaderPoolTest" runstate="Runnable" seed="428755174" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.014885" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2363" name="NetworkReaderTest" fullname="Mirror.Tests.NetworkReaderTest" classname="Mirror.Tests.NetworkReaderTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.008349" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2364" name="ReadBytesCountTooBigTest" fullname="Mirror.Tests.NetworkReaderTest.ReadBytesCountTooBigTest" methodname="ReadBytesCountTooBigTest" classname="Mirror.Tests.NetworkReaderTest" runstate="Runnable" seed="1759826495" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.000599" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2365" name="NetworkServerTest" fullname="Mirror.Tests.NetworkServerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" testcasecount="34" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:43Z" duration="0.655277" total="34" passed="34" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2386" name="ActivateHostSceneCallsOnStartClient" fullname="Mirror.Tests.NetworkServerTest.ActivateHostSceneCallsOnStartClient" methodname="ActivateHostSceneCallsOnStartClient" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="87268779" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.018383" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2376" name="AddConnectionTest" fullname="Mirror.Tests.NetworkServerTest.AddConnectionTest" methodname="AddConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="467270643" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.019625" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2385" name="CommandMessageCallsCommandTest" fullname="Mirror.Tests.NetworkServerTest.CommandMessageCallsCommandTest" methodname="CommandMessageCallsCommandTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1855927132" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.022629" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
Command for object without authority [netId=42]
Spawned object not found when handling Command message [netId=43]
]]></output>
            </test-case>
            <test-case id="2372" name="ConnectDuplicateConnectionIdsTest" fullname="Mirror.Tests.NetworkServerTest.ConnectDuplicateConnectionIdsTest" methodname="ConnectDuplicateConnectionIdsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1763811589" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.010467" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2370" name="ConnectionsDictTest" fullname="Mirror.Tests.NetworkServerTest.ConnectionsDictTest" methodname="ConnectionsDictTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="39400679" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.011157" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2368" name="ConnectMessageHandlerTest" fullname="Mirror.Tests.NetworkServerTest.ConnectMessageHandlerTest" methodname="ConnectMessageHandlerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="574036148" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.011731" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2378" name="DisconnectAllConnectionsTest" fullname="Mirror.Tests.NetworkServerTest.DisconnectAllConnectionsTest" methodname="DisconnectAllConnectionsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="940208029" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.015129" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2379" name="DisconnectAllTest" fullname="Mirror.Tests.NetworkServerTest.DisconnectAllTest" methodname="DisconnectAllTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="2025591381" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.015162" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2369" name="DisconnectMessageHandlerTest" fullname="Mirror.Tests.NetworkServerTest.DisconnectMessageHandlerTest" methodname="DisconnectMessageHandlerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1114857547" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.015113" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2390" name="GetNetworkIdentity" fullname="Mirror.Tests.NetworkServerTest.GetNetworkIdentity" methodname="GetNetworkIdentity" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1490946664" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.016561" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
GameObject New Game Object doesn't have NetworkIdentity.
]]></output>
            </test-case>
            <test-case id="2392" name="HideForConnection" fullname="Mirror.Tests.NetworkServerTest.HideForConnection" methodname="HideForConnection" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="799786107" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.015011" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2366" name="IsActiveTest" fullname="Mirror.Tests.NetworkServerTest.IsActiveTest" methodname="IsActiveTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="345826376" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.014864" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2375" name="LocalClientActiveTest" fullname="Mirror.Tests.NetworkServerTest.LocalClientActiveTest" methodname="LocalClientActiveTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1009207427" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.031610" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2367" name="MaxConnectionsTest" fullname="Mirror.Tests.NetworkServerTest.MaxConnectionsTest" methodname="MaxConnectionsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1018290007" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.013623" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2371" name="OnConnectedOnlyAllowsGreaterZeroConnectionIdsTest" fullname="Mirror.Tests.NetworkServerTest.OnConnectedOnlyAllowsGreaterZeroConnectionIdsTest" methodname="OnConnectedOnlyAllowsGreaterZeroConnectionIdsTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1150773037" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.018720" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
Server.HandleConnect: invalid connectionId: 0 . Needs to be >0, because 0 is reserved for local player.
Server.HandleConnect: invalid connectionId: -1 . Needs to be >0, because 0 is reserved for local player.
]]></output>
            </test-case>
            <test-case id="2381" name="OnDataReceivedInvalidConnectionIdTest" fullname="Mirror.Tests.NetworkServerTest.OnDataReceivedInvalidConnectionIdTest" methodname="OnDataReceivedInvalidConnectionIdTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="2021562330" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.013822" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
HandleData Unknown connectionId:42
]]></output>
            </test-case>
            <test-case id="2380" name="OnDataReceivedTest" fullname="Mirror.Tests.NetworkServerTest.OnDataReceivedTest" methodname="OnDataReceivedTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1129244832" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.015199" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2384" name="ReadyMessageSetsClientReadyTest" fullname="Mirror.Tests.NetworkServerTest.ReadyMessageSetsClientReadyTest" methodname="ReadyMessageSetsClientReadyTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="604485026" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.015316" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2388" name="RegisterUnregisterClearHandlerTest" fullname="Mirror.Tests.NetworkServerTest.RegisterUnregisterClearHandlerTest" methodname="RegisterUnregisterClearHandlerTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1468061043" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.015475" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2377" name="RemoveConnectionTest" fullname="Mirror.Tests.NetworkServerTest.RemoveConnectionTest" methodname="RemoveConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1443444902" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.015647" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2374" name="RemoveLocalConnectionTest" fullname="Mirror.Tests.NetworkServerTest.RemoveLocalConnectionTest" methodname="RemoveLocalConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1066013863" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.014830" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2397" name="ResetTest" fullname="Mirror.Tests.NetworkServerTest.ResetTest" methodname="ResetTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1898158338" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.015551" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-suite type="ParameterizedMethod" id="2400" name="SendCalledWhileNotActive_ShouldGiveWarning" fullname="Mirror.Tests.NetworkServerTest.SendCalledWhileNotActive_ShouldGiveWarning" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.040175" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2398" name="SendCalledWhileNotActive_ShouldGiveWarning(&quot;SendToAll&quot;)" fullname="Mirror.Tests.NetworkServerTest.SendCalledWhileNotActive_ShouldGiveWarning(&quot;SendToAll&quot;)" methodname="SendCalledWhileNotActive_ShouldGiveWarning" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="648149096" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.014234" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
Can not send using NetworkServer.SendToAll<T>(T msg) because NetworkServer is not active
]]></output>
              </test-case>
              <test-case id="2399" name="SendCalledWhileNotActive_ShouldGiveWarning(&quot;SendToReady&quot;)" fullname="Mirror.Tests.NetworkServerTest.SendCalledWhileNotActive_ShouldGiveWarning(&quot;SendToReady&quot;)" methodname="SendCalledWhileNotActive_ShouldGiveWarning" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1419462073" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.018196" asserts="0">
                <properties />
                <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
Can not send using NetworkServer.SendToReady<T>(T msg) because NetworkServer is not active
]]></output>
              </test-case>
            </test-suite>
            <test-case id="2387" name="SendToAllTest" fullname="Mirror.Tests.NetworkServerTest.SendToAllTest" methodname="SendToAllTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1269378305" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.013074" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2389" name="SendToClientOfPlayer" fullname="Mirror.Tests.NetworkServerTest.SendToClientOfPlayer" methodname="SendToClientOfPlayer" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="630688642" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.011144" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2383" name="SetAllClientsNotReadyTest" fullname="Mirror.Tests.NetworkServerTest.SetAllClientsNotReadyTest" methodname="SetAllClientsNotReadyTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="635283711" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.010884" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2382" name="SetClientReadyAndNotReadyTest" fullname="Mirror.Tests.NetworkServerTest.SetClientReadyAndNotReadyTest" methodname="SetClientReadyAndNotReadyTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1720281839" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:42Z" duration="0.016110" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2373" name="SetLocalConnectionTest" fullname="Mirror.Tests.NetworkServerTest.SetLocalConnectionTest" methodname="SetLocalConnectionTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="934331376" result="Passed" start-time="2020-06-13 18:29:42Z" end-time="2020-06-13 18:29:43Z" duration="0.013849" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
Local Connection already exists
]]></output>
            </test-case>
            <test-case id="2391" name="ShowForConnection" fullname="Mirror.Tests.NetworkServerTest.ShowForConnection" methodname="ShowForConnection" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="2075246965" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.017019" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2396" name="ShutdownCleanupTest" fullname="Mirror.Tests.NetworkServerTest.ShutdownCleanupTest" methodname="ShutdownCleanupTest" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="2136606742" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.017166" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2394" name="SpawnObjects" fullname="Mirror.Tests.NetworkServerTest.SpawnObjects" methodname="SpawnObjects" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="40894284" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.070401" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2395" name="UnSpawn" fullname="Mirror.Tests.NetworkServerTest.UnSpawn" methodname="UnSpawn" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="985856832" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.018296" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
            <test-case id="2393" name="ValidateSceneObject" fullname="Mirror.Tests.NetworkServerTest.ValidateSceneObject" methodname="ValidateSceneObject" classname="Mirror.Tests.NetworkServerTest" runstate="Runnable" seed="1455627358" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.010893" asserts="0">
              <properties />
              <output><![CDATA[You are trying to create a MonoBehaviour using the 'new' keyword.  This is not allowed.  MonoBehaviours can only be added using AddComponent(). Alternatively, your script can inherit from ScriptableObject or no base class at all
]]></output>
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2401" name="NetworkTransformChildTest" fullname="Mirror.Tests.NetworkTransformChildTest" classname="Mirror.Tests.NetworkTransformChildTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.009501" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2402" name="TargetComponentTest" fullname="Mirror.Tests.NetworkTransformChildTest.TargetComponentTest" methodname="TargetComponentTest" classname="Mirror.Tests.NetworkTransformChildTest" runstate="Runnable" seed="835961199" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001027" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2403" name="NetworkTransformTest" fullname="Mirror.Tests.NetworkTransformTest" classname="Mirror.Tests.NetworkTransformTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.012502" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2404" name="SerializeIntoWriterTest" fullname="Mirror.Tests.NetworkTransformTest.SerializeIntoWriterTest" methodname="SerializeIntoWriterTest" classname="Mirror.Tests.NetworkTransformTest" runstate="Runnable" seed="819719486" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000606" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2405" name="NetworkWriterPoolTest" fullname="Mirror.Tests.NetworkWriterPoolTest" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.101489" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2410" name="GrowCapacity" fullname="Mirror.Tests.NetworkWriterPoolTest.GrowCapacity" methodname="GrowCapacity" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="1910441966" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.015940" asserts="0">
              <properties />
            </test-case>
            <test-case id="2407" name="PoolCanGetMoreWritersThanPoolSize" fullname="Mirror.Tests.NetworkWriterPoolTest.PoolCanGetMoreWritersThanPoolSize" methodname="PoolCanGetMoreWritersThanPoolSize" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="1714567875" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.015263" asserts="0">
              <properties />
            </test-case>
            <test-case id="2408" name="PoolReUsesWritersUpToSizeLimit" fullname="Mirror.Tests.NetworkWriterPoolTest.PoolReUsesWritersUpToSizeLimit" methodname="PoolReUsesWritersUpToSizeLimit" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="1274084020" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.016483" asserts="0">
              <properties />
            </test-case>
            <test-case id="2409" name="ShrinkCapacity" fullname="Mirror.Tests.NetworkWriterPoolTest.ShrinkCapacity" methodname="ShrinkCapacity" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="2041581469" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.014541" asserts="0">
              <properties />
            </test-case>
            <test-case id="2406" name="TestPoolRecycling" fullname="Mirror.Tests.NetworkWriterPoolTest.TestPoolRecycling" methodname="TestPoolRecycling" classname="Mirror.Tests.NetworkWriterPoolTest" runstate="Runnable" seed="138937279" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.016454" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2411" name="NetworkWriterTest" fullname="Mirror.Tests.NetworkWriterTest" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" testcasecount="55" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.125365" total="55" passed="55" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2457" name="TestByteEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestByteEndianness" methodname="TestByteEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1408376003" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001418" asserts="0">
              <properties />
            </test-case>
            <test-case id="2442" name="TestChar" fullname="Mirror.Tests.NetworkWriterTest.TestChar" methodname="TestChar" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="29155114" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001305" asserts="0">
              <properties />
            </test-case>
            <test-case id="2431" name="TestColor" fullname="Mirror.Tests.NetworkWriterTest.TestColor" methodname="TestColor" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1522109709" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001758" asserts="0">
              <properties />
            </test-case>
            <test-case id="2432" name="TestColor32" fullname="Mirror.Tests.NetworkWriterTest.TestColor32" methodname="TestColor32" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1112854881" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001432" asserts="0">
              <properties />
            </test-case>
            <test-case id="2456" name="TestDecimalBinaryCompatibility" fullname="Mirror.Tests.NetworkWriterTest.TestDecimalBinaryCompatibility" methodname="TestDecimalBinaryCompatibility" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1143986495" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001312" asserts="0">
              <properties />
            </test-case>
            <test-case id="2453" name="TestDecimals" fullname="Mirror.Tests.NetworkWriterTest.TestDecimals" methodname="TestDecimals" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1229882964" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001874" asserts="0">
              <properties />
            </test-case>
            <test-case id="2455" name="TestDoubleBinaryCompatibility" fullname="Mirror.Tests.NetworkWriterTest.TestDoubleBinaryCompatibility" methodname="TestDoubleBinaryCompatibility" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1748148984" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000732" asserts="0">
              <properties />
            </test-case>
            <test-case id="2452" name="TestDoubles" fullname="Mirror.Tests.NetworkWriterTest.TestDoubles" methodname="TestDoubles" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1690719945" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000826" asserts="0">
              <properties />
            </test-case>
            <test-case id="2454" name="TestFloatBinaryCompatibility" fullname="Mirror.Tests.NetworkWriterTest.TestFloatBinaryCompatibility" methodname="TestFloatBinaryCompatibility" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2112861997" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000768" asserts="0">
              <properties />
            </test-case>
            <test-case id="2451" name="TestFloats" fullname="Mirror.Tests.NetworkWriterTest.TestFloats" methodname="TestFloats" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1954392480" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000784" asserts="0">
              <properties />
            </test-case>
            <test-case id="2450" name="TestGuid" fullname="Mirror.Tests.NetworkWriterTest.TestGuid" methodname="TestGuid" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1717755577" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000762" asserts="0">
              <properties />
            </test-case>
            <test-case id="2463" name="TestIntEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestIntEndianness" methodname="TestIntEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1931813705" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000713" asserts="0">
              <properties />
            </test-case>
            <test-case id="2464" name="TestLongEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestLongEndianness" methodname="TestLongEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="372114467" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000775" asserts="0">
              <properties />
            </test-case>
            <test-case id="2437" name="TestMatrix4x4" fullname="Mirror.Tests.NetworkWriterTest.TestMatrix4x4" methodname="TestMatrix4x4" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1139783612" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.002413" asserts="0">
              <properties />
            </test-case>
            <test-case id="2446" name="TestPackedInt32" fullname="Mirror.Tests.NetworkWriterTest.TestPackedInt32" methodname="TestPackedInt32" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1589894253" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000937" asserts="0">
              <properties />
            </test-case>
            <test-case id="2447" name="TestPackedInt32Failure" fullname="Mirror.Tests.NetworkWriterTest.TestPackedInt32Failure" methodname="TestPackedInt32Failure" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="551444469" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001255" asserts="0">
              <properties />
            </test-case>
            <test-case id="2449" name="TestPackedInt64" fullname="Mirror.Tests.NetworkWriterTest.TestPackedInt64" methodname="TestPackedInt64" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="603820680" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001646" asserts="0">
              <properties />
            </test-case>
            <test-case id="2444" name="TestPackedUInt32" fullname="Mirror.Tests.NetworkWriterTest.TestPackedUInt32" methodname="TestPackedUInt32" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2054430121" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000781" asserts="0">
              <properties />
            </test-case>
            <test-case id="2445" name="TestPackedUInt32Failure" fullname="Mirror.Tests.NetworkWriterTest.TestPackedUInt32Failure" methodname="TestPackedUInt32Failure" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1261849447" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000958" asserts="0">
              <properties />
            </test-case>
            <test-case id="2448" name="TestPackedUInt64" fullname="Mirror.Tests.NetworkWriterTest.TestPackedUInt64" methodname="TestPackedUInt64" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="389222597" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001057" asserts="0">
              <properties />
            </test-case>
            <test-case id="2435" name="TestPlane" fullname="Mirror.Tests.NetworkWriterTest.TestPlane" methodname="TestPlane" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1041807810" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001885" asserts="0">
              <properties />
            </test-case>
            <test-case id="2433" name="TestQuaternion" fullname="Mirror.Tests.NetworkWriterTest.TestQuaternion" methodname="TestQuaternion" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1108317919" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000917" asserts="0">
              <properties />
            </test-case>
            <test-case id="2436" name="TestRay" fullname="Mirror.Tests.NetworkWriterTest.TestRay" methodname="TestRay" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="565100467" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001287" asserts="0">
              <properties />
            </test-case>
            <test-case id="2423" name="TestReading0LengthBytes" fullname="Mirror.Tests.NetworkWriterTest.TestReading0LengthBytes" methodname="TestReading0LengthBytes" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="356583447" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000674" asserts="0">
              <properties />
            </test-case>
            <test-case id="2422" name="TestReading0LengthBytesAndSize" fullname="Mirror.Tests.NetworkWriterTest.TestReading0LengthBytesAndSize" methodname="TestReading0LengthBytesAndSize" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1956954017" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000666" asserts="0">
              <properties />
            </test-case>
            <test-case id="2438" name="TestReadingInvalidString" fullname="Mirror.Tests.NetworkWriterTest.TestReadingInvalidString" methodname="TestReadingInvalidString" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="314805052" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.002034" asserts="0">
              <properties />
            </test-case>
            <test-case id="2421" name="TestReadingLengthWrapAround" fullname="Mirror.Tests.NetworkWriterTest.TestReadingLengthWrapAround" methodname="TestReadingLengthWrapAround" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="166163173" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000778" asserts="0">
              <properties />
            </test-case>
            <test-case id="2425" name="TestReadingTooMuch" fullname="Mirror.Tests.NetworkWriterTest.TestReadingTooMuch" methodname="TestReadingTooMuch" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2089682253" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.009428" asserts="0">
              <properties />
            </test-case>
            <test-case id="2439" name="TestReadingTruncatedString" fullname="Mirror.Tests.NetworkWriterTest.TestReadingTruncatedString" methodname="TestReadingTruncatedString" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="126504142" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000857" asserts="0">
              <properties />
            </test-case>
            <test-case id="2434" name="TestRect" fullname="Mirror.Tests.NetworkWriterTest.TestRect" methodname="TestRect" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1904000541" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001484" asserts="0">
              <properties />
            </test-case>
            <test-case id="2420" name="TestResetSetsPotionAndLength" fullname="Mirror.Tests.NetworkWriterTest.TestResetSetsPotionAndLength" methodname="TestResetSetsPotionAndLength" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="36186217" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000724" asserts="0">
              <properties />
            </test-case>
            <test-case id="2461" name="TestSbyteEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestSbyteEndianness" methodname="TestSbyteEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1652109548" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000763" asserts="0">
              <properties />
            </test-case>
            <test-case id="2419" name="TestSetLengthInitialization" fullname="Mirror.Tests.NetworkWriterTest.TestSetLengthInitialization" methodname="TestSetLengthInitialization" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1981634413" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000748" asserts="0">
              <properties />
            </test-case>
            <test-case id="2418" name="TestSetLengthZeroes" fullname="Mirror.Tests.NetworkWriterTest.TestSetLengthZeroes" methodname="TestSetLengthZeroes" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="259031452" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000837" asserts="0">
              <properties />
            </test-case>
            <test-case id="2462" name="TestShortEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestShortEndianness" methodname="TestShortEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="785107617" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000754" asserts="0">
              <properties />
            </test-case>
            <test-case id="2440" name="TestToArray" fullname="Mirror.Tests.NetworkWriterTest.TestToArray" methodname="TestToArray" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1085007389" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000678" asserts="0">
              <properties />
            </test-case>
            <test-case id="2441" name="TestToArraySegment" fullname="Mirror.Tests.NetworkWriterTest.TestToArraySegment" methodname="TestToArraySegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1189240271" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000698" asserts="0">
              <properties />
            </test-case>
            <test-case id="2459" name="TestUIntEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestUIntEndianness" methodname="TestUIntEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="529672505" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000711" asserts="0">
              <properties />
            </test-case>
            <test-case id="2460" name="TestULongEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestULongEndianness" methodname="TestULongEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1037720677" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000730" asserts="0">
              <properties />
            </test-case>
            <test-case id="2443" name="TestUnicodeString" fullname="Mirror.Tests.NetworkWriterTest.TestUnicodeString" methodname="TestUnicodeString" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="2011679351" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001066" asserts="0">
              <properties />
            </test-case>
            <test-case id="2458" name="TestUShortEndianness" fullname="Mirror.Tests.NetworkWriterTest.TestUShortEndianness" methodname="TestUShortEndianness" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1566975792" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000718" asserts="0">
              <properties />
            </test-case>
            <test-case id="2426" name="TestVector2" fullname="Mirror.Tests.NetworkWriterTest.TestVector2" methodname="TestVector2" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="364999925" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001405" asserts="0">
              <properties />
            </test-case>
            <test-case id="2429" name="TestVector2Int" fullname="Mirror.Tests.NetworkWriterTest.TestVector2Int" methodname="TestVector2Int" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1517185874" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001530" asserts="0">
              <properties />
            </test-case>
            <test-case id="2427" name="TestVector3" fullname="Mirror.Tests.NetworkWriterTest.TestVector3" methodname="TestVector3" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1557792920" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000988" asserts="0">
              <properties />
            </test-case>
            <test-case id="2430" name="TestVector3Int" fullname="Mirror.Tests.NetworkWriterTest.TestVector3Int" methodname="TestVector3Int" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="872344436" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001579" asserts="0">
              <properties />
            </test-case>
            <test-case id="2428" name="TestVector4" fullname="Mirror.Tests.NetworkWriterTest.TestVector4" methodname="TestVector4" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="991665398" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.001355" asserts="0">
              <properties />
            </test-case>
            <test-case id="2465" name="TestWritingAndReading" fullname="Mirror.Tests.NetworkWriterTest.TestWritingAndReading" methodname="TestWritingAndReading" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1686102375" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.002201" asserts="0">
              <properties />
            </test-case>
            <test-case id="2416" name="TestWritingBytesAndReadingSegment" fullname="Mirror.Tests.NetworkWriterTest.TestWritingBytesAndReadingSegment" methodname="TestWritingBytesAndReadingSegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1957030415" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000771" asserts="0">
              <properties />
            </test-case>
            <test-case id="2415" name="TestWritingBytesSegment" fullname="Mirror.Tests.NetworkWriterTest.TestWritingBytesSegment" methodname="TestWritingBytesSegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="51581216" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000765" asserts="0">
              <properties />
            </test-case>
            <test-case id="2414" name="TestWritingHugeArray" fullname="Mirror.Tests.NetworkWriterTest.TestWritingHugeArray" methodname="TestWritingHugeArray" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="839209768" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000886" asserts="0">
              <properties />
            </test-case>
            <test-case id="2413" name="TestWritingLargeMessage" fullname="Mirror.Tests.NetworkWriterTest.TestWritingLargeMessage" methodname="TestWritingLargeMessage" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1152383872" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000919" asserts="0">
              <properties />
            </test-case>
            <test-case id="2424" name="TestWritingNegativeBytesAndSizeFailure" fullname="Mirror.Tests.NetworkWriterTest.TestWritingNegativeBytesAndSizeFailure" methodname="TestWritingNegativeBytesAndSizeFailure" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1832605099" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000778" asserts="0">
              <properties />
            </test-case>
            <test-case id="2417" name="TestWritingSegmentAndReadingSegment" fullname="Mirror.Tests.NetworkWriterTest.TestWritingSegmentAndReadingSegment" methodname="TestWritingSegmentAndReadingSegment" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="780770344" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000791" asserts="0">
              <properties />
            </test-case>
            <test-case id="2412" name="TestWritingSmallMessage" fullname="Mirror.Tests.NetworkWriterTest.TestWritingSmallMessage" methodname="TestWritingSmallMessage" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="53677446" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.000865" asserts="0">
              <properties />
            </test-case>
            <test-case id="2466" name="TestWritingUri" fullname="Mirror.Tests.NetworkWriterTest.TestWritingUri" methodname="TestWritingUri" classname="Mirror.Tests.NetworkWriterTest" runstate="Runnable" seed="1538041884" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.003459" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestSuite" id="2777" name="RemoteAttrributeTest" fullname="Mirror.Tests.RemoteAttrributeTest" runstate="Runnable" testcasecount="22" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:44Z" duration="1.385437" total="22" passed="22" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="2739" name="ClientRpcOverrideTest" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.225133" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2742" name="OverrideVirtualRpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest.OverrideVirtualRpcIsCalled" methodname="OverrideVirtualRpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" runstate="Runnable" seed="885024447" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.049526" asserts="0">
                <properties />
              </test-case>
              <test-case id="2743" name="OverrideVirtualWithBaseCallsBothVirtualAndBase" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest.OverrideVirtualWithBaseCallsBothVirtualAndBase" methodname="OverrideVirtualWithBaseCallsBothVirtualAndBase" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" runstate="Runnable" seed="1723365487" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.055931" asserts="0">
                <properties />
              </test-case>
              <test-case id="2741" name="VirtualCommandWithNoOverrideIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest.VirtualCommandWithNoOverrideIsCalled" methodname="VirtualCommandWithNoOverrideIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" runstate="Runnable" seed="1091658742" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.055334" asserts="0">
                <properties />
              </test-case>
              <test-case id="2740" name="VirtualRpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest.VirtualRpcIsCalled" methodname="VirtualRpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcOverrideTest" runstate="Runnable" seed="916263690" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.058853" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2744" name="ClientRpcTest" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.178642" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2745" name="RpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest.RpcIsCalled" methodname="RpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest" runstate="Runnable" seed="2002888203" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.053640" asserts="0">
                <properties />
              </test-case>
              <test-case id="2746" name="RpcIsCalledForNotOwnerd" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest.RpcIsCalledForNotOwnerd" methodname="RpcIsCalledForNotOwnerd" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest" runstate="Runnable" seed="1066519828" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.055326" asserts="0">
                <properties />
              </test-case>
              <test-case id="2747" name="RpcNotCalledForOwnerd" fullname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest.RpcNotCalledForOwnerd" methodname="RpcNotCalledForOwnerd" classname="Mirror.Tests.RemoteAttrributeTest.ClientRpcTest" runstate="Runnable" seed="1729873664" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.058921" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2748" name="CommandOverrideTest" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:44Z" duration="0.245317" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2751" name="OverrideVirtualCommandIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest.OverrideVirtualCommandIsCalled" methodname="OverrideVirtualCommandIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" seed="579147831" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:43Z" duration="0.058547" asserts="0">
                <properties />
              </test-case>
              <test-case id="2752" name="OverrideVirtualWithBaseCallsBothVirtualAndBase" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest.OverrideVirtualWithBaseCallsBothVirtualAndBase" methodname="OverrideVirtualWithBaseCallsBothVirtualAndBase" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" seed="1211500893" result="Passed" start-time="2020-06-13 18:29:43Z" end-time="2020-06-13 18:29:44Z" duration="0.058940" asserts="0">
                <properties />
              </test-case>
              <test-case id="2749" name="VirtualCommandIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest.VirtualCommandIsCalled" methodname="VirtualCommandIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" seed="1411255599" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.062259" asserts="0">
                <properties />
              </test-case>
              <test-case id="2750" name="VirtualCommandWithNoOverrideIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest.VirtualCommandWithNoOverrideIsCalled" methodname="VirtualCommandWithNoOverrideIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.CommandOverrideTest" runstate="Runnable" seed="362576962" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.055655" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2753" name="CommandTest" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.399357" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2754" name="CommandIsSentWithAuthority" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.CommandIsSentWithAuthority" methodname="CommandIsSentWithAuthority" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="1121425803" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.058391" asserts="0">
                <properties />
              </test-case>
              <test-case id="2756" name="CommandIsSentWithAuthorityWhenIgnoringAuthority" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.CommandIsSentWithAuthorityWhenIgnoringAuthority" methodname="CommandIsSentWithAuthorityWhenIgnoringAuthority" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="253245633" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.059687" asserts="0">
                <properties />
              </test-case>
              <test-case id="2757" name="CommandIsSentWithoutAuthorityWhenIgnoringAuthority" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.CommandIsSentWithoutAuthorityWhenIgnoringAuthority" methodname="CommandIsSentWithoutAuthorityWhenIgnoringAuthority" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="1628645463" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.067195" asserts="0">
                <properties />
              </test-case>
              <test-case id="2758" name="SenderConnectionIsSetWhenCommandIsRecieved" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.SenderConnectionIsSetWhenCommandIsRecieved" methodname="SenderConnectionIsSetWhenCommandIsRecieved" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="2013468045" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.063039" asserts="0">
                <properties />
              </test-case>
              <test-case id="2759" name="SenderConnectionIsSetWhenCommandIsRecievedWithIgnoreAuthority" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.SenderConnectionIsSetWhenCommandIsRecievedWithIgnoreAuthority" methodname="SenderConnectionIsSetWhenCommandIsRecievedWithIgnoreAuthority" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="1389443985" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.066760" asserts="0">
                <properties />
              </test-case>
              <test-case id="2755" name="WarningForCommandSentWithoutAuthority" fullname="Mirror.Tests.RemoteAttrributeTest.CommandTest.WarningForCommandSentWithoutAuthority" methodname="WarningForCommandSentWithoutAuthority" classname="Mirror.Tests.RemoteAttrributeTest.CommandTest" runstate="Runnable" seed="962388467" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.066826" asserts="0">
                <properties />
                <output><![CDATA[Trying to send command for object without authority. Mirror.Tests.RemoteAttrributeTest.AuthorityBehaviour.CmdSendInt
]]></output>
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2760" name="TargetRpcOverrideTest" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" runstate="Runnable" testcasecount="4" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.240341" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2763" name="OverrideVirtualRpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest.OverrideVirtualRpcIsCalled" methodname="OverrideVirtualRpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" runstate="Runnable" seed="627361583" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.054725" asserts="0">
                <properties />
              </test-case>
              <test-case id="2764" name="OverrideVirtualWithBaseCallsBothVirtualAndBase" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest.OverrideVirtualWithBaseCallsBothVirtualAndBase" methodname="OverrideVirtualWithBaseCallsBothVirtualAndBase" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" runstate="Runnable" seed="197818663" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.062736" asserts="0">
                <properties />
              </test-case>
              <test-case id="2762" name="VirtualCommandWithNoOverrideIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest.VirtualCommandWithNoOverrideIsCalled" methodname="VirtualCommandWithNoOverrideIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" runstate="Runnable" seed="512727539" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.058977" asserts="0">
                <properties />
              </test-case>
              <test-case id="2761" name="VirtualRpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest.VirtualRpcIsCalled" methodname="VirtualRpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcOverrideTest" runstate="Runnable" seed="762243191" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.055100" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2765" name="TargetRpcTest" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.062717" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2766" name="RpcIsCalled" fullname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest.RpcIsCalled" methodname="RpcIsCalled" classname="Mirror.Tests.RemoteAttrributeTest.TargetRpcTest" runstate="Runnable" seed="851096488" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.054016" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="2467" name="ScriptableObjectWriterTest" fullname="Mirror.Tests.ScriptableObjectWriterTest" classname="Mirror.Tests.ScriptableObjectWriterTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.005982" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2468" name="TestWriteScriptableObject" fullname="Mirror.Tests.ScriptableObjectWriterTest.TestWriteScriptableObject" methodname="TestWriteScriptableObject" classname="Mirror.Tests.ScriptableObjectWriterTest" runstate="Runnable" seed="1019429731" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.001355" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2469" name="SyncDictionaryTest" fullname="Mirror.Tests.SyncDictionaryTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" testcasecount="26" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:45Z" duration="0.438068" total="26" passed="26" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2483" name="CallbackRemoveTest" fullname="Mirror.Tests.SyncDictionaryTest.CallbackRemoveTest" methodname="CallbackRemoveTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="2117161255" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.006651" asserts="0">
              <properties />
            </test-case>
            <test-case id="2481" name="CallbackTest" fullname="Mirror.Tests.SyncDictionaryTest.CallbackTest" methodname="CallbackTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1544139746" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.018348" asserts="0">
              <properties />
            </test-case>
            <test-case id="2487" name="CopyToOutOfBoundsTest" fullname="Mirror.Tests.SyncDictionaryTest.CopyToOutOfBoundsTest" methodname="CopyToOutOfBoundsTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1807256941" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.015251" asserts="0">
              <properties />
            </test-case>
            <test-case id="2486" name="CopyToOutOfRangeTest" fullname="Mirror.Tests.SyncDictionaryTest.CopyToOutOfRangeTest" methodname="CopyToOutOfRangeTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1385111439" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:44Z" duration="0.015771" asserts="0">
              <properties />
            </test-case>
            <test-case id="2485" name="CopyToTest" fullname="Mirror.Tests.SyncDictionaryTest.CopyToTest" methodname="CopyToTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1684909216" result="Passed" start-time="2020-06-13 18:29:44Z" end-time="2020-06-13 18:29:45Z" duration="0.026091" asserts="0">
              <properties />
            </test-case>
            <test-case id="2484" name="CountTest" fullname="Mirror.Tests.SyncDictionaryTest.CountTest" methodname="CountTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1727444548" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.009826" asserts="0">
              <properties />
            </test-case>
            <test-case id="2491" name="DirtyTest" fullname="Mirror.Tests.SyncDictionaryTest.DirtyTest" methodname="DirtyTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="664056059" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.011471" asserts="0">
              <properties />
            </test-case>
            <test-case id="2492" name="ObjectCanBeReusedAfterReset" fullname="Mirror.Tests.SyncDictionaryTest.ObjectCanBeReusedAfterReset" methodname="ObjectCanBeReusedAfterReset" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1446070139" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.014922" asserts="0">
              <properties />
            </test-case>
            <test-case id="2489" name="ReadOnlyTest" fullname="Mirror.Tests.SyncDictionaryTest.ReadOnlyTest" methodname="ReadOnlyTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="2066138817" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.016557" asserts="0">
              <properties />
            </test-case>
            <test-case id="2494" name="ResetShouldClearChanges" fullname="Mirror.Tests.SyncDictionaryTest.ResetShouldClearChanges" methodname="ResetShouldClearChanges" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="714210144" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.014022" asserts="0">
              <properties />
            </test-case>
            <test-case id="2495" name="ResetShouldClearItems" fullname="Mirror.Tests.SyncDictionaryTest.ResetShouldClearItems" methodname="ResetShouldClearItems" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1852900637" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.017008" asserts="0">
              <properties />
            </test-case>
            <test-case id="2493" name="ResetShouldSetReadOnlyToFalse" fullname="Mirror.Tests.SyncDictionaryTest.ResetShouldSetReadOnlyToFalse" methodname="ResetShouldSetReadOnlyToFalse" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1276066181" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.014271" asserts="0">
              <properties />
            </test-case>
            <test-case id="2482" name="ServerCallbackTest" fullname="Mirror.Tests.SyncDictionaryTest.ServerCallbackTest" methodname="ServerCallbackTest" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1272216499" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.017176" asserts="0">
              <properties />
            </test-case>
            <test-case id="2471" name="TestAdd" fullname="Mirror.Tests.SyncDictionaryTest.TestAdd" methodname="TestAdd" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1049343156" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.013624" asserts="0">
              <properties />
            </test-case>
            <test-case id="2474" name="TestBareSet" fullname="Mirror.Tests.SyncDictionaryTest.TestBareSet" methodname="TestBareSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1966576535" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.025757" asserts="0">
              <properties />
            </test-case>
            <test-case id="2475" name="TestBareSetNull" fullname="Mirror.Tests.SyncDictionaryTest.TestBareSetNull" methodname="TestBareSetNull" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="544911396" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.008597" asserts="0">
              <properties />
            </test-case>
            <test-case id="2472" name="TestClear" fullname="Mirror.Tests.SyncDictionaryTest.TestClear" methodname="TestClear" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1474338142" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.013493" asserts="0">
              <properties />
            </test-case>
            <test-case id="2476" name="TestConsecutiveSet" fullname="Mirror.Tests.SyncDictionaryTest.TestConsecutiveSet" methodname="TestConsecutiveSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1041421649" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.017970" asserts="0">
              <properties />
            </test-case>
            <test-case id="2480" name="TestContains" fullname="Mirror.Tests.SyncDictionaryTest.TestContains" methodname="TestContains" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1525095795" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.014112" asserts="0">
              <properties />
            </test-case>
            <test-case id="2470" name="TestInit" fullname="Mirror.Tests.SyncDictionaryTest.TestInit" methodname="TestInit" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1861852749" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.016668" asserts="0">
              <properties />
            </test-case>
            <test-case id="2479" name="TestMultSync" fullname="Mirror.Tests.SyncDictionaryTest.TestMultSync" methodname="TestMultSync" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1571055960" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.014339" asserts="0">
              <properties />
            </test-case>
            <test-case id="2477" name="TestNullSet" fullname="Mirror.Tests.SyncDictionaryTest.TestNullSet" methodname="TestNullSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1883677793" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.017151" asserts="0">
              <properties />
            </test-case>
            <test-case id="2478" name="TestRemove" fullname="Mirror.Tests.SyncDictionaryTest.TestRemove" methodname="TestRemove" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1507092347" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.014835" asserts="0">
              <properties />
            </test-case>
            <test-case id="2488" name="TestRemovePair" fullname="Mirror.Tests.SyncDictionaryTest.TestRemovePair" methodname="TestRemovePair" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="832713584" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.015699" asserts="0">
              <properties />
            </test-case>
            <test-case id="2473" name="TestSet" fullname="Mirror.Tests.SyncDictionaryTest.TestSet" methodname="TestSet" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="999430161" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.016033" asserts="0">
              <properties />
            </test-case>
            <test-case id="2490" name="WritingToReadOnlyThrows" fullname="Mirror.Tests.SyncDictionaryTest.WritingToReadOnlyThrows" methodname="WritingToReadOnlyThrows" classname="Mirror.Tests.SyncDictionaryTest" runstate="Runnable" seed="1581528718" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.016259" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2496" name="SyncListClassTest" fullname="Mirror.Tests.SyncListClassTest" classname="Mirror.Tests.SyncListClassTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.010126" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2498" name="ClearShouldClearAll" fullname="Mirror.Tests.SyncListClassTest.ClearShouldClearAll" methodname="ClearShouldClearAll" classname="Mirror.Tests.SyncListClassTest" runstate="Runnable" seed="2069792317" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.004709" asserts="0">
              <properties />
            </test-case>
            <test-case id="2497" name="RemoveShouldRemoveItem" fullname="Mirror.Tests.SyncListClassTest.RemoveShouldRemoveItem" methodname="RemoveShouldRemoveItem" classname="Mirror.Tests.SyncListClassTest" runstate="Runnable" seed="848441256" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.001054" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2499" name="SyncListStructTest" fullname="Mirror.Tests.SyncListStructTest" classname="Mirror.Tests.SyncListStructTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.011383" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2500" name="ListIsDirtyWhenModifingAndSettingStruct" fullname="Mirror.Tests.SyncListStructTest.ListIsDirtyWhenModifingAndSettingStruct" methodname="ListIsDirtyWhenModifingAndSettingStruct" classname="Mirror.Tests.SyncListStructTest" runstate="Runnable" seed="941004028" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.004116" asserts="0">
              <properties />
            </test-case>
            <test-case id="2501" name="OldValueShouldNotBeNewValue" fullname="Mirror.Tests.SyncListStructTest.OldValueShouldNotBeNewValue" methodname="OldValueShouldNotBeNewValue" classname="Mirror.Tests.SyncListStructTest" runstate="Runnable" seed="353722418" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.000770" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2502" name="SyncListTest" fullname="Mirror.Tests.SyncListTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" testcasecount="33" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.552017" total="33" passed="33" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2527" name="CallbackRemoveAtTest" fullname="Mirror.Tests.SyncListTest.CallbackRemoveAtTest" methodname="CallbackRemoveAtTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="738195269" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.007399" asserts="0">
              <properties />
            </test-case>
            <test-case id="2526" name="CallbackRemoveTest" fullname="Mirror.Tests.SyncListTest.CallbackRemoveTest" methodname="CallbackRemoveTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="996314909" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.011727" asserts="0">
              <properties />
            </test-case>
            <test-case id="2525" name="CallbackTest" fullname="Mirror.Tests.SyncListTest.CallbackTest" methodname="CallbackTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="428455048" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.018038" asserts="0">
              <properties />
            </test-case>
            <test-case id="2528" name="CountTest" fullname="Mirror.Tests.SyncListTest.CountTest" methodname="CountTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1988974759" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.015425" asserts="0">
              <properties />
            </test-case>
            <test-case id="2531" name="DirtyTest" fullname="Mirror.Tests.SyncListTest.DirtyTest" methodname="DirtyTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="13505255" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.015561" asserts="0">
              <properties />
            </test-case>
            <test-case id="2532" name="ObjectCanBeReusedAfterReset" fullname="Mirror.Tests.SyncListTest.ObjectCanBeReusedAfterReset" methodname="ObjectCanBeReusedAfterReset" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1622757720" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.015215" asserts="0">
              <properties />
            </test-case>
            <test-case id="2529" name="ReadOnlyTest" fullname="Mirror.Tests.SyncListTest.ReadOnlyTest" methodname="ReadOnlyTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1127427766" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.017096" asserts="0">
              <properties />
            </test-case>
            <test-case id="2534" name="ResetShouldClearChanges" fullname="Mirror.Tests.SyncListTest.ResetShouldClearChanges" methodname="ResetShouldClearChanges" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1748714194" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.015094" asserts="0">
              <properties />
            </test-case>
            <test-case id="2535" name="ResetShouldClearItems" fullname="Mirror.Tests.SyncListTest.ResetShouldClearItems" methodname="ResetShouldClearItems" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="2060084254" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.015607" asserts="0">
              <properties />
            </test-case>
            <test-case id="2533" name="ResetShouldSetReadOnlyToFalse" fullname="Mirror.Tests.SyncListTest.ResetShouldSetReadOnlyToFalse" methodname="ResetShouldSetReadOnlyToFalse" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="2112390603" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.015913" asserts="0">
              <properties />
            </test-case>
            <test-case id="2522" name="SyncListBoolTest" fullname="Mirror.Tests.SyncListTest.SyncListBoolTest" methodname="SyncListBoolTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1000624072" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.016096" asserts="0">
              <properties />
            </test-case>
            <test-case id="2524" name="SyncListFloatTest" fullname="Mirror.Tests.SyncListTest.SyncListFloatTest" methodname="SyncListFloatTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1994085338" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.014072" asserts="0">
              <properties />
            </test-case>
            <test-case id="2521" name="SyncListIntTest" fullname="Mirror.Tests.SyncListTest.SyncListIntTest" methodname="SyncListIntTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1770768267" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.016584" asserts="0">
              <properties />
            </test-case>
            <test-case id="2523" name="SyncListUintTest" fullname="Mirror.Tests.SyncListTest.SyncListUintTest" methodname="SyncListUintTest" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1814948118" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.014155" asserts="0">
              <properties />
            </test-case>
            <test-case id="2504" name="TestAdd" fullname="Mirror.Tests.SyncListTest.TestAdd" methodname="TestAdd" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="2095228083" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.017273" asserts="0">
              <properties />
            </test-case>
            <test-case id="2505" name="TestAddRange" fullname="Mirror.Tests.SyncListTest.TestAddRange" methodname="TestAddRange" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="475500388" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.015259" asserts="0">
              <properties />
            </test-case>
            <test-case id="2506" name="TestClear" fullname="Mirror.Tests.SyncListTest.TestClear" methodname="TestClear" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1798434623" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.017426" asserts="0">
              <properties />
            </test-case>
            <test-case id="2516" name="TestFind" fullname="Mirror.Tests.SyncListTest.TestFind" methodname="TestFind" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="75035814" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.014757" asserts="0">
              <properties />
            </test-case>
            <test-case id="2518" name="TestFindAll" fullname="Mirror.Tests.SyncListTest.TestFindAll" methodname="TestFindAll" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1102184231" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.015836" asserts="0">
              <properties />
            </test-case>
            <test-case id="2519" name="TestFindAllNonExistent" fullname="Mirror.Tests.SyncListTest.TestFindAllNonExistent" methodname="TestFindAllNonExistent" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="470184229" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.016891" asserts="0">
              <properties />
            </test-case>
            <test-case id="2515" name="TestFindIndex" fullname="Mirror.Tests.SyncListTest.TestFindIndex" methodname="TestFindIndex" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1734809827" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.015241" asserts="0">
              <properties />
            </test-case>
            <test-case id="2503" name="TestInit" fullname="Mirror.Tests.SyncListTest.TestInit" methodname="TestInit" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="765673228" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.013546" asserts="0">
              <properties />
            </test-case>
            <test-case id="2507" name="TestInsert" fullname="Mirror.Tests.SyncListTest.TestInsert" methodname="TestInsert" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1668640804" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.017971" asserts="0">
              <properties />
            </test-case>
            <test-case id="2508" name="TestInsertRange" fullname="Mirror.Tests.SyncListTest.TestInsertRange" methodname="TestInsertRange" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="505158696" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.013055" asserts="0">
              <properties />
            </test-case>
            <test-case id="2520" name="TestMultSync" fullname="Mirror.Tests.SyncListTest.TestMultSync" methodname="TestMultSync" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1582334377" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.018808" asserts="0">
              <properties />
            </test-case>
            <test-case id="2517" name="TestNoFind" fullname="Mirror.Tests.SyncListTest.TestNoFind" methodname="TestNoFind" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="694567343" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.013287" asserts="0">
              <properties />
            </test-case>
            <test-case id="2514" name="TestRemove" fullname="Mirror.Tests.SyncListTest.TestRemove" methodname="TestRemove" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="2015968787" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.017061" asserts="0">
              <properties />
            </test-case>
            <test-case id="2511" name="TestRemoveAll" fullname="Mirror.Tests.SyncListTest.TestRemoveAll" methodname="TestRemoveAll" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1071331947" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.015120" asserts="0">
              <properties />
            </test-case>
            <test-case id="2512" name="TestRemoveAllNone" fullname="Mirror.Tests.SyncListTest.TestRemoveAllNone" methodname="TestRemoveAllNone" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1282647577" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.016931" asserts="0">
              <properties />
            </test-case>
            <test-case id="2513" name="TestRemoveAt" fullname="Mirror.Tests.SyncListTest.TestRemoveAt" methodname="TestRemoveAt" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="504459620" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.015345" asserts="0">
              <properties />
            </test-case>
            <test-case id="2509" name="TestSet" fullname="Mirror.Tests.SyncListTest.TestSet" methodname="TestSet" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="539408493" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.015816" asserts="0">
              <properties />
            </test-case>
            <test-case id="2510" name="TestSetNull" fullname="Mirror.Tests.SyncListTest.TestSetNull" methodname="TestSetNull" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="629809460" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.015519" asserts="0">
              <properties />
            </test-case>
            <test-case id="2530" name="WritingToReadOnlyThrows" fullname="Mirror.Tests.SyncListTest.WritingToReadOnlyThrows" methodname="WritingToReadOnlyThrows" classname="Mirror.Tests.SyncListTest" runstate="Runnable" seed="1586274071" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:45Z" duration="0.016075" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2536" name="SyncSetTest" fullname="Mirror.Tests.SyncSetTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" testcasecount="30" result="Passed" start-time="2020-06-13 18:29:45Z" end-time="2020-06-13 18:29:46Z" duration="0.508484" total="30" passed="30" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2543" name="CallbackRemoveTest" fullname="Mirror.Tests.SyncSetTest.CallbackRemoveTest" methodname="CallbackRemoveTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1392691982" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.007958" asserts="0">
              <properties />
            </test-case>
            <test-case id="2542" name="CallbackTest" fullname="Mirror.Tests.SyncSetTest.CallbackTest" methodname="CallbackTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1788269593" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.016031" asserts="0">
              <properties />
            </test-case>
            <test-case id="2544" name="CountTest" fullname="Mirror.Tests.SyncSetTest.CountTest" methodname="CountTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="365292874" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.017763" asserts="0">
              <properties />
            </test-case>
            <test-case id="2563" name="ObjectCanBeReusedAfterReset" fullname="Mirror.Tests.SyncSetTest.ObjectCanBeReusedAfterReset" methodname="ObjectCanBeReusedAfterReset" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="2073806027" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.013960" asserts="0">
              <properties />
            </test-case>
            <test-case id="2561" name="ReadOnlyTest" fullname="Mirror.Tests.SyncSetTest.ReadOnlyTest" methodname="ReadOnlyTest" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1564655870" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.015752" asserts="0">
              <properties />
            </test-case>
            <test-case id="2565" name="ResetShouldClearChanges" fullname="Mirror.Tests.SyncSetTest.ResetShouldClearChanges" methodname="ResetShouldClearChanges" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="869098074" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.017508" asserts="0">
              <properties />
            </test-case>
            <test-case id="2566" name="ResetShouldClearItems" fullname="Mirror.Tests.SyncSetTest.ResetShouldClearItems" methodname="ResetShouldClearItems" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1046979887" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.015018" asserts="0">
              <properties />
            </test-case>
            <test-case id="2564" name="ResetShouldSetReadOnlyToFalse" fullname="Mirror.Tests.SyncSetTest.ResetShouldSetReadOnlyToFalse" methodname="ResetShouldSetReadOnlyToFalse" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="359613340" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.014798" asserts="0">
              <properties />
            </test-case>
            <test-case id="2538" name="TestAdd" fullname="Mirror.Tests.SyncSetTest.TestAdd" methodname="TestAdd" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1033464866" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.015220" asserts="0">
              <properties />
            </test-case>
            <test-case id="2539" name="TestClear" fullname="Mirror.Tests.SyncSetTest.TestClear" methodname="TestClear" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="256251007" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.016122" asserts="0">
              <properties />
            </test-case>
            <test-case id="2545" name="TestExceptWith" fullname="Mirror.Tests.SyncSetTest.TestExceptWith" methodname="TestExceptWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="443519852" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.017292" asserts="0">
              <properties />
            </test-case>
            <test-case id="2546" name="TestExceptWithSelf" fullname="Mirror.Tests.SyncSetTest.TestExceptWithSelf" methodname="TestExceptWithSelf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="549076621" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.014675" asserts="0">
              <properties />
            </test-case>
            <test-case id="2537" name="TestInit" fullname="Mirror.Tests.SyncSetTest.TestInit" methodname="TestInit" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="85841082" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.014418" asserts="0">
              <properties />
            </test-case>
            <test-case id="2547" name="TestIntersectWith" fullname="Mirror.Tests.SyncSetTest.TestIntersectWith" methodname="TestIntersectWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1488486051" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.016269" asserts="0">
              <properties />
            </test-case>
            <test-case id="2548" name="TestIntersectWithSet" fullname="Mirror.Tests.SyncSetTest.TestIntersectWithSet" methodname="TestIntersectWithSet" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="867640434" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.015463" asserts="0">
              <properties />
            </test-case>
            <test-case id="2551" name="TestIsNotProperSubsetOf" fullname="Mirror.Tests.SyncSetTest.TestIsNotProperSubsetOf" methodname="TestIsNotProperSubsetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="316268265" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.016385" asserts="0">
              <properties />
            </test-case>
            <test-case id="2549" name="TestIsProperSubsetOf" fullname="Mirror.Tests.SyncSetTest.TestIsProperSubsetOf" methodname="TestIsProperSubsetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="265536069" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.014319" asserts="0">
              <properties />
            </test-case>
            <test-case id="2550" name="TestIsProperSubsetOfSet" fullname="Mirror.Tests.SyncSetTest.TestIsProperSubsetOfSet" methodname="TestIsProperSubsetOfSet" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1960181894" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.016602" asserts="0">
              <properties />
            </test-case>
            <test-case id="2552" name="TestIsProperSuperSetOf" fullname="Mirror.Tests.SyncSetTest.TestIsProperSuperSetOf" methodname="TestIsProperSuperSetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1767808848" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.016145" asserts="0">
              <properties />
            </test-case>
            <test-case id="2553" name="TestIsSubsetOf" fullname="Mirror.Tests.SyncSetTest.TestIsSubsetOf" methodname="TestIsSubsetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1985482922" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.015254" asserts="0">
              <properties />
            </test-case>
            <test-case id="2554" name="TestIsSupersetOf" fullname="Mirror.Tests.SyncSetTest.TestIsSupersetOf" methodname="TestIsSupersetOf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="777763663" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.014260" asserts="0">
              <properties />
            </test-case>
            <test-case id="2541" name="TestMultSync" fullname="Mirror.Tests.SyncSetTest.TestMultSync" methodname="TestMultSync" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1432791852" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.017609" asserts="0">
              <properties />
            </test-case>
            <test-case id="2555" name="TestOverlaps" fullname="Mirror.Tests.SyncSetTest.TestOverlaps" methodname="TestOverlaps" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="88028051" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.014766" asserts="0">
              <properties />
            </test-case>
            <test-case id="2540" name="TestRemove" fullname="Mirror.Tests.SyncSetTest.TestRemove" methodname="TestRemove" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="1341389054" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.015670" asserts="0">
              <properties />
            </test-case>
            <test-case id="2556" name="TestSetEquals" fullname="Mirror.Tests.SyncSetTest.TestSetEquals" methodname="TestSetEquals" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="488507624" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.016091" asserts="0">
              <properties />
            </test-case>
            <test-case id="2557" name="TestSymmetricExceptWith" fullname="Mirror.Tests.SyncSetTest.TestSymmetricExceptWith" methodname="TestSymmetricExceptWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="207950518" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.016239" asserts="0">
              <properties />
            </test-case>
            <test-case id="2558" name="TestSymmetricExceptWithSelf" fullname="Mirror.Tests.SyncSetTest.TestSymmetricExceptWithSelf" methodname="TestSymmetricExceptWithSelf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="2036979991" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.014427" asserts="0">
              <properties />
            </test-case>
            <test-case id="2559" name="TestUnionWith" fullname="Mirror.Tests.SyncSetTest.TestUnionWith" methodname="TestUnionWith" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="56822728" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.016623" asserts="0">
              <properties />
            </test-case>
            <test-case id="2560" name="TestUnionWithSelf" fullname="Mirror.Tests.SyncSetTest.TestUnionWithSelf" methodname="TestUnionWithSelf" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="2106615666" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.015014" asserts="0">
              <properties />
            </test-case>
            <test-case id="2562" name="WritingToReadOnlyThrows" fullname="Mirror.Tests.SyncSetTest.WritingToReadOnlyThrows" methodname="WritingToReadOnlyThrows" classname="Mirror.Tests.SyncSetTest" runstate="Runnable" seed="136342556" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.016787" asserts="0">
              <properties />
            </test-case>
          </test-suite>
          <test-suite type="TestFixture" id="2567" name="SyncVarHookTest" fullname="Mirror.Tests.SyncVarHookTest" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="16" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.343623" total="16" passed="16" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="ParameterizedMethod" id="2591" name="AbstractHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarHookTest.AbstractHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.037158" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2589" name="AbstractHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarHookTest.AbstractHook_HookCalledWhenSyncingChangedValue(True)" methodname="AbstractHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="579993816" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.011687" asserts="0">
                <properties />
              </test-case>
              <test-case id="2590" name="AbstractHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarHookTest.AbstractHook_HookCalledWhenSyncingChangedValue(False)" methodname="AbstractHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="701776161" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.018350" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="2579" name="GameObjectHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarHookTest.GameObjectHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.040140" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2577" name="GameObjectHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarHookTest.GameObjectHook_HookCalledWhenSyncingChangedValue(True)" methodname="GameObjectHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="405216254" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.009971" asserts="0">
                <properties />
              </test-case>
              <test-case id="2578" name="GameObjectHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarHookTest.GameObjectHook_HookCalledWhenSyncingChangedValue(False)" methodname="GameObjectHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1438462802" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.019978" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="2570" name="Hook_CalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarHookTest.Hook_CalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.036588" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2568" name="Hook_CalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarHookTest.Hook_CalledWhenSyncingChangedValue(True)" methodname="Hook_CalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1906534596" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.011434" asserts="0">
                <properties />
              </test-case>
              <test-case id="2569" name="Hook_CalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarHookTest.Hook_CalledWhenSyncingChangedValue(False)" methodname="Hook_CalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1336623991" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.018537" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="2573" name="Hook_NotCalledWhenSyncingSameValue" fullname="Mirror.Tests.SyncVarHookTest.Hook_NotCalledWhenSyncingSameValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.036849" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2571" name="Hook_NotCalledWhenSyncingSameValue(True)" fullname="Mirror.Tests.SyncVarHookTest.Hook_NotCalledWhenSyncingSameValue(True)" methodname="Hook_NotCalledWhenSyncingSameValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1164343275" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.010366" asserts="0">
                <properties />
              </test-case>
              <test-case id="2572" name="Hook_NotCalledWhenSyncingSameValue(False)" fullname="Mirror.Tests.SyncVarHookTest.Hook_NotCalledWhenSyncingSameValue(False)" methodname="Hook_NotCalledWhenSyncingSameValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="2077890942" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.019241" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="2582" name="NetworkIdentityHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarHookTest.NetworkIdentityHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.040797" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2580" name="NetworkIdentityHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarHookTest.NetworkIdentityHook_HookCalledWhenSyncingChangedValue(True)" methodname="NetworkIdentityHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="772703339" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.017351" asserts="0">
                <properties />
              </test-case>
              <test-case id="2581" name="NetworkIdentityHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarHookTest.NetworkIdentityHook_HookCalledWhenSyncingChangedValue(False)" methodname="NetworkIdentityHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="994471027" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.013888" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="2576" name="StaticMethod_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarHookTest.StaticMethod_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.043994" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2574" name="StaticMethod_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarHookTest.StaticMethod_HookCalledWhenSyncingChangedValue(True)" methodname="StaticMethod_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="22615908" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.010065" asserts="0">
                <properties />
              </test-case>
              <test-case id="2575" name="StaticMethod_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarHookTest.StaticMethod_HookCalledWhenSyncingChangedValue(False)" methodname="StaticMethod_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="176382156" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.027091" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="2585" name="VirtualHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarHookTest.VirtualHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.036740" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2583" name="VirtualHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarHookTest.VirtualHook_HookCalledWhenSyncingChangedValue(True)" methodname="VirtualHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1231119145" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.010311" asserts="0">
                <properties />
              </test-case>
              <test-case id="2584" name="VirtualHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarHookTest.VirtualHook_HookCalledWhenSyncingChangedValue(False)" methodname="VirtualHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1484803163" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.018842" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="ParameterizedMethod" id="2588" name="VirtualOverrideHook_HookCalledWhenSyncingChangedValue" fullname="Mirror.Tests.SyncVarHookTest.VirtualOverrideHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.038694" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties />
              <test-case id="2586" name="VirtualOverrideHook_HookCalledWhenSyncingChangedValue(True)" fullname="Mirror.Tests.SyncVarHookTest.VirtualOverrideHook_HookCalledWhenSyncingChangedValue(True)" methodname="VirtualOverrideHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1907734661" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.011264" asserts="0">
                <properties />
              </test-case>
              <test-case id="2587" name="VirtualOverrideHook_HookCalledWhenSyncingChangedValue(False)" fullname="Mirror.Tests.SyncVarHookTest.VirtualOverrideHook_HookCalledWhenSyncingChangedValue(False)" methodname="VirtualOverrideHook_HookCalledWhenSyncingChangedValue" classname="Mirror.Tests.SyncVarHookTest" runstate="Runnable" seed="1407932724" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.018763" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
          <test-suite type="TestFixture" id="2592" name="SyncVarTest" fullname="Mirror.Tests.SyncVarTest" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.015498" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-case id="2593" name="TestSettingStruct" fullname="Mirror.Tests.SyncVarTest.TestSettingStruct" methodname="TestSettingStruct" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" seed="1345134581" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.002061" asserts="0">
              <properties />
            </test-case>
            <test-case id="2596" name="TestSynchronizingObjects" fullname="Mirror.Tests.SyncVarTest.TestSynchronizingObjects" methodname="TestSynchronizingObjects" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" seed="1181848234" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.001187" asserts="0">
              <properties />
            </test-case>
            <test-case id="2595" name="TestSyncIntervalAndClearAllComponents" fullname="Mirror.Tests.SyncVarTest.TestSyncIntervalAndClearAllComponents" methodname="TestSyncIntervalAndClearAllComponents" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" seed="1387357905" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.000596" asserts="0">
              <properties />
            </test-case>
            <test-case id="2594" name="TestSyncIntervalAndClearDirtyComponents" fullname="Mirror.Tests.SyncVarTest.TestSyncIntervalAndClearDirtyComponents" methodname="TestSyncIntervalAndClearDirtyComponents" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" seed="1157816978" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.000583" asserts="0">
              <properties />
            </test-case>
            <test-case id="2597" name="TestSyncModeObserversMask" fullname="Mirror.Tests.SyncVarTest.TestSyncModeObserversMask" methodname="TestSyncModeObserversMask" classname="Mirror.Tests.SyncVarTest" runstate="Runnable" seed="671804077" result="Passed" start-time="2020-06-13 18:29:46Z" end-time="2020-06-13 18:29:46Z" duration="0.000610" asserts="0">
              <properties />
            </test-case>
          </test-suite>
        </test-suite>
        <test-suite type="TestSuite" id="2771" name="Weaver" fullname="Mirror.Weaver" runstate="Runnable" testcasecount="177" result="Passed" start-time="2020-06-13 18:29:47Z" end-time="2020-06-13 18:30:54Z" duration="66.828853" total="177" passed="177" failed="0" inconclusive="0" skipped="0" asserts="0">
          <properties />
          <test-suite type="TestSuite" id="2772" name="Tests" fullname="Mirror.Weaver.Tests" runstate="Runnable" testcasecount="177" result="Passed" start-time="2020-06-13 18:29:48Z" end-time="2020-06-13 18:30:54Z" duration="66.580704" total="177" passed="177" failed="0" inconclusive="0" skipped="0" asserts="0">
            <properties />
            <test-suite type="TestFixture" id="1924" name="WeaverClientRpcTests" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" testcasecount="8" result="Passed" start-time="2020-06-13 18:29:48Z" end-time="2020-06-13 18:29:51Z" duration="3.100535" total="8" passed="8" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1930" name="AbstractClientRpc" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.AbstractClientRpc" methodname="AbstractClientRpc" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="1361731806" result="Passed" start-time="2020-06-13 18:29:48Z" end-time="2020-06-13 18:29:48Z" duration="0.469098" asserts="0">
                <properties />
              </test-case>
              <test-case id="1927" name="ClientRpcCantBeStatic" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.ClientRpcCantBeStatic" methodname="ClientRpcCantBeStatic" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="580253716" result="Passed" start-time="2020-06-13 18:29:48Z" end-time="2020-06-13 18:29:48Z" duration="0.327391" asserts="0">
                <properties />
              </test-case>
              <test-case id="1926" name="ClientRpcStartsWithRpc" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.ClientRpcStartsWithRpc" methodname="ClientRpcStartsWithRpc" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="1542404600" result="Passed" start-time="2020-06-13 18:29:48Z" end-time="2020-06-13 18:29:49Z" duration="0.342231" asserts="0">
                <properties />
              </test-case>
              <test-case id="1932" name="ClientRpcThatExcludesOwner" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.ClientRpcThatExcludesOwner" methodname="ClientRpcThatExcludesOwner" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="1545605868" result="Passed" start-time="2020-06-13 18:29:49Z" end-time="2020-06-13 18:29:49Z" duration="0.427888" asserts="0">
                <properties />
              </test-case>
              <test-case id="1925" name="ClientRpcValid" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.ClientRpcValid" methodname="ClientRpcValid" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="1040919499" result="Passed" start-time="2020-06-13 18:29:49Z" end-time="2020-06-13 18:29:50Z" duration="0.330949" asserts="0">
                <properties />
              </test-case>
              <test-case id="1931" name="OverrideAbstractClientRpc" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.OverrideAbstractClientRpc" methodname="OverrideAbstractClientRpc" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="1969780061" result="Passed" start-time="2020-06-13 18:29:50Z" end-time="2020-06-13 18:29:50Z" duration="0.343010" asserts="0">
                <properties />
              </test-case>
              <test-case id="1929" name="OverrideVirtualClientRpc" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.OverrideVirtualClientRpc" methodname="OverrideVirtualClientRpc" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="1251180947" result="Passed" start-time="2020-06-13 18:29:50Z" end-time="2020-06-13 18:29:50Z" duration="0.346901" asserts="0">
                <properties />
              </test-case>
              <test-case id="1928" name="VirtualClientRpc" fullname="Mirror.Weaver.Tests.WeaverClientRpcTests.VirtualClientRpc" methodname="VirtualClientRpc" classname="Mirror.Weaver.Tests.WeaverClientRpcTests" runstate="Runnable" seed="1334518415" result="Passed" start-time="2020-06-13 18:29:50Z" end-time="2020-06-13 18:29:51Z" duration="0.342407" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1933" name="WeaverClientServerAttributeTests" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:51Z" end-time="2020-06-13 18:29:51Z" duration="0.813702" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1935" name="NetworkBehaviourClient" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.NetworkBehaviourClient" methodname="NetworkBehaviourClient" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="1306466101" result="Passed" start-time="2020-06-13 18:29:51Z" end-time="2020-06-13 18:29:51Z" duration="0.328193" asserts="0">
                <properties />
              </test-case>
              <test-case id="1934" name="NetworkBehaviourServer" fullname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests.NetworkBehaviourServer" methodname="NetworkBehaviourServer" classname="Mirror.Weaver.Tests.WeaverClientServerAttributeTests" runstate="Runnable" seed="771060503" result="Passed" start-time="2020-06-13 18:29:51Z" end-time="2020-06-13 18:29:51Z" duration="0.322976" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1936" name="WeaverCommandTests" fullname="Mirror.Weaver.Tests.WeaverCommandTests" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" testcasecount="14" result="Passed" start-time="2020-06-13 18:29:51Z" end-time="2020-06-13 18:29:56Z" duration="4.984456" total="14" passed="14" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1949" name="AbstractCommand" fullname="Mirror.Weaver.Tests.WeaverCommandTests.AbstractCommand" methodname="AbstractCommand" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1046250202" result="Passed" start-time="2020-06-13 18:29:52Z" end-time="2020-06-13 18:29:52Z" duration="0.359920" asserts="0">
                <properties />
              </test-case>
              <test-case id="1939" name="CommandCantBeStatic" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandCantBeStatic" methodname="CommandCantBeStatic" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1686466305" result="Passed" start-time="2020-06-13 18:29:52Z" end-time="2020-06-13 18:29:52Z" duration="0.346723" asserts="0">
                <properties />
              </test-case>
              <test-case id="1938" name="CommandStartsWithCmd" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandStartsWithCmd" methodname="CommandStartsWithCmd" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1239263870" result="Passed" start-time="2020-06-13 18:29:52Z" end-time="2020-06-13 18:29:53Z" duration="0.342775" asserts="0">
                <properties />
              </test-case>
              <test-case id="1940" name="CommandThatIgnoresAuthority" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandThatIgnoresAuthority" methodname="CommandThatIgnoresAuthority" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1869499959" result="Passed" start-time="2020-06-13 18:29:53Z" end-time="2020-06-13 18:29:53Z" duration="0.359108" asserts="0">
                <properties />
              </test-case>
              <test-case id="1942" name="CommandThatIgnoresAuthorityWithSenderConnection" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandThatIgnoresAuthorityWithSenderConnection" methodname="CommandThatIgnoresAuthorityWithSenderConnection" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1604535386" result="Passed" start-time="2020-06-13 18:29:53Z" end-time="2020-06-13 18:29:53Z" duration="0.343149" asserts="0">
                <properties />
              </test-case>
              <test-case id="1937" name="CommandValid" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandValid" methodname="CommandValid" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1438022040" result="Passed" start-time="2020-06-13 18:29:53Z" end-time="2020-06-13 18:29:54Z" duration="0.350391" asserts="0">
                <properties />
              </test-case>
              <test-case id="1941" name="CommandWithArguments" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandWithArguments" methodname="CommandWithArguments" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1442949717" result="Passed" start-time="2020-06-13 18:29:54Z" end-time="2020-06-13 18:29:54Z" duration="0.346662" asserts="0">
                <properties />
              </test-case>
              <test-case id="1943" name="CommandWithSenderConnectionAndOtherArgs" fullname="Mirror.Weaver.Tests.WeaverCommandTests.CommandWithSenderConnectionAndOtherArgs" methodname="CommandWithSenderConnectionAndOtherArgs" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="2044363565" result="Passed" start-time="2020-06-13 18:29:54Z" end-time="2020-06-13 18:29:54Z" duration="0.314723" asserts="0">
                <properties />
              </test-case>
              <test-case id="1945" name="ErrorForNetworkConnectionThatIsNotSenderConnection" fullname="Mirror.Weaver.Tests.WeaverCommandTests.ErrorForNetworkConnectionThatIsNotSenderConnection" methodname="ErrorForNetworkConnectionThatIsNotSenderConnection" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="888370563" result="Passed" start-time="2020-06-13 18:29:54Z" end-time="2020-06-13 18:29:55Z" duration="0.347571" asserts="0">
                <properties />
              </test-case>
              <test-case id="1944" name="ErrorForOptionalNetworkConnectionThatIsNotSenderConnection" fullname="Mirror.Weaver.Tests.WeaverCommandTests.ErrorForOptionalNetworkConnectionThatIsNotSenderConnection" methodname="ErrorForOptionalNetworkConnectionThatIsNotSenderConnection" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1442028509" result="Passed" start-time="2020-06-13 18:29:55Z" end-time="2020-06-13 18:29:55Z" duration="0.346867" asserts="0">
                <properties />
              </test-case>
              <test-case id="1950" name="OverrideAbstractCommand" fullname="Mirror.Weaver.Tests.WeaverCommandTests.OverrideAbstractCommand" methodname="OverrideAbstractCommand" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="143361036" result="Passed" start-time="2020-06-13 18:29:55Z" end-time="2020-06-13 18:29:55Z" duration="0.330380" asserts="0">
                <properties />
              </test-case>
              <test-case id="1948" name="OverrideVirtualCallBaseCommand" fullname="Mirror.Weaver.Tests.WeaverCommandTests.OverrideVirtualCallBaseCommand" methodname="OverrideVirtualCallBaseCommand" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="486008031" result="Passed" start-time="2020-06-13 18:29:55Z" end-time="2020-06-13 18:29:56Z" duration="0.326983" asserts="0">
                <properties />
              </test-case>
              <test-case id="1947" name="OverrideVirtualCommand" fullname="Mirror.Weaver.Tests.WeaverCommandTests.OverrideVirtualCommand" methodname="OverrideVirtualCommand" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="1958876996" result="Passed" start-time="2020-06-13 18:29:56Z" end-time="2020-06-13 18:29:56Z" duration="0.342455" asserts="0">
                <properties />
              </test-case>
              <test-case id="1946" name="VirtualCommand" fullname="Mirror.Weaver.Tests.WeaverCommandTests.VirtualCommand" methodname="VirtualCommand" classname="Mirror.Weaver.Tests.WeaverCommandTests" runstate="Runnable" seed="212651074" result="Passed" start-time="2020-06-13 18:29:56Z" end-time="2020-06-13 18:29:56Z" duration="0.343595" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1951" name="WeaverGeneralTests" fullname="Mirror.Weaver.Tests.WeaverGeneralTests" classname="Mirror.Weaver.Tests.WeaverGeneralTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2020-06-13 18:29:56Z" end-time="2020-06-13 18:29:57Z" duration="0.893800" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1952" name="RecursionCount" fullname="Mirror.Weaver.Tests.WeaverGeneralTests.RecursionCount" methodname="RecursionCount" classname="Mirror.Weaver.Tests.WeaverGeneralTests" runstate="Runnable" seed="1712959793" result="Passed" start-time="2020-06-13 18:29:57Z" end-time="2020-06-13 18:29:57Z" duration="0.371364" asserts="0">
                <properties />
              </test-case>
              <test-case id="1953" name="TestingScriptableObjectArraySerialization" fullname="Mirror.Weaver.Tests.WeaverGeneralTests.TestingScriptableObjectArraySerialization" methodname="TestingScriptableObjectArraySerialization" classname="Mirror.Weaver.Tests.WeaverGeneralTests" runstate="Runnable" seed="1329086506" result="Passed" start-time="2020-06-13 18:29:57Z" end-time="2020-06-13 18:29:57Z" duration="0.358604" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1954" name="WeaverGeneratedReaderWriterTests" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" testcasecount="19" result="Passed" start-time="2020-06-13 18:29:57Z" end-time="2020-06-13 18:30:06Z" duration="8.698146" total="19" passed="19" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1972" name="CanUseCustomReadWriteForInterfaces" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CanUseCustomReadWriteForInterfaces" methodname="CanUseCustomReadWriteForInterfaces" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="372144820" result="Passed" start-time="2020-06-13 18:29:57Z" end-time="2020-06-13 18:29:58Z" duration="0.453172" asserts="0">
                <properties />
              </test-case>
              <test-case id="1964" name="CanUseCustomReadWriteForTypesFromDifferentAssemblies" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CanUseCustomReadWriteForTypesFromDifferentAssemblies" methodname="CanUseCustomReadWriteForTypesFromDifferentAssemblies" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="835766797" result="Passed" start-time="2020-06-13 18:29:58Z" end-time="2020-06-13 18:29:58Z" duration="0.431049" asserts="0">
                <properties />
              </test-case>
              <test-case id="1956" name="CreatesForClass" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClass" methodname="CreatesForClass" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="594038047" result="Passed" start-time="2020-06-13 18:29:58Z" end-time="2020-06-13 18:29:59Z" duration="0.454549" asserts="0">
                <properties />
              </test-case>
              <test-case id="1962" name="CreatesForClassFromDifferentAssemblies" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClassFromDifferentAssemblies" methodname="CreatesForClassFromDifferentAssemblies" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="957991857" result="Passed" start-time="2020-06-13 18:29:59Z" end-time="2020-06-13 18:29:59Z" duration="0.447184" asserts="0">
                <properties />
              </test-case>
              <test-case id="1963" name="CreatesForClassFromDifferentAssembliesWithValidConstructor" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClassFromDifferentAssembliesWithValidConstructor" methodname="CreatesForClassFromDifferentAssembliesWithValidConstructor" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1893670303" result="Passed" start-time="2020-06-13 18:29:59Z" end-time="2020-06-13 18:30:00Z" duration="0.446898" asserts="0">
                <properties />
              </test-case>
              <test-case id="1957" name="CreatesForClassInherited" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClassInherited" methodname="CreatesForClassInherited" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="387746437" result="Passed" start-time="2020-06-13 18:30:00Z" end-time="2020-06-13 18:30:00Z" duration="0.442749" asserts="0">
                <properties />
              </test-case>
              <test-case id="1958" name="CreatesForClassWithValidConstructor" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForClassWithValidConstructor" methodname="CreatesForClassWithValidConstructor" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1288702288" result="Passed" start-time="2020-06-13 18:30:00Z" end-time="2020-06-13 18:30:01Z" duration="0.474692" asserts="0">
                <properties />
              </test-case>
              <test-case id="1973" name="CreatesForEnums" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForEnums" methodname="CreatesForEnums" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1430503400" result="Passed" start-time="2020-06-13 18:30:01Z" end-time="2020-06-13 18:30:01Z" duration="0.458461" asserts="0">
                <properties />
              </test-case>
              <test-case id="1960" name="CreatesForInheritedFromScriptableObject" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForInheritedFromScriptableObject" methodname="CreatesForInheritedFromScriptableObject" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1922902886" result="Passed" start-time="2020-06-13 18:30:01Z" end-time="2020-06-13 18:30:02Z" duration="0.431081" asserts="0">
                <properties />
              </test-case>
              <test-case id="1961" name="CreatesForStructFromDifferentAssemblies" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForStructFromDifferentAssemblies" methodname="CreatesForStructFromDifferentAssemblies" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1550499532" result="Passed" start-time="2020-06-13 18:30:02Z" end-time="2020-06-13 18:30:02Z" duration="0.439139" asserts="0">
                <properties />
              </test-case>
              <test-case id="1955" name="CreatesForStructs" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.CreatesForStructs" methodname="CreatesForStructs" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="395651055" result="Passed" start-time="2020-06-13 18:30:02Z" end-time="2020-06-13 18:30:02Z" duration="0.454476" asserts="0">
                <properties />
              </test-case>
              <test-case id="1970" name="ExcludesNonSerializedFields" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.ExcludesNonSerializedFields" methodname="ExcludesNonSerializedFields" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1512021401" result="Passed" start-time="2020-06-13 18:30:02Z" end-time="2020-06-13 18:30:03Z" duration="0.454772" asserts="0">
                <properties />
              </test-case>
              <test-case id="1959" name="GivesErrorForClassWithNoValidConstructor" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorForClassWithNoValidConstructor" methodname="GivesErrorForClassWithNoValidConstructor" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1070217521" result="Passed" start-time="2020-06-13 18:30:03Z" end-time="2020-06-13 18:30:03Z" duration="0.450442" asserts="0">
                <properties />
              </test-case>
              <test-case id="1971" name="GivesErrorWhenUsingInterface" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingInterface" methodname="GivesErrorWhenUsingInterface" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1802336830" result="Passed" start-time="2020-06-13 18:30:03Z" end-time="2020-06-13 18:30:04Z" duration="0.443122" asserts="0">
                <properties />
              </test-case>
              <test-case id="1968" name="GivesErrorWhenUsingMonoBehaviour" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingMonoBehaviour" methodname="GivesErrorWhenUsingMonoBehaviour" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="764208736" result="Passed" start-time="2020-06-13 18:30:04Z" end-time="2020-06-13 18:30:04Z" duration="0.442911" asserts="0">
                <properties />
              </test-case>
              <test-case id="1966" name="GivesErrorWhenUsingObject" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingObject" methodname="GivesErrorWhenUsingObject" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1360581118" result="Passed" start-time="2020-06-13 18:30:04Z" end-time="2020-06-13 18:30:05Z" duration="0.446973" asserts="0">
                <properties />
              </test-case>
              <test-case id="1967" name="GivesErrorWhenUsingScriptableObject" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingScriptableObject" methodname="GivesErrorWhenUsingScriptableObject" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1048488292" result="Passed" start-time="2020-06-13 18:30:05Z" end-time="2020-06-13 18:30:05Z" duration="0.447118" asserts="0">
                <properties />
              </test-case>
              <test-case id="1969" name="GivesErrorWhenUsingTypeInheritedFromMonoBehaviour" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingTypeInheritedFromMonoBehaviour" methodname="GivesErrorWhenUsingTypeInheritedFromMonoBehaviour" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1876098068" result="Passed" start-time="2020-06-13 18:30:05Z" end-time="2020-06-13 18:30:06Z" duration="0.442810" asserts="0">
                <properties />
              </test-case>
              <test-case id="1965" name="GivesErrorWhenUsingUnityAsset" fullname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests.GivesErrorWhenUsingUnityAsset" methodname="GivesErrorWhenUsingUnityAsset" classname="Mirror.Weaver.Tests.WeaverGeneratedReaderWriterTests" runstate="Runnable" seed="1828134139" result="Passed" start-time="2020-06-13 18:30:06Z" end-time="2020-06-13 18:30:06Z" duration="0.450837" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1974" name="WeaverMessageTests" fullname="Mirror.Weaver.Tests.WeaverMessageTests" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" testcasecount="4" result="Passed" start-time="2020-06-13 18:30:06Z" end-time="2020-06-13 18:30:08Z" duration="1.501793" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1977" name="MessageMemberGeneric" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageMemberGeneric" methodname="MessageMemberGeneric" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="1020163695" result="Passed" start-time="2020-06-13 18:30:06Z" end-time="2020-06-13 18:30:07Z" duration="0.328558" asserts="0">
                <properties />
              </test-case>
              <test-case id="1978" name="MessageMemberInterface" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageMemberInterface" methodname="MessageMemberInterface" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="1269231949" result="Passed" start-time="2020-06-13 18:30:07Z" end-time="2020-06-13 18:30:07Z" duration="0.342846" asserts="0">
                <properties />
              </test-case>
              <test-case id="1976" name="MessageSelfReferencing" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageSelfReferencing" methodname="MessageSelfReferencing" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="1111575186" result="Passed" start-time="2020-06-13 18:30:07Z" end-time="2020-06-13 18:30:07Z" duration="0.319094" asserts="0">
                <properties />
              </test-case>
              <test-case id="1975" name="MessageValid" fullname="Mirror.Weaver.Tests.WeaverMessageTests.MessageValid" methodname="MessageValid" classname="Mirror.Weaver.Tests.WeaverMessageTests" runstate="Runnable" seed="259963290" result="Passed" start-time="2020-06-13 18:30:07Z" end-time="2020-06-13 18:30:08Z" duration="0.347026" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1979" name="WeaverMonoBehaviourTests" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" testcasecount="10" result="Passed" start-time="2020-06-13 18:30:08Z" end-time="2020-06-13 18:30:11Z" duration="3.603608" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1988" name="MonoBehaviourClient" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourClient" methodname="MonoBehaviourClient" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="318396733" result="Passed" start-time="2020-06-13 18:30:08Z" end-time="2020-06-13 18:30:08Z" duration="0.339578" asserts="0">
                <properties />
              </test-case>
              <test-case id="1989" name="MonoBehaviourClientCallback" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourClientCallback" methodname="MonoBehaviourClientCallback" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="257436973" result="Passed" start-time="2020-06-13 18:30:08Z" end-time="2020-06-13 18:30:08Z" duration="0.343184" asserts="0">
                <properties />
              </test-case>
              <test-case id="1984" name="MonoBehaviourClientRpc" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourClientRpc" methodname="MonoBehaviourClientRpc" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="296260376" result="Passed" start-time="2020-06-13 18:30:08Z" end-time="2020-06-13 18:30:09Z" duration="0.342509" asserts="0">
                <properties />
              </test-case>
              <test-case id="1983" name="MonoBehaviourCommand" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourCommand" methodname="MonoBehaviourCommand" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="2118908371" result="Passed" start-time="2020-06-13 18:30:09Z" end-time="2020-06-13 18:30:09Z" duration="0.346867" asserts="0">
                <properties />
              </test-case>
              <test-case id="1986" name="MonoBehaviourServer" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourServer" methodname="MonoBehaviourServer" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1257207713" result="Passed" start-time="2020-06-13 18:30:09Z" end-time="2020-06-13 18:30:09Z" duration="0.347247" asserts="0">
                <properties />
              </test-case>
              <test-case id="1987" name="MonoBehaviourServerCallback" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourServerCallback" methodname="MonoBehaviourServerCallback" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="657466179" result="Passed" start-time="2020-06-13 18:30:09Z" end-time="2020-06-13 18:30:10Z" duration="0.338429" asserts="0">
                <properties />
              </test-case>
              <test-case id="1982" name="MonoBehaviourSyncList" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourSyncList" methodname="MonoBehaviourSyncList" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1858884583" result="Passed" start-time="2020-06-13 18:30:10Z" end-time="2020-06-13 18:30:10Z" duration="0.339488" asserts="0">
                <properties />
              </test-case>
              <test-case id="1981" name="MonoBehaviourSyncVar" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourSyncVar" methodname="MonoBehaviourSyncVar" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1511711782" result="Passed" start-time="2020-06-13 18:30:10Z" end-time="2020-06-13 18:30:10Z" duration="0.343000" asserts="0">
                <properties />
              </test-case>
              <test-case id="1985" name="MonoBehaviourTargetRpc" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourTargetRpc" methodname="MonoBehaviourTargetRpc" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1652460934" result="Passed" start-time="2020-06-13 18:30:10Z" end-time="2020-06-13 18:30:11Z" duration="0.343109" asserts="0">
                <properties />
              </test-case>
              <test-case id="1980" name="MonoBehaviourValid" fullname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests.MonoBehaviourValid" methodname="MonoBehaviourValid" classname="Mirror.Weaver.Tests.WeaverMonoBehaviourTests" runstate="Runnable" seed="1191596376" result="Passed" start-time="2020-06-13 18:30:11Z" end-time="2020-06-13 18:30:11Z" duration="0.342959" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="1990" name="WeaverNetworkBehaviourTests" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" testcasecount="33" result="Passed" start-time="2020-06-13 18:30:11Z" end-time="2020-06-13 18:30:23Z" duration="11.644642" total="33" passed="33" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="1992" name="NetworkBehaviourAbstractBaseValid" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourAbstractBaseValid" methodname="NetworkBehaviourAbstractBaseValid" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="759457225" result="Passed" start-time="2020-06-13 18:30:11Z" end-time="2020-06-13 18:30:12Z" duration="0.339422" asserts="0">
                <properties />
              </test-case>
              <test-case id="2008" name="NetworkBehaviourClientRpcCoroutine" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcCoroutine" methodname="NetworkBehaviourClientRpcCoroutine" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="105374496" result="Passed" start-time="2020-06-13 18:30:12Z" end-time="2020-06-13 18:30:12Z" duration="0.355643" asserts="0">
                <properties />
              </test-case>
              <test-case id="2016" name="NetworkBehaviourClientRpcDuplicateName" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcDuplicateName" methodname="NetworkBehaviourClientRpcDuplicateName" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="884297520" result="Passed" start-time="2020-06-13 18:30:12Z" end-time="2020-06-13 18:30:12Z" duration="0.342739" asserts="0">
                <properties />
              </test-case>
              <test-case id="2007" name="NetworkBehaviourClientRpcGenericParam" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcGenericParam" methodname="NetworkBehaviourClientRpcGenericParam" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1947330707" result="Passed" start-time="2020-06-13 18:30:12Z" end-time="2020-06-13 18:30:13Z" duration="0.322981" asserts="0">
                <properties />
              </test-case>
              <test-case id="2013" name="NetworkBehaviourClientRpcParamAbstract" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamAbstract" methodname="NetworkBehaviourClientRpcParamAbstract" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1408630050" result="Passed" start-time="2020-06-13 18:30:13Z" end-time="2020-06-13 18:30:13Z" duration="0.363130" asserts="0">
                <properties />
              </test-case>
              <test-case id="2014" name="NetworkBehaviourClientRpcParamComponent" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamComponent" methodname="NetworkBehaviourClientRpcParamComponent" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="374459399" result="Passed" start-time="2020-06-13 18:30:13Z" end-time="2020-06-13 18:30:13Z" duration="0.338652" asserts="0">
                <properties />
              </test-case>
              <test-case id="2015" name="NetworkBehaviourClientRpcParamNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamNetworkConnection" methodname="NetworkBehaviourClientRpcParamNetworkConnection" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1358516809" result="Passed" start-time="2020-06-13 18:30:13Z" end-time="2020-06-13 18:30:14Z" duration="0.339309" asserts="0">
                <properties />
              </test-case>
              <test-case id="2011" name="NetworkBehaviourClientRpcParamOptional" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamOptional" methodname="NetworkBehaviourClientRpcParamOptional" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1040058049" result="Passed" start-time="2020-06-13 18:30:14Z" end-time="2020-06-13 18:30:14Z" duration="0.347003" asserts="0">
                <properties />
              </test-case>
              <test-case id="2010" name="NetworkBehaviourClientRpcParamOut" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamOut" methodname="NetworkBehaviourClientRpcParamOut" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1825500198" result="Passed" start-time="2020-06-13 18:30:14Z" end-time="2020-06-13 18:30:14Z" duration="0.334678" asserts="0">
                <properties />
              </test-case>
              <test-case id="2012" name="NetworkBehaviourClientRpcParamRef" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcParamRef" methodname="NetworkBehaviourClientRpcParamRef" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1570782388" result="Passed" start-time="2020-06-13 18:30:14Z" end-time="2020-06-13 18:30:15Z" duration="0.351157" asserts="0">
                <properties />
              </test-case>
              <test-case id="2009" name="NetworkBehaviourClientRpcVoidReturn" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourClientRpcVoidReturn" methodname="NetworkBehaviourClientRpcVoidReturn" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1081678766" result="Passed" start-time="2020-06-13 18:30:15Z" end-time="2020-06-13 18:30:15Z" duration="0.390083" asserts="0">
                <properties />
              </test-case>
              <test-case id="1995" name="NetworkBehaviourCmdCoroutine" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdCoroutine" methodname="NetworkBehaviourCmdCoroutine" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1403830850" result="Passed" start-time="2020-06-13 18:30:15Z" end-time="2020-06-13 18:30:16Z" duration="0.335390" asserts="0">
                <properties />
              </test-case>
              <test-case id="2023" name="NetworkBehaviourCmdDuplicateName" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdDuplicateName" methodname="NetworkBehaviourCmdDuplicateName" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="2088298695" result="Passed" start-time="2020-06-13 18:30:16Z" end-time="2020-06-13 18:30:16Z" duration="0.350901" asserts="0">
                <properties />
              </test-case>
              <test-case id="1994" name="NetworkBehaviourCmdGenericParam" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdGenericParam" methodname="NetworkBehaviourCmdGenericParam" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1909296226" result="Passed" start-time="2020-06-13 18:30:16Z" end-time="2020-06-13 18:30:16Z" duration="0.342812" asserts="0">
                <properties />
              </test-case>
              <test-case id="2020" name="NetworkBehaviourCmdParamAbstract" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamAbstract" methodname="NetworkBehaviourCmdParamAbstract" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="418645431" result="Passed" start-time="2020-06-13 18:30:16Z" end-time="2020-06-13 18:30:17Z" duration="0.350941" asserts="0">
                <properties />
              </test-case>
              <test-case id="2021" name="NetworkBehaviourCmdParamComponent" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamComponent" methodname="NetworkBehaviourCmdParamComponent" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1760480012" result="Passed" start-time="2020-06-13 18:30:17Z" end-time="2020-06-13 18:30:17Z" duration="0.346910" asserts="0">
                <properties />
              </test-case>
              <test-case id="2022" name="NetworkBehaviourCmdParamNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamNetworkConnection" methodname="NetworkBehaviourCmdParamNetworkConnection" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="2118348377" result="Passed" start-time="2020-06-13 18:30:17Z" end-time="2020-06-13 18:30:17Z" duration="0.346888" asserts="0">
                <properties />
              </test-case>
              <test-case id="2018" name="NetworkBehaviourCmdParamOptional" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamOptional" methodname="NetworkBehaviourCmdParamOptional" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="966622136" result="Passed" start-time="2020-06-13 18:30:17Z" end-time="2020-06-13 18:30:18Z" duration="0.346952" asserts="0">
                <properties />
              </test-case>
              <test-case id="2017" name="NetworkBehaviourCmdParamOut" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamOut" methodname="NetworkBehaviourCmdParamOut" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="2015895033" result="Passed" start-time="2020-06-13 18:30:18Z" end-time="2020-06-13 18:30:18Z" duration="0.347070" asserts="0">
                <properties />
              </test-case>
              <test-case id="2019" name="NetworkBehaviourCmdParamRef" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdParamRef" methodname="NetworkBehaviourCmdParamRef" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="511235399" result="Passed" start-time="2020-06-13 18:30:18Z" end-time="2020-06-13 18:30:18Z" duration="0.342919" asserts="0">
                <properties />
              </test-case>
              <test-case id="1996" name="NetworkBehaviourCmdVoidReturn" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourCmdVoidReturn" methodname="NetworkBehaviourCmdVoidReturn" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="2138909651" result="Passed" start-time="2020-06-13 18:30:18Z" end-time="2020-06-13 18:30:19Z" duration="0.347022" asserts="0">
                <properties />
              </test-case>
              <test-case id="1993" name="NetworkBehaviourGeneric" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourGeneric" methodname="NetworkBehaviourGeneric" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="711767482" result="Passed" start-time="2020-06-13 18:30:19Z" end-time="2020-06-13 18:30:19Z" duration="0.343029" asserts="0">
                <properties />
              </test-case>
              <test-case id="1998" name="NetworkBehaviourTargetRpcCoroutine" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcCoroutine" methodname="NetworkBehaviourTargetRpcCoroutine" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1118555606" result="Passed" start-time="2020-06-13 18:30:19Z" end-time="2020-06-13 18:30:19Z" duration="0.346970" asserts="0">
                <properties />
              </test-case>
              <test-case id="2006" name="NetworkBehaviourTargetRpcDuplicateName" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcDuplicateName" methodname="NetworkBehaviourTargetRpcDuplicateName" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="191263690" result="Passed" start-time="2020-06-13 18:30:19Z" end-time="2020-06-13 18:30:20Z" duration="0.346903" asserts="0">
                <properties />
              </test-case>
              <test-case id="1997" name="NetworkBehaviourTargetRpcGenericParam" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcGenericParam" methodname="NetworkBehaviourTargetRpcGenericParam" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1221419789" result="Passed" start-time="2020-06-13 18:30:20Z" end-time="2020-06-13 18:30:20Z" duration="0.334720" asserts="0">
                <properties />
              </test-case>
              <test-case id="2003" name="NetworkBehaviourTargetRpcParamAbstract" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamAbstract" methodname="NetworkBehaviourTargetRpcParamAbstract" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="2046746063" result="Passed" start-time="2020-06-13 18:30:20Z" end-time="2020-06-13 18:30:20Z" duration="0.342556" asserts="0">
                <properties />
              </test-case>
              <test-case id="2004" name="NetworkBehaviourTargetRpcParamComponent" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamComponent" methodname="NetworkBehaviourTargetRpcParamComponent" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1484048852" result="Passed" start-time="2020-06-13 18:30:20Z" end-time="2020-06-13 18:30:21Z" duration="0.347000" asserts="0">
                <properties />
              </test-case>
              <test-case id="2005" name="NetworkBehaviourTargetRpcParamNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamNetworkConnection" methodname="NetworkBehaviourTargetRpcParamNetworkConnection" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="901442304" result="Passed" start-time="2020-06-13 18:30:21Z" end-time="2020-06-13 18:30:21Z" duration="0.342590" asserts="0">
                <properties />
              </test-case>
              <test-case id="2001" name="NetworkBehaviourTargetRpcParamOptional" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamOptional" methodname="NetworkBehaviourTargetRpcParamOptional" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="1013559509" result="Passed" start-time="2020-06-13 18:30:21Z" end-time="2020-06-13 18:30:21Z" duration="0.354780" asserts="0">
                <properties />
              </test-case>
              <test-case id="2000" name="NetworkBehaviourTargetRpcParamOut" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamOut" methodname="NetworkBehaviourTargetRpcParamOut" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="605426948" result="Passed" start-time="2020-06-13 18:30:21Z" end-time="2020-06-13 18:30:22Z" duration="0.342875" asserts="0">
                <properties />
              </test-case>
              <test-case id="2002" name="NetworkBehaviourTargetRpcParamRef" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcParamRef" methodname="NetworkBehaviourTargetRpcParamRef" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="669782819" result="Passed" start-time="2020-06-13 18:30:22Z" end-time="2020-06-13 18:30:22Z" duration="0.366940" asserts="0">
                <properties />
              </test-case>
              <test-case id="1999" name="NetworkBehaviourTargetRpcVoidReturn" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourTargetRpcVoidReturn" methodname="NetworkBehaviourTargetRpcVoidReturn" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="2093725743" result="Passed" start-time="2020-06-13 18:30:22Z" end-time="2020-06-13 18:30:22Z" duration="0.342970" asserts="0">
                <properties />
              </test-case>
              <test-case id="1991" name="NetworkBehaviourValid" fullname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests.NetworkBehaviourValid" methodname="NetworkBehaviourValid" classname="Mirror.Weaver.Tests.WeaverNetworkBehaviourTests" runstate="Runnable" seed="756407485" result="Passed" start-time="2020-06-13 18:30:22Z" end-time="2020-06-13 18:30:23Z" duration="0.346773" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2024" name="WeaverSyncDictionaryTests" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" testcasecount="21" result="Passed" start-time="2020-06-13 18:30:23Z" end-time="2020-06-13 18:30:30Z" duration="7.624329" total="21" passed="21" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2025" name="SyncDictionary" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionary" methodname="SyncDictionary" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="342229186" result="Passed" start-time="2020-06-13 18:30:23Z" end-time="2020-06-13 18:30:23Z" duration="0.354197" asserts="0">
                <properties />
              </test-case>
              <test-case id="2038" name="SyncDictionaryErrorForGenericStructItem" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructItem" methodname="SyncDictionaryErrorForGenericStructItem" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="17658668" result="Passed" start-time="2020-06-13 18:30:23Z" end-time="2020-06-13 18:30:24Z" duration="0.362751" asserts="0">
                <properties />
              </test-case>
              <test-case id="2040" name="SyncDictionaryErrorForGenericStructItemWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructItemWithCustomDeserializeOnly" methodname="SyncDictionaryErrorForGenericStructItemWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="85686022" result="Passed" start-time="2020-06-13 18:30:24Z" end-time="2020-06-13 18:30:24Z" duration="0.346678" asserts="0">
                <properties />
              </test-case>
              <test-case id="2042" name="SyncDictionaryErrorForGenericStructItemWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructItemWithCustomSerializeOnly" methodname="SyncDictionaryErrorForGenericStructItemWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1443907281" result="Passed" start-time="2020-06-13 18:30:24Z" end-time="2020-06-13 18:30:24Z" duration="0.354836" asserts="0">
                <properties />
              </test-case>
              <test-case id="2037" name="SyncDictionaryErrorForGenericStructKey" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructKey" methodname="SyncDictionaryErrorForGenericStructKey" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1706042863" result="Passed" start-time="2020-06-13 18:30:24Z" end-time="2020-06-13 18:30:25Z" duration="0.351277" asserts="0">
                <properties />
              </test-case>
              <test-case id="2039" name="SyncDictionaryErrorForGenericStructKeyWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructKeyWithCustomDeserializeOnly" methodname="SyncDictionaryErrorForGenericStructKeyWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="79930904" result="Passed" start-time="2020-06-13 18:30:25Z" end-time="2020-06-13 18:30:25Z" duration="0.346539" asserts="0">
                <properties />
              </test-case>
              <test-case id="2041" name="SyncDictionaryErrorForGenericStructKeyWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorForGenericStructKeyWithCustomSerializeOnly" methodname="SyncDictionaryErrorForGenericStructKeyWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="632962632" result="Passed" start-time="2020-06-13 18:30:25Z" end-time="2020-06-13 18:30:25Z" duration="0.346674" asserts="0">
                <properties />
              </test-case>
              <test-case id="2045" name="SyncDictionaryErrorWhenUsingGenericInNetworkBehaviour" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryErrorWhenUsingGenericInNetworkBehaviour" methodname="SyncDictionaryErrorWhenUsingGenericInNetworkBehaviour" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1080576984" result="Passed" start-time="2020-06-13 18:30:25Z" end-time="2020-06-13 18:30:26Z" duration="0.347590" asserts="0">
                <properties />
              </test-case>
              <test-case id="2026" name="SyncDictionaryGenericAbstractInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericAbstractInheritance" methodname="SyncDictionaryGenericAbstractInheritance" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="984983207" result="Passed" start-time="2020-06-13 18:30:26Z" end-time="2020-06-13 18:30:26Z" duration="0.358292" asserts="0">
                <properties />
              </test-case>
              <test-case id="2027" name="SyncDictionaryGenericInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericInheritance" methodname="SyncDictionaryGenericInheritance" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="306453233" result="Passed" start-time="2020-06-13 18:30:26Z" end-time="2020-06-13 18:30:27Z" duration="0.350496" asserts="0">
                <properties />
              </test-case>
              <test-case id="2044" name="SyncDictionaryGenericStructItemWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericStructItemWithCustomMethods" methodname="SyncDictionaryGenericStructItemWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="254021030" result="Passed" start-time="2020-06-13 18:30:27Z" end-time="2020-06-13 18:30:27Z" duration="0.354712" asserts="0">
                <properties />
              </test-case>
              <test-case id="2043" name="SyncDictionaryGenericStructKeyWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryGenericStructKeyWithCustomMethods" methodname="SyncDictionaryGenericStructKeyWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1830502464" result="Passed" start-time="2020-06-13 18:30:27Z" end-time="2020-06-13 18:30:27Z" duration="0.362778" asserts="0">
                <properties />
              </test-case>
              <test-case id="2028" name="SyncDictionaryInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryInheritance" methodname="SyncDictionaryInheritance" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1756976792" result="Passed" start-time="2020-06-13 18:30:27Z" end-time="2020-06-13 18:30:28Z" duration="0.346599" asserts="0">
                <properties />
              </test-case>
              <test-case id="2030" name="SyncDictionaryStructItem" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructItem" methodname="SyncDictionaryStructItem" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1633031459" result="Passed" start-time="2020-06-13 18:30:28Z" end-time="2020-06-13 18:30:28Z" duration="0.351229" asserts="0">
                <properties />
              </test-case>
              <test-case id="2032" name="SyncDictionaryStructItemWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructItemWithCustomDeserializeOnly" methodname="SyncDictionaryStructItemWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="402096518" result="Passed" start-time="2020-06-13 18:30:28Z" end-time="2020-06-13 18:30:28Z" duration="0.354915" asserts="0">
                <properties />
              </test-case>
              <test-case id="2034" name="SyncDictionaryStructItemWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructItemWithCustomMethods" methodname="SyncDictionaryStructItemWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="799763978" result="Passed" start-time="2020-06-13 18:30:28Z" end-time="2020-06-13 18:30:29Z" duration="0.351178" asserts="0">
                <properties />
              </test-case>
              <test-case id="2036" name="SyncDictionaryStructItemWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructItemWithCustomSerializeOnly" methodname="SyncDictionaryStructItemWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1611918997" result="Passed" start-time="2020-06-13 18:30:29Z" end-time="2020-06-13 18:30:29Z" duration="0.362875" asserts="0">
                <properties />
              </test-case>
              <test-case id="2029" name="SyncDictionaryStructKey" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructKey" methodname="SyncDictionaryStructKey" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="1369200711" result="Passed" start-time="2020-06-13 18:30:29Z" end-time="2020-06-13 18:30:29Z" duration="0.362796" asserts="0">
                <properties />
              </test-case>
              <test-case id="2031" name="SyncDictionaryStructKeyWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructKeyWithCustomDeserializeOnly" methodname="SyncDictionaryStructKeyWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="471658888" result="Passed" start-time="2020-06-13 18:30:29Z" end-time="2020-06-13 18:30:30Z" duration="0.350742" asserts="0">
                <properties />
              </test-case>
              <test-case id="2033" name="SyncDictionaryStructKeyWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructKeyWithCustomMethods" methodname="SyncDictionaryStructKeyWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="173574933" result="Passed" start-time="2020-06-13 18:30:30Z" end-time="2020-06-13 18:30:30Z" duration="0.363420" asserts="0">
                <properties />
              </test-case>
              <test-case id="2035" name="SyncDictionaryStructKeyWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests.SyncDictionaryStructKeyWithCustomSerializeOnly" methodname="SyncDictionaryStructKeyWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncDictionaryTests" runstate="Runnable" seed="355594371" result="Passed" start-time="2020-06-13 18:30:30Z" end-time="2020-06-13 18:30:30Z" duration="0.354448" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2046" name="WeaverSyncEventTests" fullname="Mirror.Weaver.Tests.WeaverSyncEventTests" classname="Mirror.Weaver.Tests.WeaverSyncEventTests" runstate="Runnable" testcasecount="3" result="Passed" start-time="2020-06-13 18:30:30Z" end-time="2020-06-13 18:30:32Z" duration="1.205650" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2048" name="ErrorWhenSyncEventDoesntStartWithEvent" fullname="Mirror.Weaver.Tests.WeaverSyncEventTests.ErrorWhenSyncEventDoesntStartWithEvent" methodname="ErrorWhenSyncEventDoesntStartWithEvent" classname="Mirror.Weaver.Tests.WeaverSyncEventTests" runstate="Runnable" seed="1316877260" result="Passed" start-time="2020-06-13 18:30:31Z" end-time="2020-06-13 18:30:31Z" duration="0.342053" asserts="0">
                <properties />
              </test-case>
              <test-case id="2049" name="ErrorWhenSyncEventUsesGenericParameter" fullname="Mirror.Weaver.Tests.WeaverSyncEventTests.ErrorWhenSyncEventUsesGenericParameter" methodname="ErrorWhenSyncEventUsesGenericParameter" classname="Mirror.Weaver.Tests.WeaverSyncEventTests" runstate="Runnable" seed="1486584142" result="Passed" start-time="2020-06-13 18:30:31Z" end-time="2020-06-13 18:30:31Z" duration="0.346775" asserts="0">
                <properties />
              </test-case>
              <test-case id="2047" name="SyncEventValid" fullname="Mirror.Weaver.Tests.WeaverSyncEventTests.SyncEventValid" methodname="SyncEventValid" classname="Mirror.Weaver.Tests.WeaverSyncEventTests" runstate="Runnable" seed="813494320" result="Passed" start-time="2020-06-13 18:30:31Z" end-time="2020-06-13 18:30:32Z" duration="0.354651" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2050" name="WeaverSyncListTests" fullname="Mirror.Weaver.Tests.WeaverSyncListTests" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" testcasecount="25" result="Passed" start-time="2020-06-13 18:30:32Z" end-time="2020-06-13 18:30:41Z" duration="9.013122" total="25" passed="25" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2051" name="SyncList" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncList" methodname="SyncList" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1533303571" result="Passed" start-time="2020-06-13 18:30:32Z" end-time="2020-06-13 18:30:32Z" duration="0.338357" asserts="0">
                <properties />
              </test-case>
              <test-case id="2052" name="SyncListByteValid" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListByteValid" methodname="SyncListByteValid" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1167333070" result="Passed" start-time="2020-06-13 18:30:32Z" end-time="2020-06-13 18:30:33Z" duration="0.355816" asserts="0">
                <properties />
              </test-case>
              <test-case id="2068" name="SyncListErrorForGenericStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorForGenericStruct" methodname="SyncListErrorForGenericStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="34562309" result="Passed" start-time="2020-06-13 18:30:33Z" end-time="2020-06-13 18:30:33Z" duration="0.346810" asserts="0">
                <properties />
              </test-case>
              <test-case id="2069" name="SyncListErrorForGenericStructWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorForGenericStructWithCustomDeserializeOnly" methodname="SyncListErrorForGenericStructWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="929030435" result="Passed" start-time="2020-06-13 18:30:33Z" end-time="2020-06-13 18:30:33Z" duration="0.343173" asserts="0">
                <properties />
              </test-case>
              <test-case id="2070" name="SyncListErrorForGenericStructWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorForGenericStructWithCustomSerializeOnly" methodname="SyncListErrorForGenericStructWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="908839113" result="Passed" start-time="2020-06-13 18:30:33Z" end-time="2020-06-13 18:30:34Z" duration="0.363033" asserts="0">
                <properties />
              </test-case>
              <test-case id="2072" name="SyncListErrorForInterface" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorForInterface" methodname="SyncListErrorForInterface" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1652371025" result="Passed" start-time="2020-06-13 18:30:34Z" end-time="2020-06-13 18:30:34Z" duration="0.346735" asserts="0">
                <properties />
              </test-case>
              <test-case id="2075" name="SyncListErrorWhenUsingGenericListInNetworkBehaviour" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListErrorWhenUsingGenericListInNetworkBehaviour" methodname="SyncListErrorWhenUsingGenericListInNetworkBehaviour" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="702410687" result="Passed" start-time="2020-06-13 18:30:34Z" end-time="2020-06-13 18:30:34Z" duration="0.346978" asserts="0">
                <properties />
              </test-case>
              <test-case id="2053" name="SyncListGenericAbstractInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericAbstractInheritance" methodname="SyncListGenericAbstractInheritance" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1018872569" result="Passed" start-time="2020-06-13 18:30:34Z" end-time="2020-06-13 18:30:35Z" duration="0.346997" asserts="0">
                <properties />
              </test-case>
              <test-case id="2054" name="SyncListGenericInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericInheritance" methodname="SyncListGenericInheritance" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="482420790" result="Passed" start-time="2020-06-13 18:30:35Z" end-time="2020-06-13 18:30:35Z" duration="0.347121" asserts="0">
                <properties />
              </test-case>
              <test-case id="2055" name="SyncListGenericInheritanceWithMultipleGeneric" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericInheritanceWithMultipleGeneric" methodname="SyncListGenericInheritanceWithMultipleGeneric" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="2027452358" result="Passed" start-time="2020-06-13 18:30:35Z" end-time="2020-06-13 18:30:35Z" duration="0.359066" asserts="0">
                <properties />
              </test-case>
              <test-case id="2071" name="SyncListGenericStructWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListGenericStructWithCustomMethods" methodname="SyncListGenericStructWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="71379319" result="Passed" start-time="2020-06-13 18:30:35Z" end-time="2020-06-13 18:30:36Z" duration="0.346903" asserts="0">
                <properties />
              </test-case>
              <test-case id="2056" name="SyncListInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListInheritance" methodname="SyncListInheritance" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="444323997" result="Passed" start-time="2020-06-13 18:30:36Z" end-time="2020-06-13 18:30:36Z" duration="0.358458" asserts="0">
                <properties />
              </test-case>
              <test-case id="2074" name="SyncListInheritanceWithOverrides" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListInheritanceWithOverrides" methodname="SyncListInheritanceWithOverrides" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="693048394" result="Passed" start-time="2020-06-13 18:30:36Z" end-time="2020-06-13 18:30:36Z" duration="0.363809" asserts="0">
                <properties />
              </test-case>
              <test-case id="2073" name="SyncListInterfaceWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListInterfaceWithCustomMethods" methodname="SyncListInterfaceWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="2124741876" result="Passed" start-time="2020-06-13 18:30:36Z" end-time="2020-06-13 18:30:37Z" duration="0.351124" asserts="0">
                <properties />
              </test-case>
              <test-case id="2057" name="SyncListMissingParamlessCtor" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListMissingParamlessCtor" methodname="SyncListMissingParamlessCtor" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="2128379499" result="Passed" start-time="2020-06-13 18:30:37Z" end-time="2020-06-13 18:30:37Z" duration="0.346727" asserts="0">
                <properties />
              </test-case>
              <test-case id="2058" name="SyncListMissingParamlessCtorManuallyInitialized" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListMissingParamlessCtorManuallyInitialized" methodname="SyncListMissingParamlessCtorManuallyInitialized" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="2066749970" result="Passed" start-time="2020-06-13 18:30:37Z" end-time="2020-06-13 18:30:37Z" duration="0.347229" asserts="0">
                <properties />
              </test-case>
              <test-case id="2060" name="SyncListNestedInAbstractClass" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInAbstractClass" methodname="SyncListNestedInAbstractClass" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="66470885" result="Passed" start-time="2020-06-13 18:30:37Z" end-time="2020-06-13 18:30:38Z" duration="0.351133" asserts="0">
                <properties />
              </test-case>
              <test-case id="2061" name="SyncListNestedInAbstractClassWithInvalid" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInAbstractClassWithInvalid" methodname="SyncListNestedInAbstractClassWithInvalid" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="2003161840" result="Passed" start-time="2020-06-13 18:30:38Z" end-time="2020-06-13 18:30:38Z" duration="0.359188" asserts="0">
                <properties />
              </test-case>
              <test-case id="2062" name="SyncListNestedInStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInStruct" methodname="SyncListNestedInStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1524191900" result="Passed" start-time="2020-06-13 18:30:38Z" end-time="2020-06-13 18:30:39Z" duration="0.362997" asserts="0">
                <properties />
              </test-case>
              <test-case id="2063" name="SyncListNestedInStructWithInvalid" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedInStructWithInvalid" methodname="SyncListNestedInStructWithInvalid" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1177562600" result="Passed" start-time="2020-06-13 18:30:39Z" end-time="2020-06-13 18:30:39Z" duration="0.359023" asserts="0">
                <properties />
              </test-case>
              <test-case id="2059" name="SyncListNestedStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListNestedStruct" methodname="SyncListNestedStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1696419579" result="Passed" start-time="2020-06-13 18:30:39Z" end-time="2020-06-13 18:30:39Z" duration="0.346637" asserts="0">
                <properties />
              </test-case>
              <test-case id="2064" name="SyncListStruct" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListStruct" methodname="SyncListStruct" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="135631262" result="Passed" start-time="2020-06-13 18:30:39Z" end-time="2020-06-13 18:30:40Z" duration="0.351408" asserts="0">
                <properties />
              </test-case>
              <test-case id="2065" name="SyncListStructWithCustomDeserializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListStructWithCustomDeserializeOnly" methodname="SyncListStructWithCustomDeserializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="899483455" result="Passed" start-time="2020-06-13 18:30:40Z" end-time="2020-06-13 18:30:40Z" duration="0.355221" asserts="0">
                <properties />
              </test-case>
              <test-case id="2066" name="SyncListStructWithCustomMethods" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListStructWithCustomMethods" methodname="SyncListStructWithCustomMethods" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1901807230" result="Passed" start-time="2020-06-13 18:30:40Z" end-time="2020-06-13 18:30:40Z" duration="0.363071" asserts="0">
                <properties />
              </test-case>
              <test-case id="2067" name="SyncListStructWithCustomSerializeOnly" fullname="Mirror.Weaver.Tests.WeaverSyncListTests.SyncListStructWithCustomSerializeOnly" methodname="SyncListStructWithCustomSerializeOnly" classname="Mirror.Weaver.Tests.WeaverSyncListTests" runstate="Runnable" seed="1535460727" result="Passed" start-time="2020-06-13 18:30:40Z" end-time="2020-06-13 18:30:41Z" duration="0.366991" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2076" name="WeaverSyncSetTests" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" testcasecount="6" result="Passed" start-time="2020-06-13 18:30:41Z" end-time="2020-06-13 18:30:43Z" duration="2.255599" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2077" name="SyncSet" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSet" methodname="SyncSet" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="579378414" result="Passed" start-time="2020-06-13 18:30:41Z" end-time="2020-06-13 18:30:41Z" duration="0.337065" asserts="0">
                <properties />
              </test-case>
              <test-case id="2078" name="SyncSetByteValid" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetByteValid" methodname="SyncSetByteValid" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1354207895" result="Passed" start-time="2020-06-13 18:30:41Z" end-time="2020-06-13 18:30:42Z" duration="0.347189" asserts="0">
                <properties />
              </test-case>
              <test-case id="2079" name="SyncSetGenericAbstractInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetGenericAbstractInheritance" methodname="SyncSetGenericAbstractInheritance" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="90605704" result="Passed" start-time="2020-06-13 18:30:42Z" end-time="2020-06-13 18:30:42Z" duration="0.346531" asserts="0">
                <properties />
              </test-case>
              <test-case id="2080" name="SyncSetGenericInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetGenericInheritance" methodname="SyncSetGenericInheritance" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1380711430" result="Passed" start-time="2020-06-13 18:30:42Z" end-time="2020-06-13 18:30:42Z" duration="0.359139" asserts="0">
                <properties />
              </test-case>
              <test-case id="2081" name="SyncSetInheritance" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetInheritance" methodname="SyncSetInheritance" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="7273364" result="Passed" start-time="2020-06-13 18:30:42Z" end-time="2020-06-13 18:30:43Z" duration="0.347009" asserts="0">
                <properties />
              </test-case>
              <test-case id="2082" name="SyncSetStruct" fullname="Mirror.Weaver.Tests.WeaverSyncSetTests.SyncSetStruct" methodname="SyncSetStruct" classname="Mirror.Weaver.Tests.WeaverSyncSetTests" runstate="Runnable" seed="1828319033" result="Passed" start-time="2020-06-13 18:30:43Z" end-time="2020-06-13 18:30:43Z" duration="0.347057" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2083" name="WeaverSyncVarHookTests" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" testcasecount="11" result="Passed" start-time="2020-06-13 18:30:43Z" end-time="2020-06-13 18:30:47Z" duration="4.079675" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2094" name="ErrorForWrongTypeNewParameter" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.ErrorForWrongTypeNewParameter" methodname="ErrorForWrongTypeNewParameter" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="557633456" result="Passed" start-time="2020-06-13 18:30:43Z" end-time="2020-06-13 18:30:44Z" duration="0.343348" asserts="0">
                <properties />
              </test-case>
              <test-case id="2093" name="ErrorForWrongTypeOldParameter" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.ErrorForWrongTypeOldParameter" methodname="ErrorForWrongTypeOldParameter" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1467694539" result="Passed" start-time="2020-06-13 18:30:44Z" end-time="2020-06-13 18:30:44Z" duration="0.358920" asserts="0">
                <properties />
              </test-case>
              <test-case id="2091" name="ErrorWhenNoHookFound" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.ErrorWhenNoHookFound" methodname="ErrorWhenNoHookFound" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1833503425" result="Passed" start-time="2020-06-13 18:30:44Z" end-time="2020-06-13 18:30:44Z" duration="0.442595" asserts="0">
                <properties />
              </test-case>
              <test-case id="2092" name="ErrorWhenNoHookWithCorrectParametersFound" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.ErrorWhenNoHookWithCorrectParametersFound" methodname="ErrorWhenNoHookWithCorrectParametersFound" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="217738612" result="Passed" start-time="2020-06-13 18:30:44Z" end-time="2020-06-13 18:30:45Z" duration="0.335467" asserts="0">
                <properties />
              </test-case>
              <test-case id="2087" name="FindsHookWithGameObjects" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsHookWithGameObjects" methodname="FindsHookWithGameObjects" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1346514008" result="Passed" start-time="2020-06-13 18:30:45Z" end-time="2020-06-13 18:30:45Z" duration="0.333961" asserts="0">
                <properties />
              </test-case>
              <test-case id="2088" name="FindsHookWithNetworkIdentity" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsHookWithNetworkIdentity" methodname="FindsHookWithNetworkIdentity" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1213599069" result="Passed" start-time="2020-06-13 18:30:45Z" end-time="2020-06-13 18:30:45Z" duration="0.339834" asserts="0">
                <properties />
              </test-case>
              <test-case id="2089" name="FindsHookWithOtherOverloadsInOrder" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsHookWithOtherOverloadsInOrder" methodname="FindsHookWithOtherOverloadsInOrder" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="2006366279" result="Passed" start-time="2020-06-13 18:30:45Z" end-time="2020-06-13 18:30:46Z" duration="0.346978" asserts="0">
                <properties />
              </test-case>
              <test-case id="2090" name="FindsHookWithOtherOverloadsInReverseOrder" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsHookWithOtherOverloadsInReverseOrder" methodname="FindsHookWithOtherOverloadsInReverseOrder" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1235896688" result="Passed" start-time="2020-06-13 18:30:46Z" end-time="2020-06-13 18:30:46Z" duration="0.354822" asserts="0">
                <properties />
              </test-case>
              <test-case id="2084" name="FindsPrivateHook" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsPrivateHook" methodname="FindsPrivateHook" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1452140825" result="Passed" start-time="2020-06-13 18:30:46Z" end-time="2020-06-13 18:30:46Z" duration="0.346655" asserts="0">
                <properties />
              </test-case>
              <test-case id="2085" name="FindsPublicHook" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsPublicHook" methodname="FindsPublicHook" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1344270353" result="Passed" start-time="2020-06-13 18:30:46Z" end-time="2020-06-13 18:30:47Z" duration="0.354475" asserts="0">
                <properties />
              </test-case>
              <test-case id="2086" name="FindsStaticHook" fullname="Mirror.Weaver.Tests.WeaverSyncVarHookTests.FindsStaticHook" methodname="FindsStaticHook" classname="Mirror.Weaver.Tests.WeaverSyncVarHookTests" runstate="Runnable" seed="1270247114" result="Passed" start-time="2020-06-13 18:30:47Z" end-time="2020-06-13 18:30:47Z" duration="0.347128" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2095" name="WeaverSyncVarTests" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" testcasecount="9" result="Passed" start-time="2020-06-13 18:30:47Z" end-time="2020-06-13 18:30:50Z" duration="3.324682" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2102" name="SyncVarsCantBeArray" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsCantBeArray" methodname="SyncVarsCantBeArray" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1776624817" result="Passed" start-time="2020-06-13 18:30:47Z" end-time="2020-06-13 18:30:48Z" duration="0.334579" asserts="0">
                <properties />
              </test-case>
              <test-case id="2097" name="SyncVarsDerivedNetworkBehaviour" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsDerivedNetworkBehaviour" methodname="SyncVarsDerivedNetworkBehaviour" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="391902925" result="Passed" start-time="2020-06-13 18:30:48Z" end-time="2020-06-13 18:30:48Z" duration="0.342568" asserts="0">
                <properties />
              </test-case>
              <test-case id="2101" name="SyncVarsDifferentModule" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsDifferentModule" methodname="SyncVarsDifferentModule" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1083177489" result="Passed" start-time="2020-06-13 18:30:48Z" end-time="2020-06-13 18:30:48Z" duration="0.351179" asserts="0">
                <properties />
              </test-case>
              <test-case id="2099" name="SyncVarsGenericParam" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsGenericParam" methodname="SyncVarsGenericParam" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1501635235" result="Passed" start-time="2020-06-13 18:30:48Z" end-time="2020-06-13 18:30:49Z" duration="0.343848" asserts="0">
                <properties />
              </test-case>
              <test-case id="2100" name="SyncVarsInterface" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsInterface" methodname="SyncVarsInterface" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1665613555" result="Passed" start-time="2020-06-13 18:30:49Z" end-time="2020-06-13 18:30:49Z" duration="0.362265" asserts="0">
                <properties />
              </test-case>
              <test-case id="2104" name="SyncVarsMoreThan63" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsMoreThan63" methodname="SyncVarsMoreThan63" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="538643640" result="Passed" start-time="2020-06-13 18:30:49Z" end-time="2020-06-13 18:30:49Z" duration="0.350318" asserts="0">
                <properties />
              </test-case>
              <test-case id="2098" name="SyncVarsStatic" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsStatic" methodname="SyncVarsStatic" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="839230817" result="Passed" start-time="2020-06-13 18:30:49Z" end-time="2020-06-13 18:30:50Z" duration="0.355112" asserts="0">
                <properties />
              </test-case>
              <test-case id="2103" name="SyncVarsSyncList" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsSyncList" methodname="SyncVarsSyncList" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1178232946" result="Passed" start-time="2020-06-13 18:30:50Z" end-time="2020-06-13 18:30:50Z" duration="0.350639" asserts="0">
                <properties />
              </test-case>
              <test-case id="2096" name="SyncVarsValid" fullname="Mirror.Weaver.Tests.WeaverSyncVarTests.SyncVarsValid" methodname="SyncVarsValid" classname="Mirror.Weaver.Tests.WeaverSyncVarTests" runstate="Runnable" seed="1771983404" result="Passed" start-time="2020-06-13 18:30:50Z" end-time="2020-06-13 18:30:50Z" duration="0.359734" asserts="0">
                <properties />
              </test-case>
            </test-suite>
            <test-suite type="TestFixture" id="2105" name="WeaverTargetRpcTests" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" testcasecount="10" result="Passed" start-time="2020-06-13 18:30:50Z" end-time="2020-06-13 18:30:54Z" duration="3.651447" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="0">
              <properties>
                <property name="Category" value="Weaver" />
              </properties>
              <test-case id="2114" name="AbstractTargetRpc" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.AbstractTargetRpc" methodname="AbstractTargetRpc" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1304087762" result="Passed" start-time="2020-06-13 18:30:51Z" end-time="2020-06-13 18:30:51Z" duration="0.337301" asserts="0">
                <properties />
              </test-case>
              <test-case id="2107" name="ErrorWhenMethodDoesNotStartWithTarget" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.ErrorWhenMethodDoesNotStartWithTarget" methodname="ErrorWhenMethodDoesNotStartWithTarget" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1523467574" result="Passed" start-time="2020-06-13 18:30:51Z" end-time="2020-06-13 18:30:51Z" duration="0.347018" asserts="0">
                <properties />
              </test-case>
              <test-case id="2111" name="ErrorWhenNetworkConnectionIsNotTheFirstParameter" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.ErrorWhenNetworkConnectionIsNotTheFirstParameter" methodname="ErrorWhenNetworkConnectionIsNotTheFirstParameter" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="915057728" result="Passed" start-time="2020-06-13 18:30:51Z" end-time="2020-06-13 18:30:52Z" duration="0.342046" asserts="0">
                <properties />
              </test-case>
              <test-case id="2108" name="ErrorWhenTargetRpcIsStatic" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.ErrorWhenTargetRpcIsStatic" methodname="ErrorWhenTargetRpcIsStatic" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1830165426" result="Passed" start-time="2020-06-13 18:30:52Z" end-time="2020-06-13 18:30:52Z" duration="0.371373" asserts="0">
                <properties />
              </test-case>
              <test-case id="2115" name="OverrideAbstractTargetRpc" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.OverrideAbstractTargetRpc" methodname="OverrideAbstractTargetRpc" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="5862357" result="Passed" start-time="2020-06-13 18:30:52Z" end-time="2020-06-13 18:30:52Z" duration="0.342847" asserts="0">
                <properties />
              </test-case>
              <test-case id="2113" name="OverrideVirtualTargetRpc" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.OverrideVirtualTargetRpc" methodname="OverrideVirtualTargetRpc" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1500498059" result="Passed" start-time="2020-06-13 18:30:52Z" end-time="2020-06-13 18:30:53Z" duration="0.351020" asserts="0">
                <properties />
              </test-case>
              <test-case id="2110" name="TargetRpcCanHaveOtherParametersWhileSkipingNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.TargetRpcCanHaveOtherParametersWhileSkipingNetworkConnection" methodname="TargetRpcCanHaveOtherParametersWhileSkipingNetworkConnection" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="470693363" result="Passed" start-time="2020-06-13 18:30:53Z" end-time="2020-06-13 18:30:53Z" duration="0.354907" asserts="0">
                <properties />
              </test-case>
              <test-case id="2109" name="TargetRpcCanSkipNetworkConnection" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.TargetRpcCanSkipNetworkConnection" methodname="TargetRpcCanSkipNetworkConnection" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="409882330" result="Passed" start-time="2020-06-13 18:30:53Z" end-time="2020-06-13 18:30:53Z" duration="0.339012" asserts="0">
                <properties />
              </test-case>
              <test-case id="2106" name="TargetRpcValid" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.TargetRpcValid" methodname="TargetRpcValid" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="738515887" result="Passed" start-time="2020-06-13 18:30:53Z" end-time="2020-06-13 18:30:54Z" duration="0.342521" asserts="0">
                <properties />
              </test-case>
              <test-case id="2112" name="VirtualTargetRpc" fullname="Mirror.Weaver.Tests.WeaverTargetRpcTests.VirtualTargetRpc" methodname="VirtualTargetRpc" classname="Mirror.Weaver.Tests.WeaverTargetRpcTests" runstate="Runnable" seed="1603258571" result="Passed" start-time="2020-06-13 18:30:54Z" end-time="2020-06-13 18:30:54Z" duration="0.347538" asserts="0">
                <properties />
              </test-case>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
      <test-suite type="TestSuite" id="2768" name="Telepathy" fullname="Telepathy" runstate="Runnable" testcasecount="17" result="Skipped" label="Ignored" start-time="2020-06-13 18:30:56Z" end-time="2020-06-13 18:30:56Z" duration="0.060840" total="17" passed="0" failed="0" inconclusive="0" skipped="17" asserts="0">
        <properties />
        <reason>
          <message><![CDATA[One or more child tests were ignored]]></message>
        </reason>
        <test-suite type="TestSuite" id="2769" name="Tests" fullname="Telepathy.Tests" runstate="Runnable" testcasecount="17" result="Skipped" label="Ignored" start-time="2020-06-13 18:30:56Z" end-time="2020-06-13 18:30:56Z" duration="0.031111" total="17" passed="0" failed="0" inconclusive="0" skipped="17" asserts="0">
          <properties />
          <reason>
            <message><![CDATA[One or more child tests were ignored]]></message>
          </reason>
          <test-suite type="TestFixture" id="1906" name="TransportTest" fullname="Telepathy.Tests.TransportTest" classname="Telepathy.Tests.TransportTest" runstate="Ignored" testcasecount="17" result="Skipped" label="Ignored" site="SetUp" start-time="2020-06-13 18:30:56Z" end-time="2020-06-13 18:30:56Z" duration="0.013058" total="17" passed="0" failed="0" inconclusive="0" skipped="17" asserts="0">
            <properties>
              <property name="Category" value="Telepathy" />
              <property name="_SKIPREASON" value="Telepathy tests are flaky" />
            </properties>
            <reason>
              <message><![CDATA[Telepathy tests are flaky]]></message>
            </reason>
            <test-case id="1919" name="AllocationAttackTest" fullname="Telepathy.Tests.TransportTest.AllocationAttackTest" methodname="AllocationAttackTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="2004707619" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1913" name="ClientKickedCleanupTest" fullname="Telepathy.Tests.TransportTest.ClientKickedCleanupTest" methodname="ClientKickedCleanupTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1163705039" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1911" name="ClientTest" fullname="Telepathy.Tests.TransportTest.ClientTest" methodname="ClientTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="819742785" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1916" name="ConnectIPv4Test" fullname="Telepathy.Tests.TransportTest.ConnectIPv4Test" methodname="ConnectIPv4Test" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1372814284" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1917" name="ConnectIPv6Test" fullname="Telepathy.Tests.TransportTest.ConnectIPv6Test" methodname="ConnectIPv6Test" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1857569740" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1908" name="DisconnectImmediateTest" fullname="Telepathy.Tests.TransportTest.DisconnectImmediateTest" methodname="DisconnectImmediateTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="2042441305" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1914" name="GetConnectionInfoTest" fullname="Telepathy.Tests.TransportTest.GetConnectionInfoTest" methodname="GetConnectionInfoTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="2114740686" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1923" name="IntToBytesBigNonAllocTest" fullname="Telepathy.Tests.TransportTest.IntToBytesBigNonAllocTest" methodname="IntToBytesBigNonAllocTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="578055940" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1922" name="IntToBytesBigTest" fullname="Telepathy.Tests.TransportTest.IntToBytesBigTest" methodname="IntToBytesBigTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1972451839" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1918" name="LargeMessageTest" fullname="Telepathy.Tests.TransportTest.LargeMessageTest" methodname="LargeMessageTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1017606525" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1907" name="NextConnectionIdTest" fullname="Telepathy.Tests.TransportTest.NextConnectionIdTest" methodname="NextConnectionIdTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="2097549740" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1915" name="ParseLocalHostTest" fullname="Telepathy.Tests.TransportTest.ParseLocalHostTest" methodname="ParseLocalHostTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="874299488" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1912" name="ServerDisconnectClientTest" fullname="Telepathy.Tests.TransportTest.ServerDisconnectClientTest" methodname="ServerDisconnectClientTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="267408487" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1921" name="ServerStartStopRepeatedTest" fullname="Telepathy.Tests.TransportTest.ServerStartStopRepeatedTest" methodname="ServerStartStopRepeatedTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1977623115" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1920" name="ServerStartStopTest" fullname="Telepathy.Tests.TransportTest.ServerStartStopTest" methodname="ServerStartStopTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1177694717" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1910" name="ServerTest" fullname="Telepathy.Tests.TransportTest.ServerTest" methodname="ServerTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1549155141" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
            <test-case id="1909" name="SpamSendTest" fullname="Telepathy.Tests.TransportTest.SpamSendTest" methodname="SpamSendTest" classname="Telepathy.Tests.TransportTest" runstate="Runnable" seed="1147737153" result="Skipped" label="Ignored" site="Parent" start-time="0001-01-01 00:00:00Z" end-time="0001-01-01 00:00:00Z" duration="0.000000" asserts="0">
              <properties />
              <reason>
                <message><![CDATA[OneTimeSetUp: Telepathy tests are flaky]]></message>
              </reason>
            </test-case>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
  </test-suite>
</test-run>